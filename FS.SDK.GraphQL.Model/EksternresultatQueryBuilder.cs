// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EksternresultatQueryBuilder : GraphQlQueryBuilder<EksternresultatQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "kode" },
            new() { Name = "navnOriginalSprak", IsComplex = true, QueryBuilderType = typeof(EksternresultatNavnOriginalSprakQueryBuilder) },
            new() { Name = "navnOversattAlleSprak", IsComplex = true, QueryBuilderType = typeof(EksternresultatNavnOversattAlleSprakQueryBuilder) },
            new() { Name = "beskrivelseAlleSprak", IsComplex = true, QueryBuilderType = typeof(EksternresultatBeskrivelseAlleSprakQueryBuilder) },
            new() { Name = "urlAlleSprak", IsComplex = true, QueryBuilderType = typeof(EksternresultatUrlAlleSprakQueryBuilder) },
            new() { Name = "oppnaddVedLarested", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "studienivaintervall", IsComplex = true, QueryBuilderType = typeof(StudienivaintervallQueryBuilder) },
            new() { Name = "studieniva", IsComplex = true, QueryBuilderType = typeof(StudienivaQueryBuilder) },
            new() { Name = "vurderingsresultatstatus", IsComplex = true, QueryBuilderType = typeof(VurderingsresultatstatusQueryBuilder) },
            new() { Name = "karakter", IsComplex = true, QueryBuilderType = typeof(EksternresultatResultatAlleSprakQueryBuilder) },
            new() { Name = "vekting", IsComplex = true, QueryBuilderType = typeof(EksternresultatVektingQueryBuilder) },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) }
        };

        protected override string TypeName => "Eksternresultat";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EksternresultatQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EksternresultatQueryBuilder ExceptId() => ExceptField("id");

        public EksternresultatQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public EksternresultatQueryBuilder ExceptKode() => ExceptField("kode");

        public EksternresultatQueryBuilder WithNavnOriginalSprak(EksternresultatNavnOriginalSprakQueryBuilder eksternresultatNavnOriginalSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnOriginalSprak", alias, eksternresultatNavnOriginalSprakQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptNavnOriginalSprak() => ExceptField("navnOriginalSprak");

        public EksternresultatQueryBuilder WithNavnOversattAlleSprak(EksternresultatNavnOversattAlleSprakQueryBuilder eksternresultatNavnOversattAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnOversattAlleSprak", alias, eksternresultatNavnOversattAlleSprakQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptNavnOversattAlleSprak() => ExceptField("navnOversattAlleSprak");

        public EksternresultatQueryBuilder WithBeskrivelseAlleSprak(EksternresultatBeskrivelseAlleSprakQueryBuilder eksternresultatBeskrivelseAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("beskrivelseAlleSprak", alias, eksternresultatBeskrivelseAlleSprakQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptBeskrivelseAlleSprak() => ExceptField("beskrivelseAlleSprak");

        public EksternresultatQueryBuilder WithUrlAlleSprak(EksternresultatUrlAlleSprakQueryBuilder eksternresultatUrlAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("urlAlleSprak", alias, eksternresultatUrlAlleSprakQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptUrlAlleSprak() => ExceptField("urlAlleSprak");

        public EksternresultatQueryBuilder WithOppnaddVedLarested(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppnaddVedLarested", alias, organisasjonQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptOppnaddVedLarested() => ExceptField("oppnaddVedLarested");

        public EksternresultatQueryBuilder WithStudienivaintervall(StudienivaintervallQueryBuilder studienivaintervallQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studienivaintervall", alias, studienivaintervallQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptStudienivaintervall() => ExceptField("studienivaintervall");

        public EksternresultatQueryBuilder WithStudieniva(StudienivaQueryBuilder studienivaQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieniva", alias, studienivaQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptStudieniva() => ExceptField("studieniva");

        public EksternresultatQueryBuilder WithVurderingsresultatstatus(VurderingsresultatstatusQueryBuilder vurderingsresultatstatusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsresultatstatus", alias, vurderingsresultatstatusQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptVurderingsresultatstatus() => ExceptField("vurderingsresultatstatus");

        public EksternresultatQueryBuilder WithKarakter(EksternresultatResultatAlleSprakQueryBuilder eksternresultatResultatAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("karakter", alias, eksternresultatResultatAlleSprakQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptKarakter() => ExceptField("karakter");

        public EksternresultatQueryBuilder WithVekting(EksternresultatVektingQueryBuilder eksternresultatVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vekting", alias, eksternresultatVektingQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptVekting() => ExceptField("vekting");

        public EksternresultatQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public EksternresultatQueryBuilder ExceptTermin() => ExceptField("termin");
    }
}
