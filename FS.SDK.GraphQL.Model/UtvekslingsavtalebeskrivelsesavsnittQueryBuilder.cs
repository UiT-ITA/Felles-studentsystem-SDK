// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class UtvekslingsavtalebeskrivelsesavsnittQueryBuilder : GraphQlQueryBuilder<UtvekslingsavtalebeskrivelsesavsnittQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "innhold" },
            new() { Name = "sprak", IsComplex = true, QueryBuilderType = typeof(SprakQueryBuilder) },
            new() { Name = "tekstkategori", IsComplex = true, QueryBuilderType = typeof(TekstkategoriQueryBuilder) },
            new() { Name = "cdmTag" },
            new() { Name = "publiseringstag" },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "rekkefolgenummer" }
        };

        protected override string TypeName => "Utvekslingsavtalebeskrivelsesavsnitt";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptId() => ExceptField("id");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithInnhold(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("innhold", alias, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptInnhold() => ExceptField("innhold");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithSprak(SprakQueryBuilder sprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("sprak", alias, sprakQueryBuilder, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptSprak() => ExceptField("sprak");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithTekstkategori(TekstkategoriQueryBuilder tekstkategoriQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tekstkategori", alias, tekstkategoriQueryBuilder, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptTekstkategori() => ExceptField("tekstkategori");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithCdmTag(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("cdmTag", alias, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptCdmTag() => ExceptField("cdmTag");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithPubliseringstag(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("publiseringstag", alias, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptPubliseringstag() => ExceptField("publiseringstag");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptTermin() => ExceptField("termin");

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder WithRekkefolgenummer(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("rekkefolgenummer", alias, [include, skip]);

        public UtvekslingsavtalebeskrivelsesavsnittQueryBuilder ExceptRekkefolgenummer() => ExceptField("rekkefolgenummer");
    }
}
