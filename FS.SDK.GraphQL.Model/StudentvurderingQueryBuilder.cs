// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class StudentvurderingQueryBuilder : GraphQlQueryBuilder<StudentvurderingQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "student", IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "vurderingsenhet", IsComplex = true, QueryBuilderType = typeof(VurderingsenhetQueryBuilder) }
        };

        public StudentvurderingQueryBuilder() => WithTypeName();

        protected override string TypeName => "Studentvurdering";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public StudentvurderingQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public StudentvurderingQueryBuilder ExceptId() => ExceptField("id");

        public StudentvurderingQueryBuilder WithStudent(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("student", alias, studentVedLarestedQueryBuilder, [include, skip]);

        public StudentvurderingQueryBuilder ExceptStudent() => ExceptField("student");

        public StudentvurderingQueryBuilder WithVurderingsenhet(VurderingsenhetQueryBuilder vurderingsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsenhet", alias, vurderingsenhetQueryBuilder, [include, skip]);

        public StudentvurderingQueryBuilder ExceptVurderingsenhet() => ExceptField("vurderingsenhet");

        public StudentvurderingQueryBuilder WithResultatFragment(ResultatQueryBuilder resultatQueryBuilder, IncludeDirective include = null, SkipDirective skip = null) => WithFragment(resultatQueryBuilder, [include, skip]);

        public StudentvurderingQueryBuilder WithVurderingsmeldingFragment(VurderingsmeldingQueryBuilder vurderingsmeldingQueryBuilder, IncludeDirective include = null, SkipDirective skip = null) => WithFragment(vurderingsmeldingQueryBuilder, [include, skip]);
    }
}
