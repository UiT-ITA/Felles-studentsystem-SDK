// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class VurderingsoppbygningForEmneQueryBuilder : GraphQlQueryBuilder<VurderingsoppbygningForEmneQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "vurderingsordning", IsComplex = true, QueryBuilderType = typeof(VurderingsordningQueryBuilder) },
            new() { Name = "erForhandsvalgt" },
            new() { Name = "erAktiv" },
            new() { Name = "periode", IsComplex = true, QueryBuilderType = typeof(VurderingsoppbygningForEmnePeriodeQueryBuilder) },
            new() { Name = "oppbygningsdeler", IsComplex = true, QueryBuilderType = typeof(VurderingsoppbygningsdelIHierarkiQueryBuilder) }
        };

        protected override string TypeName => "VurderingsoppbygningForEmne";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public VurderingsoppbygningForEmneQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public VurderingsoppbygningForEmneQueryBuilder ExceptId() => ExceptField("id");

        public VurderingsoppbygningForEmneQueryBuilder WithVurderingsordning(VurderingsordningQueryBuilder vurderingsordningQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsordning", alias, vurderingsordningQueryBuilder, [include, skip]);

        public VurderingsoppbygningForEmneQueryBuilder ExceptVurderingsordning() => ExceptField("vurderingsordning");

        public VurderingsoppbygningForEmneQueryBuilder WithErForhandsvalgt(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erForhandsvalgt", alias, [include, skip]);

        public VurderingsoppbygningForEmneQueryBuilder ExceptErForhandsvalgt() => ExceptField("erForhandsvalgt");

        public VurderingsoppbygningForEmneQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public VurderingsoppbygningForEmneQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public VurderingsoppbygningForEmneQueryBuilder WithPeriode(VurderingsoppbygningForEmnePeriodeQueryBuilder vurderingsoppbygningForEmnePeriodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("periode", alias, vurderingsoppbygningForEmnePeriodeQueryBuilder, [include, skip]);

        public VurderingsoppbygningForEmneQueryBuilder ExceptPeriode() => ExceptField("periode");

        public VurderingsoppbygningForEmneQueryBuilder WithOppbygningsdeler(VurderingsoppbygningsdelIHierarkiQueryBuilder vurderingsoppbygningsdelIHierarkiQueryBuilder, QueryBuilderParameter<VurderingsoppbygningsdelerIHierarkiFilterInput> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("oppbygningsdeler", alias, vurderingsoppbygningsdelIHierarkiQueryBuilder, [include, skip], args);
        }

        public VurderingsoppbygningForEmneQueryBuilder ExceptOppbygningsdeler() => ExceptField("oppbygningsdeler");
    }
}
