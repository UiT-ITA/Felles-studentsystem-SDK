// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmnevalgregelVektingQueryBuilder : GraphQlQueryBuilder<EmnevalgregelVektingQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "minimumVekting", IsComplex = true, QueryBuilderType = typeof(MinimumVektingForEmnevalgregelQueryBuilder) },
            new() { Name = "maksimumVekting", IsComplex = true, QueryBuilderType = typeof(MaksimumVektingForEmnevalgregelQueryBuilder) }
        };

        protected override string TypeName => "EmnevalgregelVekting";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmnevalgregelVektingQueryBuilder WithMinimumVekting(MinimumVektingForEmnevalgregelQueryBuilder minimumVektingForEmnevalgregelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("minimumVekting", alias, minimumVektingForEmnevalgregelQueryBuilder, [include, skip]);

        public EmnevalgregelVektingQueryBuilder ExceptMinimumVekting() => ExceptField("minimumVekting");

        public EmnevalgregelVektingQueryBuilder WithMaksimumVekting(MaksimumVektingForEmnevalgregelQueryBuilder maksimumVektingForEmnevalgregelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("maksimumVekting", alias, maksimumVektingForEmnevalgregelQueryBuilder, [include, skip]);

        public EmnevalgregelVektingQueryBuilder ExceptMaksimumVekting() => ExceptField("maksimumVekting");
    }
}
