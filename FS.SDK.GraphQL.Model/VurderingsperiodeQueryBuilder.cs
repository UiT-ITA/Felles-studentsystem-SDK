// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class VurderingsperiodeQueryBuilder : GraphQlQueryBuilder<VurderingsperiodeQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(VurderingsperiodenavnQueryBuilder) },
            new() { Name = "arstall" },
            new() { Name = "kode" },
            new() { Name = "rekkefolgenr" },
            new() { Name = "gjelderTermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "gjelderKunVurderingsavviklingstype", IsComplex = true, QueryBuilderType = typeof(VurderingsavviklingstypeQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "eksternVurderingTillates" }
        };

        protected override string TypeName => "Vurderingsperiode";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public VurderingsperiodeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptId() => ExceptField("id");

        public VurderingsperiodeQueryBuilder WithNavnAlleSprak(VurderingsperiodenavnQueryBuilder vurderingsperiodenavnQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, vurderingsperiodenavnQueryBuilder, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public VurderingsperiodeQueryBuilder WithArstall(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("arstall", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptArstall() => ExceptField("arstall");

        public VurderingsperiodeQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptKode() => ExceptField("kode");

        public VurderingsperiodeQueryBuilder WithRekkefolgenr(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("rekkefolgenr", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptRekkefolgenr() => ExceptField("rekkefolgenr");

        public VurderingsperiodeQueryBuilder WithGjelderTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gjelderTermin", alias, terminQueryBuilder, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptGjelderTermin() => ExceptField("gjelderTermin");

        public VurderingsperiodeQueryBuilder WithGjelderKunVurderingsavviklingstype(VurderingsavviklingstypeQueryBuilder vurderingsavviklingstypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gjelderKunVurderingsavviklingstype", alias, vurderingsavviklingstypeQueryBuilder, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptGjelderKunVurderingsavviklingstype() => ExceptField("gjelderKunVurderingsavviklingstype");

        public VurderingsperiodeQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public VurderingsperiodeQueryBuilder WithEksternVurderingTillates(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("eksternVurderingTillates", alias, [include, skip]);

        public VurderingsperiodeQueryBuilder ExceptEksternVurderingTillates() => ExceptField("eksternVurderingTillates");
    }
}
