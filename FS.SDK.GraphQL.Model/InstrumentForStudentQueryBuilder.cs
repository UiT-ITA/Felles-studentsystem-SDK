// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class InstrumentForStudentQueryBuilder : GraphQlQueryBuilder<InstrumentForStudentQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "instrument", IsComplex = true, QueryBuilderType = typeof(InstrumentQueryBuilder) },
            new() { Name = "hovedinstrument" },
            new() { Name = "aktiv" },
            new() { Name = "studieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "kull", IsComplex = true, QueryBuilderType = typeof(KullQueryBuilder) },
            new() { Name = "merknad", IsComplex = true, QueryBuilderType = typeof(InstrumentForStudentMerknadQueryBuilder) }
        };

        protected override string TypeName => "InstrumentForStudent";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public InstrumentForStudentQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptId() => ExceptField("id");

        public InstrumentForStudentQueryBuilder WithInstrument(InstrumentQueryBuilder instrumentQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("instrument", alias, instrumentQueryBuilder, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptInstrument() => ExceptField("instrument");

        public InstrumentForStudentQueryBuilder WithHovedinstrument(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("hovedinstrument", alias, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptHovedinstrument() => ExceptField("hovedinstrument");

        public InstrumentForStudentQueryBuilder WithAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktiv", alias, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptAktiv() => ExceptField("aktiv");

        public InstrumentForStudentQueryBuilder WithStudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptStudieprogram() => ExceptField("studieprogram");

        public InstrumentForStudentQueryBuilder WithKull(KullQueryBuilder kullQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("kull", alias, kullQueryBuilder, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptKull() => ExceptField("kull");

        public InstrumentForStudentQueryBuilder WithMerknad(InstrumentForStudentMerknadQueryBuilder instrumentForStudentMerknadQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("merknad", alias, instrumentForStudentMerknadQueryBuilder, [include, skip]);

        public InstrumentForStudentQueryBuilder ExceptMerknad() => ExceptField("merknad");
    }
}
