// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class QueryFsRollerFilterInput : IGraphQlInputObject
    {
        private InputPropertyInfo _eierOrganisasjonskode;
        private InputPropertyInfo _erAktiv;
        private InputPropertyInfo _harTilgangTilFagpersonweb;
        private InputPropertyInfo _gjelderUndervisning;
        private InputPropertyInfo _imsRoller;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("eierOrganisasjonskode")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("eierOrganisasjonskode")]
        public QueryBuilderParameter<string> EierOrganisasjonskode
        {
            get => (QueryBuilderParameter<string>)_eierOrganisasjonskode.Value;
            set => _eierOrganisasjonskode = new() { Name = "eierOrganisasjonskode", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("erAktiv")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("erAktiv")]
        public QueryBuilderParameter<ICollection<bool>> ErAktiv
        {
            get => (QueryBuilderParameter<ICollection<bool>>)_erAktiv.Value;
            set => _erAktiv = new() { Name = "erAktiv", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("harTilgangTilFagpersonweb")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("harTilgangTilFagpersonweb")]
        public QueryBuilderParameter<bool?> HarTilgangTilFagpersonweb
        {
            get => (QueryBuilderParameter<bool?>)_harTilgangTilFagpersonweb.Value;
            set => _harTilgangTilFagpersonweb = new() { Name = "harTilgangTilFagpersonweb", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("gjelderUndervisning")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("gjelderUndervisning")]
        public QueryBuilderParameter<bool?> GjelderUndervisning
        {
            get => (QueryBuilderParameter<bool?>)_gjelderUndervisning.Value;
            set => _gjelderUndervisning = new() { Name = "gjelderUndervisning", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("imsRoller")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ImsRolle?>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("imsRoller")]
        public QueryBuilderParameter<ICollection<ImsRolle?>> ImsRoller
        {
            get => (QueryBuilderParameter<ICollection<ImsRolle?>>)_imsRoller.Value;
            set => _imsRoller = new() { Name = "imsRoller", Value = value };
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_eierOrganisasjonskode.Name != null) yield return _eierOrganisasjonskode;
            if (_erAktiv.Name != null) yield return _erAktiv;
            if (_harTilgangTilFagpersonweb.Name != null) yield return _harTilgangTilFagpersonweb;
            if (_gjelderUndervisning.Name != null) yield return _gjelderUndervisning;
            if (_imsRoller.Name != null) yield return _imsRoller;
        }
    }
}
