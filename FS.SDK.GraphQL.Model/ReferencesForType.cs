// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class ReferencesForType : IGraphQlInputObject
    {
        private InputPropertyInfo _typeName;
        private InputPropertyInfo _path;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("typeName")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("typeName")]
        public QueryBuilderParameter<string> TypeName
        {
            get => (QueryBuilderParameter<string>)_typeName.Value;
            set => _typeName = new() { Name = "typeName", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("path")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ReferenceElement>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("path")]
        public QueryBuilderParameter<ICollection<ReferenceElement>> Path
        {
            get => (QueryBuilderParameter<ICollection<ReferenceElement>>)_path.Value;
            set => _path = new() { Name = "path", Value = value };
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_typeName.Name != null) yield return _typeName;
            if (_path.Name != null) yield return _path;
        }
    }
}
