// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class OrganisasjonQueryBuilder : GraphQlQueryBuilder<OrganisasjonQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsnavnAlleSprakQueryBuilder) },
            new() { Name = "organisasjonskode" },
            new() { Name = "forkortelse" },
            new() { Name = "url" },
            new() { Name = "erasmusInstitusjonskode" },
            new() { Name = "type", IsComplex = true, QueryBuilderType = typeof(InstitusjonstypeQueryBuilder) },
            new() { Name = "besoksadresse", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsadresseQueryBuilder) },
            new() { Name = "kanMottaSemesteravgift" },
            new() { Name = "eierInstitusjon", IsComplex = true, QueryBuilderType = typeof(EierinstitusjonQueryBuilder) }
        };

        protected override string TypeName => "Organisasjon";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public OrganisasjonQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptId() => ExceptField("id");

        public OrganisasjonQueryBuilder WithNavnAlleSprak(OrganisasjonsnavnAlleSprakQueryBuilder organisasjonsnavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, organisasjonsnavnAlleSprakQueryBuilder, [include, skip]);

        public OrganisasjonQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public OrganisasjonQueryBuilder WithOrganisasjonskode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("organisasjonskode", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptOrganisasjonskode() => ExceptField("organisasjonskode");

        public OrganisasjonQueryBuilder WithForkortelse(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("forkortelse", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptForkortelse() => ExceptField("forkortelse");

        public OrganisasjonQueryBuilder WithUrl(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("url", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptUrl() => ExceptField("url");

        public OrganisasjonQueryBuilder WithErasmusInstitusjonskode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erasmusInstitusjonskode", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptErasmusInstitusjonskode() => ExceptField("erasmusInstitusjonskode");

        public OrganisasjonQueryBuilder WithType(InstitusjonstypeQueryBuilder institusjonstypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("type", alias, institusjonstypeQueryBuilder, [include, skip]);

        public OrganisasjonQueryBuilder ExceptType() => ExceptField("type");

        public OrganisasjonQueryBuilder WithBesoksadresse(OrganisasjonsadresseQueryBuilder organisasjonsadresseQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("besoksadresse", alias, organisasjonsadresseQueryBuilder, [include, skip]);

        public OrganisasjonQueryBuilder ExceptBesoksadresse() => ExceptField("besoksadresse");

        public OrganisasjonQueryBuilder WithKanMottaSemesteravgift(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanMottaSemesteravgift", alias, [include, skip]);

        public OrganisasjonQueryBuilder ExceptKanMottaSemesteravgift() => ExceptField("kanMottaSemesteravgift");

        public OrganisasjonQueryBuilder WithEierInstitusjon(EierinstitusjonQueryBuilder eierinstitusjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("eierInstitusjon", alias, eierinstitusjonQueryBuilder, [include, skip]);

        public OrganisasjonQueryBuilder ExceptEierInstitusjon() => ExceptField("eierInstitusjon");
    }
}
