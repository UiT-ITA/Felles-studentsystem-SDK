// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EksternresultatIUtdanningsplanQueryBuilder : GraphQlQueryBuilder<EksternresultatIUtdanningsplanQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "eksternresultat", IsComplex = true, QueryBuilderType = typeof(EksternresultatQueryBuilder) },
            new() { Name = "studieoppbygningsdel", IsComplex = true, QueryBuilderType = typeof(StudieoppbygningsdelQueryBuilder) },
            new() { Name = "emnekategori", IsComplex = true, QueryBuilderType = typeof(EmnekategoriQueryBuilder) },
            new() { Name = "valgregel", IsComplex = true, QueryBuilderType = typeof(EmnevalgregelQueryBuilder) },
            new() { Name = "vektingIKvalifikasjon", IsComplex = true, QueryBuilderType = typeof(EksternresultatVektingIKvalifikasjonQueryBuilder) },
            new() { Name = "brukTekstInnpassetPaVitnemal" },
            new() { Name = "seDokumentasjon" },
            new() { Name = "planlagtVekting", IsComplex = true, QueryBuilderType = typeof(EksternresultatIUtdanningsplanPlanlagtVektingQueryBuilder) },
            new() { Name = "oppnaddVekting", IsComplex = true, QueryBuilderType = typeof(EksternresultatIUtdanningsplanOppnaddVektingQueryBuilder) }
        };

        protected override string TypeName => "EksternresultatIUtdanningsplan";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EksternresultatIUtdanningsplanQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptId() => ExceptField("id");

        public EksternresultatIUtdanningsplanQueryBuilder WithEksternresultat(EksternresultatQueryBuilder eksternresultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("eksternresultat", alias, eksternresultatQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptEksternresultat() => ExceptField("eksternresultat");

        public EksternresultatIUtdanningsplanQueryBuilder WithStudieoppbygningsdel(StudieoppbygningsdelQueryBuilder studieoppbygningsdelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieoppbygningsdel", alias, studieoppbygningsdelQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptStudieoppbygningsdel() => ExceptField("studieoppbygningsdel");

        public EksternresultatIUtdanningsplanQueryBuilder WithEmnekategori(EmnekategoriQueryBuilder emnekategoriQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emnekategori", alias, emnekategoriQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptEmnekategori() => ExceptField("emnekategori");

        public EksternresultatIUtdanningsplanQueryBuilder WithValgregel(EmnevalgregelQueryBuilder emnevalgregelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("valgregel", alias, emnevalgregelQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptValgregel() => ExceptField("valgregel");

        public EksternresultatIUtdanningsplanQueryBuilder WithVektingIKvalifikasjon(EksternresultatVektingIKvalifikasjonQueryBuilder eksternresultatVektingIKvalifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vektingIKvalifikasjon", alias, eksternresultatVektingIKvalifikasjonQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptVektingIKvalifikasjon() => ExceptField("vektingIKvalifikasjon");

        public EksternresultatIUtdanningsplanQueryBuilder WithBrukTekstInnpassetPaVitnemal(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("brukTekstInnpassetPaVitnemal", alias, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptBrukTekstInnpassetPaVitnemal() => ExceptField("brukTekstInnpassetPaVitnemal");

        public EksternresultatIUtdanningsplanQueryBuilder WithSeDokumentasjon(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("seDokumentasjon", alias, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptSeDokumentasjon() => ExceptField("seDokumentasjon");

        public EksternresultatIUtdanningsplanQueryBuilder WithPlanlagtVekting(EksternresultatIUtdanningsplanPlanlagtVektingQueryBuilder eksternresultatIUtdanningsplanPlanlagtVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("planlagtVekting", alias, eksternresultatIUtdanningsplanPlanlagtVektingQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptPlanlagtVekting() => ExceptField("planlagtVekting");

        public EksternresultatIUtdanningsplanQueryBuilder WithOppnaddVekting(EksternresultatIUtdanningsplanOppnaddVektingQueryBuilder eksternresultatIUtdanningsplanOppnaddVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppnaddVekting", alias, eksternresultatIUtdanningsplanOppnaddVektingQueryBuilder, [include, skip]);

        public EksternresultatIUtdanningsplanQueryBuilder ExceptOppnaddVekting() => ExceptField("oppnaddVekting");
    }
}
