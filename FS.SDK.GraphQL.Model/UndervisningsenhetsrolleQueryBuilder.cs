// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class UndervisningsenhetsrolleQueryBuilder : GraphQlQueryBuilder<UndervisningsenhetsrolleQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "fsRolle", IsComplex = true, QueryBuilderType = typeof(FsRolleQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "gyldighetsperiode", IsComplex = true, QueryBuilderType = typeof(UndervisningsenhetsrolleGyldighetsperiodeQueryBuilder) },
            new() { Name = "personProfil", IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "undervisningsenhet", IsComplex = true, QueryBuilderType = typeof(UndervisningsenhetQueryBuilder) },
            new() { Name = "fagperson", IsComplex = true, QueryBuilderType = typeof(FagpersonVedLarestedQueryBuilder) },
            new() { Name = "aktivStatus" }
        };

        protected override string TypeName => "Undervisningsenhetsrolle";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public UndervisningsenhetsrolleQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptId() => ExceptField("id");

        public UndervisningsenhetsrolleQueryBuilder WithFsRolle(FsRolleQueryBuilder fsRolleQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fsRolle", alias, fsRolleQueryBuilder, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptFsRolle() => ExceptField("fsRolle");

        public UndervisningsenhetsrolleQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public UndervisningsenhetsrolleQueryBuilder WithGyldighetsperiode(UndervisningsenhetsrolleGyldighetsperiodeQueryBuilder undervisningsenhetsrolleGyldighetsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gyldighetsperiode", alias, undervisningsenhetsrolleGyldighetsperiodeQueryBuilder, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptGyldighetsperiode() => ExceptField("gyldighetsperiode");

        public UndervisningsenhetsrolleQueryBuilder WithPersonProfil(PersonProfilQueryBuilder personProfilQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("personProfil", alias, personProfilQueryBuilder, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptPersonProfil() => ExceptField("personProfil");

        public UndervisningsenhetsrolleQueryBuilder WithUndervisningsenhet(UndervisningsenhetQueryBuilder undervisningsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("undervisningsenhet", alias, undervisningsenhetQueryBuilder, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptUndervisningsenhet() => ExceptField("undervisningsenhet");

        public UndervisningsenhetsrolleQueryBuilder WithFagperson(FagpersonVedLarestedQueryBuilder fagpersonVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fagperson", alias, fagpersonVedLarestedQueryBuilder, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptFagperson() => ExceptField("fagperson");

        public UndervisningsenhetsrolleQueryBuilder WithAktivStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktivStatus", alias, [include, skip]);

        public UndervisningsenhetsrolleQueryBuilder ExceptAktivStatus() => ExceptField("aktivStatus");
    }
}
