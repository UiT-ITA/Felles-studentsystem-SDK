// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class PubliseringsklartEmneForTerminQueryBuilder : GraphQlQueryBuilder<PubliseringsklartEmneForTerminQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "emne", IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "beskrivelsesavsnitt", IsComplex = true, QueryBuilderType = typeof(EmnebeskrivelsesavsnittQueryBuilder) },
            new() { Name = "kanPubliseres" },
            new() { Name = "kanPubliseresTilEksterneRegistre" },
            new() { Name = "url" }
        };

        protected override string TypeName => "PubliseringsklartEmneForTermin";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public PubliseringsklartEmneForTerminQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptId() => ExceptField("id");

        public PubliseringsklartEmneForTerminQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptTermin() => ExceptField("termin");

        public PubliseringsklartEmneForTerminQueryBuilder WithEmne(EmneQueryBuilder emneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emne", alias, emneQueryBuilder, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptEmne() => ExceptField("emne");

        public PubliseringsklartEmneForTerminQueryBuilder WithBeskrivelsesavsnitt(EmnebeskrivelsesavsnittQueryBuilder emnebeskrivelsesavsnittQueryBuilder, QueryBuilderParameter<PubliseringsklartEmneForTerminBeskrivelserFilterInput> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("beskrivelsesavsnitt", alias, emnebeskrivelsesavsnittQueryBuilder, [include, skip], args);
        }

        public PubliseringsklartEmneForTerminQueryBuilder ExceptBeskrivelsesavsnitt() => ExceptField("beskrivelsesavsnitt");

        public PubliseringsklartEmneForTerminQueryBuilder WithKanPubliseres(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseres", alias, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptKanPubliseres() => ExceptField("kanPubliseres");

        public PubliseringsklartEmneForTerminQueryBuilder WithKanPubliseresTilEksterneRegistre(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseresTilEksterneRegistre", alias, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptKanPubliseresTilEksterneRegistre() => ExceptField("kanPubliseresTilEksterneRegistre");

        public PubliseringsklartEmneForTerminQueryBuilder WithUrl(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("url", alias, [include, skip]);

        public PubliseringsklartEmneForTerminQueryBuilder ExceptUrl() => ExceptField("url");
    }
}
