// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class PolitiattestkravStudentQueryBuilder : GraphQlQueryBuilder<PolitiattestkravStudentQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "studieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "studieretning", IsComplex = true, QueryBuilderType = typeof(StudieretningQueryBuilder) },
            new() { Name = "emne", IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "politiattesttype", IsComplex = true, QueryBuilderType = typeof(PolitiattesttypeQueryBuilder) },
            new() { Name = "godkjentPolitiattest", IsComplex = true, QueryBuilderType = typeof(GodkjentPolitiattestQueryBuilder) }
        };

        protected override string TypeName => "PolitiattestkravStudent";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public PolitiattestkravStudentQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptId() => ExceptField("id");

        public PolitiattestkravStudentQueryBuilder WithStudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptStudieprogram() => ExceptField("studieprogram");

        public PolitiattestkravStudentQueryBuilder WithStudieretning(StudieretningQueryBuilder studieretningQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieretning", alias, studieretningQueryBuilder, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptStudieretning() => ExceptField("studieretning");

        public PolitiattestkravStudentQueryBuilder WithEmne(EmneQueryBuilder emneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emne", alias, emneQueryBuilder, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptEmne() => ExceptField("emne");

        public PolitiattestkravStudentQueryBuilder WithPolitiattesttype(PolitiattesttypeQueryBuilder politiattesttypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("politiattesttype", alias, politiattesttypeQueryBuilder, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptPolitiattesttype() => ExceptField("politiattesttype");

        public PolitiattestkravStudentQueryBuilder WithGodkjentPolitiattest(GodkjentPolitiattestQueryBuilder godkjentPolitiattestQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("godkjentPolitiattest", alias, godkjentPolitiattestQueryBuilder, [include, skip]);

        public PolitiattestkravStudentQueryBuilder ExceptGodkjentPolitiattest() => ExceptField("godkjentPolitiattest");
    }
}
