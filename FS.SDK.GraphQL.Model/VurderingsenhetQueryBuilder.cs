// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class VurderingsenhetQueryBuilder : GraphQlQueryBuilder<VurderingsenhetQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "emne", IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "vurderingsavviklingstype", IsComplex = true, QueryBuilderType = typeof(VurderingsavviklingstypeQueryBuilder) },
            new() { Name = "vurderingsvarighet", IsComplex = true, QueryBuilderType = typeof(VurderingsvarighetQueryBuilder) },
            new() { Name = "trekkfrist" },
            new() { Name = "vurderingsmeldinger", IsComplex = true, QueryBuilderType = typeof(VurderingsmeldingQueryBuilder) },
            new() { Name = "eksamenssystem", IsComplex = true, QueryBuilderType = typeof(VurderingssystemQueryBuilder) },
            new() { Name = "sensurinformasjon", IsComplex = true, QueryBuilderType = typeof(SensurinformasjonQueryBuilder) },
            new() { Name = "vurderingsoppbygningsdel", IsComplex = true, QueryBuilderType = typeof(VurderingsoppbygningsdelQueryBuilder) },
            new() { Name = "merknadForStudent", IsComplex = true, QueryBuilderType = typeof(VurderingsenhetMerknadForStudentQueryBuilder) },
            new() { Name = "terminPeriode", IsComplex = true, QueryBuilderType = typeof(VurderingsenhetTerminperiodeQueryBuilder) },
            new() { Name = "vurderingsperiode", IsComplex = true, QueryBuilderType = typeof(VurderingsperiodeQueryBuilder) },
            new() { Name = "reellVurderingsperiode", IsComplex = true, QueryBuilderType = typeof(VurderingsperiodeQueryBuilder) },
            new() { Name = "resultatfordeling", IsComplex = true, QueryBuilderType = typeof(ResultatfordelingQueryBuilder) },
            new() { Name = "antallKandidater" },
            new() { Name = "antallKandidaterMott" },
            new() { Name = "resultater", IsComplex = true, QueryBuilderType = typeof(ResultatQueryBuilder) }
        };

        protected override string TypeName => "Vurderingsenhet";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public VurderingsenhetQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptId() => ExceptField("id");

        public VurderingsenhetQueryBuilder WithEmne(EmneQueryBuilder emneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emne", alias, emneQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptEmne() => ExceptField("emne");

        public VurderingsenhetQueryBuilder WithVurderingsavviklingstype(VurderingsavviklingstypeQueryBuilder vurderingsavviklingstypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsavviklingstype", alias, vurderingsavviklingstypeQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptVurderingsavviklingstype() => ExceptField("vurderingsavviklingstype");

        public VurderingsenhetQueryBuilder WithVurderingsvarighet(VurderingsvarighetQueryBuilder vurderingsvarighetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsvarighet", alias, vurderingsvarighetQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptVurderingsvarighet() => ExceptField("vurderingsvarighet");

        public VurderingsenhetQueryBuilder WithTrekkfrist(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("trekkfrist", alias, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptTrekkfrist() => ExceptField("trekkfrist");

        public VurderingsenhetQueryBuilder WithVurderingsmeldinger(VurderingsmeldingQueryBuilder vurderingsmeldingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsmeldinger", alias, vurderingsmeldingQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptVurderingsmeldinger() => ExceptField("vurderingsmeldinger");

        public VurderingsenhetQueryBuilder WithEksamenssystem(VurderingssystemQueryBuilder vurderingssystemQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("eksamenssystem", alias, vurderingssystemQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptEksamenssystem() => ExceptField("eksamenssystem");

        public VurderingsenhetQueryBuilder WithSensurinformasjon(SensurinformasjonQueryBuilder sensurinformasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("sensurinformasjon", alias, sensurinformasjonQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptSensurinformasjon() => ExceptField("sensurinformasjon");

        public VurderingsenhetQueryBuilder WithVurderingsoppbygningsdel(VurderingsoppbygningsdelQueryBuilder vurderingsoppbygningsdelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsoppbygningsdel", alias, vurderingsoppbygningsdelQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptVurderingsoppbygningsdel() => ExceptField("vurderingsoppbygningsdel");

        public VurderingsenhetQueryBuilder WithMerknadForStudent(VurderingsenhetMerknadForStudentQueryBuilder vurderingsenhetMerknadForStudentQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("merknadForStudent", alias, vurderingsenhetMerknadForStudentQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptMerknadForStudent() => ExceptField("merknadForStudent");

        public VurderingsenhetQueryBuilder WithTerminPeriode(VurderingsenhetTerminperiodeQueryBuilder vurderingsenhetTerminperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("terminPeriode", alias, vurderingsenhetTerminperiodeQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptTerminPeriode() => ExceptField("terminPeriode");

        public VurderingsenhetQueryBuilder WithVurderingsperiode(VurderingsperiodeQueryBuilder vurderingsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsperiode", alias, vurderingsperiodeQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptVurderingsperiode() => ExceptField("vurderingsperiode");

        public VurderingsenhetQueryBuilder WithReellVurderingsperiode(VurderingsperiodeQueryBuilder vurderingsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("reellVurderingsperiode", alias, vurderingsperiodeQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptReellVurderingsperiode() => ExceptField("reellVurderingsperiode");

        public VurderingsenhetQueryBuilder WithResultatfordeling(ResultatfordelingQueryBuilder resultatfordelingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("resultatfordeling", alias, resultatfordelingQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptResultatfordeling() => ExceptField("resultatfordeling");

        public VurderingsenhetQueryBuilder WithAntallKandidater(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallKandidater", alias, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptAntallKandidater() => ExceptField("antallKandidater");

        public VurderingsenhetQueryBuilder WithAntallKandidaterMott(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallKandidaterMott", alias, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptAntallKandidaterMott() => ExceptField("antallKandidaterMott");

        public VurderingsenhetQueryBuilder WithResultater(ResultatQueryBuilder resultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("resultater", alias, resultatQueryBuilder, [include, skip]);

        public VurderingsenhetQueryBuilder ExceptResultater() => ExceptField("resultater");
    }
}
