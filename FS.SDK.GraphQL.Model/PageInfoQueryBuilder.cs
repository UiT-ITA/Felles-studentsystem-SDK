// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class PageInfoQueryBuilder : GraphQlQueryBuilder<PageInfoQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "hasPreviousPage" },
            new() { Name = "hasNextPage" },
            new() { Name = "startCursor" },
            new() { Name = "endCursor" }
        };

        protected override string TypeName => "PageInfo";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public PageInfoQueryBuilder WithHasPreviousPage(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("hasPreviousPage", alias, [include, skip]);

        public PageInfoQueryBuilder ExceptHasPreviousPage() => ExceptField("hasPreviousPage");

        public PageInfoQueryBuilder WithHasNextPage(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("hasNextPage", alias, [include, skip]);

        public PageInfoQueryBuilder ExceptHasNextPage() => ExceptField("hasNextPage");

        public PageInfoQueryBuilder WithStartCursor(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("startCursor", alias, [include, skip]);

        public PageInfoQueryBuilder ExceptStartCursor() => ExceptField("startCursor");

        public PageInfoQueryBuilder WithEndCursor(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("endCursor", alias, [include, skip]);

        public PageInfoQueryBuilder ExceptEndCursor() => ExceptField("endCursor");
    }
}
