// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmneFagkoblingerQueryBuilder : GraphQlQueryBuilder<EmneFagkoblingerQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "viktigsteFag", IsComplex = true, QueryBuilderType = typeof(FagQueryBuilder) },
            new() { Name = "fag", IsComplex = true, QueryBuilderType = typeof(FagQueryBuilder) }
        };

        protected override string TypeName => "EmneFagkoblinger";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmneFagkoblingerQueryBuilder WithViktigsteFag(FagQueryBuilder fagQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("viktigsteFag", alias, fagQueryBuilder, [include, skip]);

        public EmneFagkoblingerQueryBuilder ExceptViktigsteFag() => ExceptField("viktigsteFag");

        public EmneFagkoblingerQueryBuilder WithFag(FagQueryBuilder fagQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fag", alias, fagQueryBuilder, [include, skip]);

        public EmneFagkoblingerQueryBuilder ExceptFag() => ExceptField("fag");
    }
}
