// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class FakultetQueryBuilder : GraphQlQueryBuilder<FakultetQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(FakultetnavnAlleSprakQueryBuilder) },
            new() { Name = "fakultetsnummer" },
            new() { Name = "organisasjonsenheter", IsComplex = true, QueryBuilderType = typeof(FakultetOrganisasjonsenheterConnectionQueryBuilder) }
        };

        protected override string TypeName => "Fakultet";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public FakultetQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public FakultetQueryBuilder ExceptId() => ExceptField("id");

        public FakultetQueryBuilder WithNavnAlleSprak(FakultetnavnAlleSprakQueryBuilder fakultetnavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, fakultetnavnAlleSprakQueryBuilder, [include, skip]);

        public FakultetQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public FakultetQueryBuilder WithFakultetsnummer(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("fakultetsnummer", alias, [include, skip]);

        public FakultetQueryBuilder ExceptFakultetsnummer() => ExceptField("fakultetsnummer");

        public FakultetQueryBuilder WithOrganisasjonsenheter(FakultetOrganisasjonsenheterConnectionQueryBuilder fakultetOrganisasjonsenheterConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("organisasjonsenheter", alias, fakultetOrganisasjonsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public FakultetQueryBuilder ExceptOrganisasjonsenheter() => ExceptField("organisasjonsenheter");
    }
}
