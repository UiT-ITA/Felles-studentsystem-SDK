// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmnesamlingQueryBuilder : GraphQlQueryBuilder<EmnesamlingQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "kode" },
            new() { Name = "nusKode" },
            new() { Name = "studieniva", IsComplex = true, QueryBuilderType = typeof(StudienivaQueryBuilder) },
            new() { Name = "vekting", IsComplex = true, QueryBuilderType = typeof(VektingIEmnesamlingQueryBuilder) },
            new() { Name = "karakterregel", IsComplex = true, QueryBuilderType = typeof(KarakterregelQueryBuilder) },
            new() { Name = "visesPaVitnemal" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnesamlingnavnAlleSprakQueryBuilder) }
        };

        protected override string TypeName => "Emnesamling";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmnesamlingQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EmnesamlingQueryBuilder ExceptId() => ExceptField("id");

        public EmnesamlingQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public EmnesamlingQueryBuilder ExceptKode() => ExceptField("kode");

        public EmnesamlingQueryBuilder WithNusKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("nusKode", alias, [include, skip]);

        public EmnesamlingQueryBuilder ExceptNusKode() => ExceptField("nusKode");

        public EmnesamlingQueryBuilder WithStudieniva(StudienivaQueryBuilder studienivaQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieniva", alias, studienivaQueryBuilder, [include, skip]);

        public EmnesamlingQueryBuilder ExceptStudieniva() => ExceptField("studieniva");

        public EmnesamlingQueryBuilder WithVekting(VektingIEmnesamlingQueryBuilder vektingIEmnesamlingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vekting", alias, vektingIEmnesamlingQueryBuilder, [include, skip]);

        public EmnesamlingQueryBuilder ExceptVekting() => ExceptField("vekting");

        public EmnesamlingQueryBuilder WithKarakterregel(KarakterregelQueryBuilder karakterregelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("karakterregel", alias, karakterregelQueryBuilder, [include, skip]);

        public EmnesamlingQueryBuilder ExceptKarakterregel() => ExceptField("karakterregel");

        public EmnesamlingQueryBuilder WithVisesPaVitnemal(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("visesPaVitnemal", alias, [include, skip]);

        public EmnesamlingQueryBuilder ExceptVisesPaVitnemal() => ExceptField("visesPaVitnemal");

        public EmnesamlingQueryBuilder WithNavnAlleSprak(EmnesamlingnavnAlleSprakQueryBuilder emnesamlingnavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, emnesamlingnavnAlleSprakQueryBuilder, [include, skip]);

        public EmnesamlingQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");
    }
}
