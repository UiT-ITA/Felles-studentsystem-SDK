// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class QueryBrukereFilterInput : IGraphQlInputObject
    {
        private InputPropertyInfo _eierOrganisasjonskode;
        private InputPropertyInfo _inkluderAvdode;
        private InputPropertyInfo _personProfiler;
        private InputPropertyInfo _kanOverforesTilLms;
        private InputPropertyInfo _brukergrupper;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("eierOrganisasjonskode")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("eierOrganisasjonskode")]
        public QueryBuilderParameter<string> EierOrganisasjonskode
        {
            get => (QueryBuilderParameter<string>)_eierOrganisasjonskode.Value;
            set => _eierOrganisasjonskode = new() { Name = "eierOrganisasjonskode", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("inkluderAvdode")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("inkluderAvdode")]
        public QueryBuilderParameter<bool?> InkluderAvdode
        {
            get => (QueryBuilderParameter<bool?>)_inkluderAvdode.Value;
            set => _inkluderAvdode = new() { Name = "inkluderAvdode", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("personProfiler")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("personProfiler")]
        public QueryBuilderParameter<ICollection<string>> PersonProfiler
        {
            get => (QueryBuilderParameter<ICollection<string>>)_personProfiler.Value;
            set => _personProfiler = new() { Name = "personProfiler", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("kanOverforesTilLms")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("kanOverforesTilLms")]
        public QueryBuilderParameter<bool?> KanOverforesTilLms
        {
            get => (QueryBuilderParameter<bool?>)_kanOverforesTilLms.Value;
            set => _kanOverforesTilLms = new() { Name = "kanOverforesTilLms", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("brukergrupper")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<BrukereBrukergruppeFilterInput>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("brukergrupper")]
        public QueryBuilderParameter<ICollection<BrukereBrukergruppeFilterInput>> Brukergrupper
        {
            get => (QueryBuilderParameter<ICollection<BrukereBrukergruppeFilterInput>>)_brukergrupper.Value;
            set => _brukergrupper = new() { Name = "brukergrupper", Value = value };
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_eierOrganisasjonskode.Name != null) yield return _eierOrganisasjonskode;
            if (_inkluderAvdode.Name != null) yield return _inkluderAvdode;
            if (_personProfiler.Name != null) yield return _personProfiler;
            if (_kanOverforesTilLms.Name != null) yield return _kanOverforesTilLms;
            if (_brukergrupper.Name != null) yield return _brukergrupper;
        }
    }
}
