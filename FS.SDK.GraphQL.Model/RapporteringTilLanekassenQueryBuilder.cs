// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class RapporteringTilLanekassenQueryBuilder : GraphQlQueryBuilder<RapporteringTilLanekassenQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "skolepengerPerSemester" },
            new() { Name = "merknadtekstforLanekassen" }
        };

        protected override string TypeName => "RapporteringTilLanekassen";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public RapporteringTilLanekassenQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public RapporteringTilLanekassenQueryBuilder ExceptId() => ExceptField("id");

        public RapporteringTilLanekassenQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public RapporteringTilLanekassenQueryBuilder ExceptTermin() => ExceptField("termin");

        public RapporteringTilLanekassenQueryBuilder WithSkolepengerPerSemester(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skolepengerPerSemester", alias, [include, skip]);

        public RapporteringTilLanekassenQueryBuilder ExceptSkolepengerPerSemester() => ExceptField("skolepengerPerSemester");

        public RapporteringTilLanekassenQueryBuilder WithMerknadtekstforLanekassen(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("merknadtekstforLanekassen", alias, [include, skip]);

        public RapporteringTilLanekassenQueryBuilder ExceptMerknadtekstforLanekassen() => ExceptField("merknadtekstforLanekassen");
    }
}
