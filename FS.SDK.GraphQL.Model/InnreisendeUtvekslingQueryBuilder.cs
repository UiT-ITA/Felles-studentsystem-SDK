// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class InnreisendeUtvekslingQueryBuilder : GraphQlQueryBuilder<InnreisendeUtvekslingQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "utveksletTil", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "avtale", IsComplex = true, QueryBuilderType = typeof(UtvekslingsavtaleQueryBuilder) },
            new() { Name = "utveksletFra", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "land", IsComplex = true, QueryBuilderType = typeof(LandQueryBuilder) },
            new() { Name = "oppholdstype", IsComplex = true, QueryBuilderType = typeof(UtvekslingsoppholdstypeQueryBuilder) },
            new() { Name = "utvekslingsperiode", IsComplex = true, QueryBuilderType = typeof(InnreisendeUtvekslingsperiodeQueryBuilder) },
            new() { Name = "innreiseperiode", IsComplex = true, QueryBuilderType = typeof(InnreiseperiodeQueryBuilder) },
            new() { Name = "utvekslingsstatus", IsComplex = true, QueryBuilderType = typeof(UtvekslingsstatusQueryBuilder) }
        };

        protected override string TypeName => "InnreisendeUtveksling";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public InnreisendeUtvekslingQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptId() => ExceptField("id");

        public InnreisendeUtvekslingQueryBuilder WithUtveksletTil(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utveksletTil", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptUtveksletTil() => ExceptField("utveksletTil");

        public InnreisendeUtvekslingQueryBuilder WithAvtale(UtvekslingsavtaleQueryBuilder utvekslingsavtaleQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("avtale", alias, utvekslingsavtaleQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptAvtale() => ExceptField("avtale");

        public InnreisendeUtvekslingQueryBuilder WithUtveksletFra(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utveksletFra", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptUtveksletFra() => ExceptField("utveksletFra");

        public InnreisendeUtvekslingQueryBuilder WithLand(LandQueryBuilder landQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("land", alias, landQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptLand() => ExceptField("land");

        public InnreisendeUtvekslingQueryBuilder WithOppholdstype(UtvekslingsoppholdstypeQueryBuilder utvekslingsoppholdstypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppholdstype", alias, utvekslingsoppholdstypeQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptOppholdstype() => ExceptField("oppholdstype");

        public InnreisendeUtvekslingQueryBuilder WithUtvekslingsperiode(InnreisendeUtvekslingsperiodeQueryBuilder innreisendeUtvekslingsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utvekslingsperiode", alias, innreisendeUtvekslingsperiodeQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptUtvekslingsperiode() => ExceptField("utvekslingsperiode");

        public InnreisendeUtvekslingQueryBuilder WithInnreiseperiode(InnreiseperiodeQueryBuilder innreiseperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("innreiseperiode", alias, innreiseperiodeQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptInnreiseperiode() => ExceptField("innreiseperiode");

        public InnreisendeUtvekslingQueryBuilder WithUtvekslingsstatus(UtvekslingsstatusQueryBuilder utvekslingsstatusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utvekslingsstatus", alias, utvekslingsstatusQueryBuilder, [include, skip]);

        public InnreisendeUtvekslingQueryBuilder ExceptUtvekslingsstatus() => ExceptField("utvekslingsstatus");
    }
}
