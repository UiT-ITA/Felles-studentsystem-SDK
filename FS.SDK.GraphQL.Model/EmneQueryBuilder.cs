// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmneQueryBuilder : GraphQlQueryBuilder<EmneQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "kode" },
            new() { Name = "versjonskode" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnenavnAlleSprakQueryBuilder) },
            new() { Name = "navnForkortetAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnenavnForkortetAlleSprakQueryBuilder) },
            new() { Name = "emnetype" },
            new() { Name = "tilbysSomFjernundervisning", IsComplex = true, QueryBuilderType = typeof(FjernundervisningstatusQueryBuilder) },
            new() { Name = "studieniva", IsComplex = true, QueryBuilderType = typeof(StudienivaQueryBuilder) },
            new() { Name = "avgifter", IsComplex = true, QueryBuilderType = typeof(EmneavgiftForTerminQueryBuilder) },
            new() { Name = "vekting", IsComplex = true, QueryBuilderType = typeof(EmneVektingsinformasjonQueryBuilder) },
            new() { Name = "vurderesIPeriode", IsComplex = true, QueryBuilderType = typeof(EmneVurderingsperiodeQueryBuilder) },
            new() { Name = "undervisesIPeriode", IsComplex = true, QueryBuilderType = typeof(EmneUndervisningsperiodeQueryBuilder) },
            new() { Name = "undervisningsoversikt", IsComplex = true, QueryBuilderType = typeof(EmneUndervisningsoversiktQueryBuilder) },
            new() { Name = "rapporteringsstudieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "studieprogramkoblinger", IsComplex = true, QueryBuilderType = typeof(EmneStudieprogramkoblingQueryBuilder) },
            new() { Name = "nusKode" },
            new() { Name = "studieansvarligOrganisasjonsenhet", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "beskrivelsesavsnitt", IsComplex = true, QueryBuilderType = typeof(EmneBeskrivelsesavsnittConnectionQueryBuilder) },
            new() { Name = "undervisningsenheter", IsComplex = true, QueryBuilderType = typeof(EmneUndervisningsenheterConnectionQueryBuilder) },
            new() { Name = "tjenestenummerForLms" },
            new() { Name = "sprakvalg", IsComplex = true, QueryBuilderType = typeof(EmneSprakvalgQueryBuilder) },
            new() { Name = "administrativtAnsvarligOrganisasjonsenhet", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "kanTilbysMedFleksibelFinansiering" },
            new() { Name = "tilgjengeligHosLanekassenPeriode", IsComplex = true, QueryBuilderType = typeof(LanekassenTilgjengelighetsperiodeQueryBuilder) },
            new() { Name = "navnAlleSprakHistorikk", IsComplex = true, QueryBuilderType = typeof(EmneNavnehistorikkQueryBuilder) },
            new() { Name = "fagkoblinger", IsComplex = true, QueryBuilderType = typeof(EmneFagkoblingerQueryBuilder) },
            new() { Name = "tilbysSomEnkeltemne" },
            new() { Name = "kreverStudierett" },
            new() { Name = "samarbeidendeLarested", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "praksistype", IsComplex = true, QueryBuilderType = typeof(PraksistypeQueryBuilder) },
            new() { Name = "url", IsComplex = true, QueryBuilderType = typeof(EmneUrlQueryBuilder) },
            new() { Name = "campuser", IsComplex = true, QueryBuilderType = typeof(EmneCampusQueryBuilder) },
            new() { Name = "publiseringsklartITerminer", IsComplex = true, QueryBuilderType = typeof(PubliseringsklartEmneForTerminQueryBuilder) },
            new() { Name = "antallLovligeVurderingsforsok", IsComplex = true, QueryBuilderType = typeof(AntallLovligeVurderingsforsokQueryBuilder) },
            new() { Name = "antallLovligeUndervisningsforsok", IsComplex = true, QueryBuilderType = typeof(AntallLovligeUndervisningsforsokQueryBuilder) },
            new() { Name = "forkunnskapskrav", IsComplex = true, QueryBuilderType = typeof(ForkunnskapskravQueryBuilder) },
            new() { Name = "iscedFKode" },
            new() { Name = "vurderingsoppbygninger", IsComplex = true, QueryBuilderType = typeof(VurderingsoppbygningForEmneQueryBuilder) },
            new() { Name = "studienivaIntervall", IsComplex = true, QueryBuilderType = typeof(StudienivaintervallQueryBuilder) },
            new() { Name = "erOppgave" },
            new() { Name = "nusklassifikasjon", IsComplex = true, QueryBuilderType = typeof(NusklassifikasjonQueryBuilder) },
            new() { Name = "personroller", IsComplex = true, QueryBuilderType = typeof(EmnerolleQueryBuilder) },
            new() { Name = "vurderingsenheter", IsComplex = true, QueryBuilderType = typeof(EmneVurderingsenheterConnectionQueryBuilder) },
            new() { Name = "pameldingsform" },
            new() { Name = "etteranmeldingsform" },
            new() { Name = "vurderingsperiodeinformasjon", IsComplex = true, QueryBuilderType = typeof(EmneVurderingsperiodeinformasjonConnectionQueryBuilder) },
            new() { Name = "anbefaltForkunnskap", IsComplex = true, QueryBuilderType = typeof(AnbefaltForkunnskapQueryBuilder) },
            new() { Name = "utdanningsregisterSpesifikasjonsId" },
            new() { Name = "utdanningsregisterMulighetsId" },
            new() { Name = "skalEksporteresTilUtdanningsregisteret" }
        };

        protected override string TypeName => "Emne";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmneQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EmneQueryBuilder ExceptId() => ExceptField("id");

        public EmneQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public EmneQueryBuilder ExceptKode() => ExceptField("kode");

        public EmneQueryBuilder WithVersjonskode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("versjonskode", alias, [include, skip]);

        public EmneQueryBuilder ExceptVersjonskode() => ExceptField("versjonskode");

        public EmneQueryBuilder WithNavnAlleSprak(EmnenavnAlleSprakQueryBuilder emnenavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, emnenavnAlleSprakQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public EmneQueryBuilder WithNavnForkortetAlleSprak(EmnenavnForkortetAlleSprakQueryBuilder emnenavnForkortetAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnForkortetAlleSprak", alias, emnenavnForkortetAlleSprakQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptNavnForkortetAlleSprak() => ExceptField("navnForkortetAlleSprak");

        public EmneQueryBuilder WithEmnetype(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("emnetype", alias, [include, skip]);

        public EmneQueryBuilder ExceptEmnetype() => ExceptField("emnetype");

        public EmneQueryBuilder WithTilbysSomFjernundervisning(FjernundervisningstatusQueryBuilder fjernundervisningstatusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tilbysSomFjernundervisning", alias, fjernundervisningstatusQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptTilbysSomFjernundervisning() => ExceptField("tilbysSomFjernundervisning");

        public EmneQueryBuilder WithStudieniva(StudienivaQueryBuilder studienivaQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieniva", alias, studienivaQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptStudieniva() => ExceptField("studieniva");

        public EmneQueryBuilder WithAvgifter(EmneavgiftForTerminQueryBuilder emneavgiftForTerminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("avgifter", alias, emneavgiftForTerminQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptAvgifter() => ExceptField("avgifter");

        public EmneQueryBuilder WithVekting(EmneVektingsinformasjonQueryBuilder emneVektingsinformasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vekting", alias, emneVektingsinformasjonQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptVekting() => ExceptField("vekting");

        public EmneQueryBuilder WithVurderesIPeriode(EmneVurderingsperiodeQueryBuilder emneVurderingsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderesIPeriode", alias, emneVurderingsperiodeQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptVurderesIPeriode() => ExceptField("vurderesIPeriode");

        public EmneQueryBuilder WithUndervisesIPeriode(EmneUndervisningsperiodeQueryBuilder emneUndervisningsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("undervisesIPeriode", alias, emneUndervisningsperiodeQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptUndervisesIPeriode() => ExceptField("undervisesIPeriode");

        public EmneQueryBuilder WithUndervisningsoversikt(EmneUndervisningsoversiktQueryBuilder emneUndervisningsoversiktQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("undervisningsoversikt", alias, emneUndervisningsoversiktQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptUndervisningsoversikt() => ExceptField("undervisningsoversikt");

        public EmneQueryBuilder WithRapporteringsstudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("rapporteringsstudieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptRapporteringsstudieprogram() => ExceptField("rapporteringsstudieprogram");

        public EmneQueryBuilder WithStudieprogramkoblinger(EmneStudieprogramkoblingQueryBuilder emneStudieprogramkoblingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogramkoblinger", alias, emneStudieprogramkoblingQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptStudieprogramkoblinger() => ExceptField("studieprogramkoblinger");

        public EmneQueryBuilder WithNusKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("nusKode", alias, [include, skip]);

        public EmneQueryBuilder ExceptNusKode() => ExceptField("nusKode");

        public EmneQueryBuilder WithStudieansvarligOrganisasjonsenhet(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieansvarligOrganisasjonsenhet", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptStudieansvarligOrganisasjonsenhet() => ExceptField("studieansvarligOrganisasjonsenhet");

        public EmneQueryBuilder WithBeskrivelsesavsnitt(EmneBeskrivelsesavsnittConnectionQueryBuilder emneBeskrivelsesavsnittConnectionQueryBuilder, QueryBuilderParameter<EmnebeskrivelsesavsnittFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("beskrivelsesavsnitt", alias, emneBeskrivelsesavsnittConnectionQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptBeskrivelsesavsnitt() => ExceptField("beskrivelsesavsnitt");

        public EmneQueryBuilder WithUndervisningsenheter(EmneUndervisningsenheterConnectionQueryBuilder emneUndervisningsenheterConnectionQueryBuilder, QueryBuilderParameter<EmneUndervisningsenheterFilter> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsenheter", alias, emneUndervisningsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptUndervisningsenheter() => ExceptField("undervisningsenheter");

        public EmneQueryBuilder WithTjenestenummerForLms(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("tjenestenummerForLms", alias, [include, skip]);

        public EmneQueryBuilder ExceptTjenestenummerForLms() => ExceptField("tjenestenummerForLms");

        public EmneQueryBuilder WithSprakvalg(EmneSprakvalgQueryBuilder emneSprakvalgQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("sprakvalg", alias, emneSprakvalgQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptSprakvalg() => ExceptField("sprakvalg");

        public EmneQueryBuilder WithAdministrativtAnsvarligOrganisasjonsenhet(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("administrativtAnsvarligOrganisasjonsenhet", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptAdministrativtAnsvarligOrganisasjonsenhet() => ExceptField("administrativtAnsvarligOrganisasjonsenhet");

        public EmneQueryBuilder WithKanTilbysMedFleksibelFinansiering(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanTilbysMedFleksibelFinansiering", alias, [include, skip]);

        public EmneQueryBuilder ExceptKanTilbysMedFleksibelFinansiering() => ExceptField("kanTilbysMedFleksibelFinansiering");

        public EmneQueryBuilder WithTilgjengeligHosLanekassenPeriode(LanekassenTilgjengelighetsperiodeQueryBuilder lanekassenTilgjengelighetsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tilgjengeligHosLanekassenPeriode", alias, lanekassenTilgjengelighetsperiodeQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptTilgjengeligHosLanekassenPeriode() => ExceptField("tilgjengeligHosLanekassenPeriode");

        public EmneQueryBuilder WithNavnAlleSprakHistorikk(EmneNavnehistorikkQueryBuilder emneNavnehistorikkQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprakHistorikk", alias, emneNavnehistorikkQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptNavnAlleSprakHistorikk() => ExceptField("navnAlleSprakHistorikk");

        public EmneQueryBuilder WithFagkoblinger(EmneFagkoblingerQueryBuilder emneFagkoblingerQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fagkoblinger", alias, emneFagkoblingerQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptFagkoblinger() => ExceptField("fagkoblinger");

        public EmneQueryBuilder WithTilbysSomEnkeltemne(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("tilbysSomEnkeltemne", alias, [include, skip]);

        public EmneQueryBuilder ExceptTilbysSomEnkeltemne() => ExceptField("tilbysSomEnkeltemne");

        public EmneQueryBuilder WithKreverStudierett(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kreverStudierett", alias, [include, skip]);

        public EmneQueryBuilder ExceptKreverStudierett() => ExceptField("kreverStudierett");

        public EmneQueryBuilder WithSamarbeidendeLarested(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("samarbeidendeLarested", alias, organisasjonQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptSamarbeidendeLarested() => ExceptField("samarbeidendeLarested");

        public EmneQueryBuilder WithPraksistype(PraksistypeQueryBuilder praksistypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("praksistype", alias, praksistypeQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptPraksistype() => ExceptField("praksistype");

        public EmneQueryBuilder WithUrl(EmneUrlQueryBuilder emneUrlQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("url", alias, emneUrlQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptUrl() => ExceptField("url");

        public EmneQueryBuilder WithCampuser(EmneCampusQueryBuilder emneCampusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("campuser", alias, emneCampusQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptCampuser() => ExceptField("campuser");

        public EmneQueryBuilder WithPubliseringsklartITerminer(PubliseringsklartEmneForTerminQueryBuilder publiseringsklartEmneForTerminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("publiseringsklartITerminer", alias, publiseringsklartEmneForTerminQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptPubliseringsklartITerminer() => ExceptField("publiseringsklartITerminer");

        public EmneQueryBuilder WithAntallLovligeVurderingsforsok(AntallLovligeVurderingsforsokQueryBuilder antallLovligeVurderingsforsokQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("antallLovligeVurderingsforsok", alias, antallLovligeVurderingsforsokQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptAntallLovligeVurderingsforsok() => ExceptField("antallLovligeVurderingsforsok");

        public EmneQueryBuilder WithAntallLovligeUndervisningsforsok(AntallLovligeUndervisningsforsokQueryBuilder antallLovligeUndervisningsforsokQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("antallLovligeUndervisningsforsok", alias, antallLovligeUndervisningsforsokQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptAntallLovligeUndervisningsforsok() => ExceptField("antallLovligeUndervisningsforsok");

        public EmneQueryBuilder WithForkunnskapskrav(ForkunnskapskravQueryBuilder forkunnskapskravQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("forkunnskapskrav", alias, forkunnskapskravQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptForkunnskapskrav() => ExceptField("forkunnskapskrav");

        public EmneQueryBuilder WithIscedFKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("iscedFKode", alias, [include, skip]);

        public EmneQueryBuilder ExceptIscedFKode() => ExceptField("iscedFKode");

        public EmneQueryBuilder WithVurderingsoppbygninger(VurderingsoppbygningForEmneQueryBuilder vurderingsoppbygningForEmneQueryBuilder, QueryBuilderParameter<VurderingsoppbygningerForEmneFilterInput> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("vurderingsoppbygninger", alias, vurderingsoppbygningForEmneQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptVurderingsoppbygninger() => ExceptField("vurderingsoppbygninger");

        public EmneQueryBuilder WithStudienivaIntervall(StudienivaintervallQueryBuilder studienivaintervallQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studienivaIntervall", alias, studienivaintervallQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptStudienivaIntervall() => ExceptField("studienivaIntervall");

        public EmneQueryBuilder WithErOppgave(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erOppgave", alias, [include, skip]);

        public EmneQueryBuilder ExceptErOppgave() => ExceptField("erOppgave");

        public EmneQueryBuilder WithNusklassifikasjon(NusklassifikasjonQueryBuilder nusklassifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("nusklassifikasjon", alias, nusklassifikasjonQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptNusklassifikasjon() => ExceptField("nusklassifikasjon");

        public EmneQueryBuilder WithPersonroller(EmnerolleQueryBuilder emnerolleQueryBuilder, QueryBuilderParameter<EmnePersonrollerFilter> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("personroller", alias, emnerolleQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptPersonroller() => ExceptField("personroller");

        public EmneQueryBuilder WithVurderingsenheter(EmneVurderingsenheterConnectionQueryBuilder emneVurderingsenheterConnectionQueryBuilder, QueryBuilderParameter<EmneVurderingsenheterFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsenheter", alias, emneVurderingsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptVurderingsenheter() => ExceptField("vurderingsenheter");

        public EmneQueryBuilder WithPameldingsform(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("pameldingsform", alias, [include, skip]);

        public EmneQueryBuilder ExceptPameldingsform() => ExceptField("pameldingsform");

        public EmneQueryBuilder WithEtteranmeldingsform(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("etteranmeldingsform", alias, [include, skip]);

        public EmneQueryBuilder ExceptEtteranmeldingsform() => ExceptField("etteranmeldingsform");

        public EmneQueryBuilder WithVurderingsperiodeinformasjon(EmneVurderingsperiodeinformasjonConnectionQueryBuilder emneVurderingsperiodeinformasjonConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsperiodeinformasjon", alias, emneVurderingsperiodeinformasjonConnectionQueryBuilder, [include, skip], args);
        }

        public EmneQueryBuilder ExceptVurderingsperiodeinformasjon() => ExceptField("vurderingsperiodeinformasjon");

        public EmneQueryBuilder WithAnbefaltForkunnskap(AnbefaltForkunnskapQueryBuilder anbefaltForkunnskapQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("anbefaltForkunnskap", alias, anbefaltForkunnskapQueryBuilder, [include, skip]);

        public EmneQueryBuilder ExceptAnbefaltForkunnskap() => ExceptField("anbefaltForkunnskap");

        public EmneQueryBuilder WithUtdanningsregisterSpesifikasjonsId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("utdanningsregisterSpesifikasjonsId", alias, [include, skip]);

        public EmneQueryBuilder ExceptUtdanningsregisterSpesifikasjonsId() => ExceptField("utdanningsregisterSpesifikasjonsId");

        public EmneQueryBuilder WithUtdanningsregisterMulighetsId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("utdanningsregisterMulighetsId", alias, [include, skip]);

        public EmneQueryBuilder ExceptUtdanningsregisterMulighetsId() => ExceptField("utdanningsregisterMulighetsId");

        public EmneQueryBuilder WithSkalEksporteresTilUtdanningsregisteret(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skalEksporteresTilUtdanningsregisteret", alias, [include, skip]);

        public EmneQueryBuilder ExceptSkalEksporteresTilUtdanningsregisteret() => ExceptField("skalEksporteresTilUtdanningsregisteret");
    }
}
