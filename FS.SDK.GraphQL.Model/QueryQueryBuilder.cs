// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class QueryQueryBuilder : GraphQlQueryBuilder<QueryQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "node", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(NodeQueryBuilder) },
            new() { Name = "studenterGittFeideBrukere", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "studieprogramV2", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieprogramV2ConnectionQueryBuilder) },
            new() { Name = "publiseringsklareStudieprogram", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPubliseringsklartStudieprogramForTerminConnectionQueryBuilder) },
            new() { Name = "studieprogramGittStudieprogramkoderV2", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "emnerV2", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmneConnectionQueryBuilder) },
            new() { Name = "publiseringsklareEmner", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPubliseringsklartEmneForTerminConnectionQueryBuilder) },
            new() { Name = "emnerGittEmnekoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "studenterGittPersonlopenumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "studenterGittStudentnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "land", IsComplex = true, QueryBuilderType = typeof(QueryLandConnectionQueryBuilder) },
            new() { Name = "programStudieretter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryProgramStudieretterConnectionQueryBuilder) },
            new() { Name = "personProfiler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPersonProfilerConnectionQueryBuilder) },
            new() { Name = "studieoppbygninger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieoppbygningerConnectionQueryBuilder) },
            new() { Name = "evuKurs", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvuKursConnectionQueryBuilder) },
            new() { Name = "campuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryCampuserConnectionQueryBuilder) },
            new() { Name = "terminer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryTerminerConnectionQueryBuilder) },
            new() { Name = "terminbetegnelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryTerminbetegnelserConnectionQueryBuilder) },
            new() { Name = "organisasjonsenheter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryOrganisasjonsenheterConnectionQueryBuilder) },
            new() { Name = "studenter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudenterConnectionQueryBuilder) },
            new() { Name = "megVedLarested", IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "undervisningsenheter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsenheterConnectionQueryBuilder) },
            new() { Name = "biblioteker", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryBibliotekerConnectionQueryBuilder) },
            new() { Name = "evuKursSoknader", IsComplex = true, QueryBuilderType = typeof(QueryEvuKursSoknaderConnectionQueryBuilder) },
            new() { Name = "evuKursroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvuKursrollerConnectionQueryBuilder) },
            new() { Name = "studenthendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudenthendelserConnectionQueryBuilder) },
            new() { Name = "studentStatuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudentStatuserConnectionQueryBuilder) },
            new() { Name = "studieprogramroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieprogramrollerConnectionQueryBuilder) },
            new() { Name = "kullroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKullrollerConnectionQueryBuilder) },
            new() { Name = "kull", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKullConnectionQueryBuilder) },
            new() { Name = "klasseroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlasserollerConnectionQueryBuilder) },
            new() { Name = "studieprogramhendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieprogramhendelserConnectionQueryBuilder) },
            new() { Name = "emnehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmnehendelserConnectionQueryBuilder) },
            new() { Name = "evukurshendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvukurshendelserConnectionQueryBuilder) },
            new() { Name = "emneroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmnerollerConnectionQueryBuilder) },
            new() { Name = "emneSoknader", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmneSoknaderConnectionQueryBuilder) },
            new() { Name = "undervisningsenhetsroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsenhetsrollerConnectionQueryBuilder) },
            new() { Name = "undervisningsaktivitetsroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsaktivitetsrollerConnectionQueryBuilder) },
            new() { Name = "brukere", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryBrukereConnectionQueryBuilder) },
            new() { Name = "timeplanroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryTimeplanrollerConnectionQueryBuilder) },
            new() { Name = "timeplanrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryTimeplanrollehendelserConnectionQueryBuilder) },
            new() { Name = "vektingsredukjonsregler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVektingsredukjonsreglerConnectionQueryBuilder) },
            new() { Name = "esiKandidater", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEsiKandidaterConnectionQueryBuilder) },
            new() { Name = "personProfilerGittFodselsnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "personProfilerGittPersonlopenumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "studenterGittFodselsnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "studenterGittLanetakerIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "organisasjoner", IsComplex = true, QueryBuilderType = typeof(QueryOrganisasjonerConnectionQueryBuilder) },
            new() { Name = "nodes", IsComplex = true, QueryBuilderType = typeof(NodeQueryBuilder) },
            new() { Name = "studietilpasningstyper", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudietilpasningstyperConnectionQueryBuilder) },
            new() { Name = "romutstyrtyper", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryRomutstyrtyperConnectionQueryBuilder) },
            new() { Name = "rom", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryRomConnectionQueryBuilder) },
            new() { Name = "samtykkekrav", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySamtykkekravConnectionQueryBuilder) },
            new() { Name = "utvekslingsavtaler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUtvekslingsavtalerConnectionQueryBuilder) },
            new() { Name = "tekstkategorier", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryTekstkategorierConnectionQueryBuilder) },
            new() { Name = "studentkortstatuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudentkortstatuserConnectionQueryBuilder) },
            new() { Name = "meldingerOmDodsfall", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryMeldingerOmDodsfallConnectionQueryBuilder) },
            new() { Name = "fravarsarsaker", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFravarsarsakerConnectionQueryBuilder) },
            new() { Name = "meldingerOmFodselsnummerendring", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryMeldingerOmFodselsnummerendringConnectionQueryBuilder) },
            new() { Name = "klasser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlasserConnectionQueryBuilder) },
            new() { Name = "klasserGittKlassekoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KlasseQueryBuilder) },
            new() { Name = "kullcampuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKullcampuserConnectionQueryBuilder) },
            new() { Name = "fagpersoner", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFagpersonerConnectionQueryBuilder) },
            new() { Name = "fagpersonerGittFodselsnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FagpersonVedLarestedQueryBuilder) },
            new() { Name = "fagpersonerGittPersonlopenumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FagpersonVedLarestedQueryBuilder) },
            new() { Name = "undervisingstilpasningskategorier", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisingstilpasningskategorierConnectionQueryBuilder) },
            new() { Name = "vurderingsenheter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsenheterConnectionQueryBuilder) },
            new() { Name = "evukursGittKurskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EvuKursQueryBuilder) },
            new() { Name = "semesterInformasjon", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySemesterInformasjonConnectionQueryBuilder) },
            new() { Name = "politiattesttyper", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPolitiattesttyperConnectionQueryBuilder) },
            new() { Name = "vektingstyper", IsComplex = true, QueryBuilderType = typeof(QueryVektingstyperConnectionQueryBuilder) },
            new() { Name = "semesterregistreringer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySemesterregistreringerConnectionQueryBuilder) },
            new() { Name = "landGittLandkodeAlfa3", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LandQueryBuilder) },
            new() { Name = "studentgrunnlag", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudentgrunnlagConnectionQueryBuilder) },
            new() { Name = "kvalifikasjonsgrunnlag", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKvalifikasjonsgrunnlagConnectionQueryBuilder) },
            new() { Name = "studierettstatuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudierettstatuserConnectionQueryBuilder) },
            new() { Name = "studieretninger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieretningerConnectionQueryBuilder) },
            new() { Name = "studieretningerGittStudieretningskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudieretningQueryBuilder) },
            new() { Name = "resultater", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryResultaterConnectionQueryBuilder) },
            new() { Name = "campuserGittCampuskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(CampusQueryBuilder) },
            new() { Name = "emneStudieretter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmneStudieretterConnectionQueryBuilder) },
            new() { Name = "undervisningspartiplasseringer", IsComplex = true, QueryBuilderType = typeof(QueryUndervisningspartiplasseringerConnectionQueryBuilder) },
            new() { Name = "fsRoller", IsComplex = true, QueryBuilderType = typeof(QueryFsRollerConnectionQueryBuilder) },
            new() { Name = "fsRollerGittRollekoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FsRolleQueryBuilder) },
            new() { Name = "vurderingsenheterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VurderingsenhetQueryBuilder) },
            new() { Name = "studieoppbygningsdeler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieoppbygningsdelerConnectionQueryBuilder) },
            new() { Name = "studieoppbygningsdelerGittStudieoppbygningsdelkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudieoppbygningsdelQueryBuilder) },
            new() { Name = "utdanningsplanelementer", IsComplex = true, QueryBuilderType = typeof(QueryUtdanningsplanelementerConnectionQueryBuilder) },
            new() { Name = "vurderingsresultatstatuser", IsComplex = true, QueryBuilderType = typeof(QueryVurderingsresultatstatuserConnectionQueryBuilder) },
            new() { Name = "tidsenheter", IsComplex = true, QueryBuilderType = typeof(QueryTidsenheterConnectionQueryBuilder) },
            new() { Name = "utdanningsplanelementtyper", IsComplex = true, QueryBuilderType = typeof(QueryUtdanningsplanelementtyperConnectionQueryBuilder) },
            new() { Name = "klassebetegnelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlassebetegnelserConnectionQueryBuilder) },
            new() { Name = "klassemedlemskap", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlassemedlemskapConnectionQueryBuilder) },
            new() { Name = "karakterreglerGittKarakterregelkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KarakterregelQueryBuilder) },
            new() { Name = "bygninger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryBygningerConnectionQueryBuilder) },
            new() { Name = "romtyper", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryRomtyperConnectionQueryBuilder) },
            new() { Name = "bygningerGittBygningskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BygningQueryBuilder) },
            new() { Name = "romGittRomkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RomQueryBuilder) },
            new() { Name = "sprak", IsComplex = true, QueryBuilderType = typeof(QuerySprakConnectionQueryBuilder) },
            new() { Name = "sprakGittSprakkoder", IsComplex = true, QueryBuilderType = typeof(SprakQueryBuilder) },
            new() { Name = "sprakGitt6391Sprakkoder", IsComplex = true, QueryBuilderType = typeof(SprakQueryBuilder) },
            new() { Name = "sprakGitt6392Sprakkoder", IsComplex = true, QueryBuilderType = typeof(SprakQueryBuilder) },
            new() { Name = "emnerollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmnerollehendelserConnectionQueryBuilder) },
            new() { Name = "programStudieretthendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryProgramStudieretthendelserConnectionQueryBuilder) },
            new() { Name = "vurderingsresultatstatuserGittVurderingsresultatstatuskoder", IsComplex = true, QueryBuilderType = typeof(VurderingsresultatstatusQueryBuilder) },
            new() { Name = "studieprogramrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryStudieprogramrollehendelserConnectionQueryBuilder) },
            new() { Name = "klassemedlemskapshendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlassemedlemskapshendelserConnectionQueryBuilder) },
            new() { Name = "undervisningspartiplasseringshendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningspartiplasseringshendelserConnectionQueryBuilder) },
            new() { Name = "kullrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKullrollehendelserConnectionQueryBuilder) },
            new() { Name = "klasserollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryKlasserollehendelserConnectionQueryBuilder) },
            new() { Name = "evuKursrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvuKursrollehendelserConnectionQueryBuilder) },
            new() { Name = "undervisningsenhetsrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsenhetsrollehendelserConnectionQueryBuilder) },
            new() { Name = "undervisningsaktivitetsrollehendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsaktivitetsrollehendelserConnectionQueryBuilder) },
            new() { Name = "studienivaintervaller", IsComplex = true, QueryBuilderType = typeof(QueryStudienivaintervallerConnectionQueryBuilder) },
            new() { Name = "fodselsnummerendringer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFodselsnummerendringerConnectionQueryBuilder) },
            new() { Name = "studienivaer", IsComplex = true, QueryBuilderType = typeof(QueryStudienivaerConnectionQueryBuilder) },
            new() { Name = "evuKursGittEvuKurskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EvuKursQueryBuilder) },
            new() { Name = "studienivaerGittStudienivakoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudienivaQueryBuilder) },
            new() { Name = "klassemedlemskapGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KlassemedlemskapQueryBuilder) },
            new() { Name = "vurderingsordninger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsordningerConnectionQueryBuilder) },
            new() { Name = "vurderingsordningerGittVurderingsordningskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VurderingsordningQueryBuilder) },
            new() { Name = "vurderingsoppbygningsdeler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsoppbygningsdelerConnectionQueryBuilder) },
            new() { Name = "vurderingsoppbygningsdelerGittVurderingsoppbygningsdelkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VurderingsoppbygningsdelQueryBuilder) },
            new() { Name = "undervisningsorganiseringer", IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsorganiseringerConnectionQueryBuilder) },
            new() { Name = "godkjenningsinstanser", IsComplex = true, QueryBuilderType = typeof(QueryGodkjenningsinstanserConnectionQueryBuilder) },
            new() { Name = "deltakere", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryDeltakereConnectionQueryBuilder) },
            new() { Name = "deltakereGittDeltakernumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DeltakerVedLarestedQueryBuilder) },
            new() { Name = "deltakereGittPersonlopenumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DeltakerVedLarestedQueryBuilder) },
            new() { Name = "terminerGittTerminkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "kullGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KullQueryBuilder) },
            new() { Name = "evuKursSoknadHendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvuKursSoknadHendelserConnectionQueryBuilder) },
            new() { Name = "emneSoknadHendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEmneSoknadHendelserConnectionQueryBuilder) },
            new() { Name = "fakulteter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFakulteterConnectionQueryBuilder) },
            new() { Name = "emneSoknaderGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EmneSoknadQueryBuilder) },
            new() { Name = "emneStudieretterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EmneStudierettQueryBuilder) },
            new() { Name = "organisasjonsenheterGittOrganisasjonsenhetskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "semesterregistreringerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SemesterregistreringQueryBuilder) },
            new() { Name = "undervisningsaktiviteter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsaktiviteterConnectionQueryBuilder) },
            new() { Name = "undervisningsaktiviteterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningsaktivitetQueryBuilder) },
            new() { Name = "vurderingsmeldinger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsmeldingerConnectionQueryBuilder) },
            new() { Name = "evuKursdeltakelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryEvuKursdeltakelserConnectionQueryBuilder) },
            new() { Name = "evuKursdeltakelserGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EvuKursdeltakelseQueryBuilder) },
            new() { Name = "semesterregistreringshendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySemesterregistreringshendelserConnectionQueryBuilder) },
            new() { Name = "evuKursSoknaderGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EvuKursSoknadQueryBuilder) },
            new() { Name = "personProfilhendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPersonProfilhendelserConnectionQueryBuilder) },
            new() { Name = "personProfilerGittFeideBrukere", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "personProfilerGittAnsattnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "vurderingsperioder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsperioderConnectionQueryBuilder) },
            new() { Name = "vurderingsavviklingstyper", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsavviklingstyperConnectionQueryBuilder) },
            new() { Name = "organisasjonerGittOrganisasjonskoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "kvalifikasjonsgrunnlagGittKvalifikasjonsgrunnlagkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KvalifikasjonsgrunnlagQueryBuilder) },
            new() { Name = "studentgrunnlagGittStudentgrunnlagkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentgrunnlagQueryBuilder) },
            new() { Name = "personroller", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryPersonrollerConnectionQueryBuilder) },
            new() { Name = "programStudieretterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ProgramStudierettQueryBuilder) },
            new() { Name = "personrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetsrolleQueryBuilder) },
            new() { Name = "studieprogramrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudieprogramrolleQueryBuilder) },
            new() { Name = "kullrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KullrolleQueryBuilder) },
            new() { Name = "klasserollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(KlasserolleQueryBuilder) },
            new() { Name = "emnerollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(EmnerolleQueryBuilder) },
            new() { Name = "undervisningsenhetsrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningsenhetsrolleQueryBuilder) },
            new() { Name = "undervisningsaktivitetsrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningsaktivitetsrolleQueryBuilder) },
            new() { Name = "timeplanrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimeplanrolleQueryBuilder) },
            new() { Name = "organisasjonsenhetsrollerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetsrolleQueryBuilder) },
            new() { Name = "vurderingsperiodeinformasjon", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryVurderingsperiodeinformasjonConnectionQueryBuilder) },
            new() { Name = "undervisningsterminerForEmner", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsterminerForEmnerConnectionQueryBuilder) },
            new() { Name = "undervisningsdisipliner", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsdisiplinerConnectionQueryBuilder) },
            new() { Name = "undervisningsformer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsformerConnectionQueryBuilder) },
            new() { Name = "lmsRomMaler", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryLmsRomMalerConnectionQueryBuilder) },
            new() { Name = "lmsRomMalerGittLmsRomMalkoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LmsRomMalQueryBuilder) },
            new() { Name = "undervisningsenheterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningsenhetQueryBuilder) },
            new() { Name = "vurderingsperioderGittVurderingsperiodekoder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VurderingsperiodeQueryBuilder) },
            new() { Name = "fodselsnummerendringshendelser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFodselsnummerendringshendelserConnectionQueryBuilder) },
            new() { Name = "undervisningspartiplasseringerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningspartiplasseringQueryBuilder) },
            new() { Name = "undervisningsaktivitetsonsker", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryUndervisningsaktivitetsonskerConnectionQueryBuilder) },
            new() { Name = "studentvurderinger", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(StudentvurderingQueryBuilder) },
            new() { Name = "resultaterGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ResultatQueryBuilder) },
            new() { Name = "vurderingsmeldingerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VurderingsmeldingQueryBuilder) },
            new() { Name = "undervisningsaktivitetsonskerGittLegacyIder", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UndervisningsaktivitetsonskeQueryBuilder) },
            new() { Name = "landGittLandnumre", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LandQueryBuilder) },
            new() { Name = "fagpersonkategorier", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFagpersonkategorierConnectionQueryBuilder) },
            new() { Name = "sisOpptak", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySisOpptakConnectionQueryBuilder) },
            new() { Name = "sisOpptaksterminer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QuerySisOpptaksterminerConnectionQueryBuilder) },
            new() { Name = "oppmoterTilUndervisning", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryOppmoterTilUndervisningConnectionQueryBuilder) },
            new() { Name = "fag", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryFagConnectionQueryBuilder) },
            new() { Name = "campusUndervisningsenheter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(QueryCampusUndervisningsenheterConnectionQueryBuilder) }
        };

        protected override string TypeName => "Query";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public QueryQueryBuilder(string operationName = null) : base("query", operationName)
        {
        }

        public QueryQueryBuilder WithParameter<T>(GraphQlQueryParameter<T> parameter) => WithParameterInternal(parameter);

        public QueryQueryBuilder WithNode(NodeQueryBuilder nodeQueryBuilder, QueryBuilderParameter<Guid> id, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "id", ArgumentValue = id} );
            return WithObjectField("node", alias, nodeQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptNode() => ExceptField("node");

        public QueryQueryBuilder WithStudenterGittFeideBrukere(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> feideBrukere, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "feideBrukere", ArgumentValue = feideBrukere} );
            return WithObjectField("studenterGittFeideBrukere", alias, studentVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenterGittFeideBrukere() => ExceptField("studenterGittFeideBrukere");

        public QueryQueryBuilder WithStudieprogramV2(QueryStudieprogramV2ConnectionQueryBuilder queryStudieprogramV2ConnectionQueryBuilder, QueryBuilderParameter<StudieprogramV2FilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieprogramV2", alias, queryStudieprogramV2ConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramV2() => ExceptField("studieprogramV2");

        public QueryQueryBuilder WithPubliseringsklareStudieprogram(QueryPubliseringsklartStudieprogramForTerminConnectionQueryBuilder queryPubliseringsklartStudieprogramForTerminConnectionQueryBuilder, QueryBuilderParameter<PubliseringsklareStudieprogramFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("publiseringsklareStudieprogram", alias, queryPubliseringsklartStudieprogramForTerminConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPubliseringsklareStudieprogram() => ExceptField("publiseringsklareStudieprogram");

        public QueryQueryBuilder WithStudieprogramGittStudieprogramkoderV2(StudieprogramQueryBuilder studieprogramQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> studieprogramkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "studieprogramkoder", ArgumentValue = studieprogramkoder} );
            return WithObjectField("studieprogramGittStudieprogramkoderV2", alias, studieprogramQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramGittStudieprogramkoderV2() => ExceptField("studieprogramGittStudieprogramkoderV2");

        public QueryQueryBuilder WithEmnerV2(QueryEmneConnectionQueryBuilder queryEmneConnectionQueryBuilder, QueryBuilderParameter<QueryEmnerV2FilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emnerV2", alias, queryEmneConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmnerV2() => ExceptField("emnerV2");

        public QueryQueryBuilder WithPubliseringsklareEmner(QueryPubliseringsklartEmneForTerminConnectionQueryBuilder queryPubliseringsklartEmneForTerminConnectionQueryBuilder, QueryBuilderParameter<PubliseringsklareEmnerFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("publiseringsklareEmner", alias, queryPubliseringsklartEmneForTerminConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPubliseringsklareEmner() => ExceptField("publiseringsklareEmner");

        public QueryQueryBuilder WithEmnerGittEmnekoder(EmneQueryBuilder emneQueryBuilder, QueryBuilderParameter<string> eierInstitusjonsnummer, QueryBuilderParameter<IEnumerable<EmnekodeInput>> emnekoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierInstitusjonsnummer", ArgumentValue = eierInstitusjonsnummer} );
            args.Add(new() { ArgumentName = "emnekoder", ArgumentValue = emnekoder} );
            return WithObjectField("emnerGittEmnekoder", alias, emneQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmnerGittEmnekoder() => ExceptField("emnerGittEmnekoder");

        public QueryQueryBuilder WithStudenterGittPersonlopenumre(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> personlopenumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "personlopenumre", ArgumentValue = personlopenumre} );
            return WithObjectField("studenterGittPersonlopenumre", alias, studentVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenterGittPersonlopenumre() => ExceptField("studenterGittPersonlopenumre");

        public QueryQueryBuilder WithStudenterGittStudentnumre(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> studentnumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "studentnumre", ArgumentValue = studentnumre} );
            return WithObjectField("studenterGittStudentnumre", alias, studentVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenterGittStudentnumre() => ExceptField("studenterGittStudentnumre");

        public QueryQueryBuilder WithLand(QueryLandConnectionQueryBuilder queryLandConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("land", alias, queryLandConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptLand() => ExceptField("land");

        public QueryQueryBuilder WithProgramStudieretter(QueryProgramStudieretterConnectionQueryBuilder queryProgramStudieretterConnectionQueryBuilder, QueryBuilderParameter<ProgramStudieretterFilterInput> filter, QueryBuilderParameter<QueryProgramStudieretterOrderByInput> orderBy = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (orderBy != null)
                args.Add(new() { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("programStudieretter", alias, queryProgramStudieretterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptProgramStudieretter() => ExceptField("programStudieretter");

        public QueryQueryBuilder WithPersonProfiler(QueryPersonProfilerConnectionQueryBuilder queryPersonProfilerConnectionQueryBuilder, QueryBuilderParameter<QueryPersonProfilerFilterInput> filter, QueryBuilderParameter<QueryPersonProfilerOrderByInput> orderBy = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (orderBy != null)
                args.Add(new() { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("personProfiler", alias, queryPersonProfilerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfiler() => ExceptField("personProfiler");

        public QueryQueryBuilder WithStudieoppbygninger(QueryStudieoppbygningerConnectionQueryBuilder queryStudieoppbygningerConnectionQueryBuilder, QueryBuilderParameter<QueryStudieoppbygningerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieoppbygninger", alias, queryStudieoppbygningerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieoppbygninger() => ExceptField("studieoppbygninger");

        public QueryQueryBuilder WithEvuKurs(QueryEvuKursConnectionQueryBuilder queryEvuKursConnectionQueryBuilder, QueryBuilderParameter<EvuKursFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKurs", alias, queryEvuKursConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKurs() => ExceptField("evuKurs");

        public QueryQueryBuilder WithCampuser(QueryCampuserConnectionQueryBuilder queryCampuserConnectionQueryBuilder, QueryBuilderParameter<QueryCampuserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("campuser", alias, queryCampuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptCampuser() => ExceptField("campuser");

        public QueryQueryBuilder WithTerminer(QueryTerminerConnectionQueryBuilder queryTerminerConnectionQueryBuilder, QueryBuilderParameter<QueryTerminerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("terminer", alias, queryTerminerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTerminer() => ExceptField("terminer");

        public QueryQueryBuilder WithTerminbetegnelser(QueryTerminbetegnelserConnectionQueryBuilder queryTerminbetegnelserConnectionQueryBuilder, QueryBuilderParameter<QueryTerminbetegnelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("terminbetegnelser", alias, queryTerminbetegnelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTerminbetegnelser() => ExceptField("terminbetegnelser");

        public QueryQueryBuilder WithOrganisasjonsenheter(QueryOrganisasjonsenheterConnectionQueryBuilder queryOrganisasjonsenheterConnectionQueryBuilder, QueryBuilderParameter<QueryOrganisasjonsenheterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("organisasjonsenheter", alias, queryOrganisasjonsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOrganisasjonsenheter() => ExceptField("organisasjonsenheter");

        public QueryQueryBuilder WithStudenter(QueryStudenterConnectionQueryBuilder queryStudenterConnectionQueryBuilder, QueryBuilderParameter<QueryStudenterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studenter", alias, queryStudenterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenter() => ExceptField("studenter");

        public QueryQueryBuilder WithMegVedLarested(PersonProfilQueryBuilder personProfilQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("megVedLarested", alias, personProfilQueryBuilder, [include, skip]);

        public QueryQueryBuilder ExceptMegVedLarested() => ExceptField("megVedLarested");

        public QueryQueryBuilder WithUndervisningsenheter(QueryUndervisningsenheterConnectionQueryBuilder queryUndervisningsenheterConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsenheterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsenheter", alias, queryUndervisningsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsenheter() => ExceptField("undervisningsenheter");

        public QueryQueryBuilder WithBiblioteker(QueryBibliotekerConnectionQueryBuilder queryBibliotekerConnectionQueryBuilder, QueryBuilderParameter<QueryBibliotekerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("biblioteker", alias, queryBibliotekerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptBiblioteker() => ExceptField("biblioteker");

        public QueryQueryBuilder WithEvuKursSoknader(QueryEvuKursSoknaderConnectionQueryBuilder queryEvuKursSoknaderConnectionQueryBuilder, QueryBuilderParameter<QueryEvuKurssoknaderFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKursSoknader", alias, queryEvuKursSoknaderConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursSoknader() => ExceptField("evuKursSoknader");

        public QueryQueryBuilder WithEvuKursroller(QueryEvuKursrollerConnectionQueryBuilder queryEvuKursrollerConnectionQueryBuilder, QueryBuilderParameter<QueryEvuKursrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKursroller", alias, queryEvuKursrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursroller() => ExceptField("evuKursroller");

        public QueryQueryBuilder WithStudenthendelser(QueryStudenthendelserConnectionQueryBuilder queryStudenthendelserConnectionQueryBuilder, QueryBuilderParameter<QueryStudenthendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studenthendelser", alias, queryStudenthendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenthendelser() => ExceptField("studenthendelser");

        public QueryQueryBuilder WithStudentStatuser(QueryStudentStatuserConnectionQueryBuilder queryStudentStatuserConnectionQueryBuilder, QueryBuilderParameter<StudentStatuserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studentStatuser", alias, queryStudentStatuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudentStatuser() => ExceptField("studentStatuser");

        public QueryQueryBuilder WithStudieprogramroller(QueryStudieprogramrollerConnectionQueryBuilder queryStudieprogramrollerConnectionQueryBuilder, QueryBuilderParameter<QuerystudieprogramrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieprogramroller", alias, queryStudieprogramrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramroller() => ExceptField("studieprogramroller");

        public QueryQueryBuilder WithKullroller(QueryKullrollerConnectionQueryBuilder queryKullrollerConnectionQueryBuilder, QueryBuilderParameter<QueryKullrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kullroller", alias, queryKullrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKullroller() => ExceptField("kullroller");

        public QueryQueryBuilder WithKull(QueryKullConnectionQueryBuilder queryKullConnectionQueryBuilder, QueryBuilderParameter<QueryKullFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kull", alias, queryKullConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKull() => ExceptField("kull");

        public QueryQueryBuilder WithKlasseroller(QueryKlasserollerConnectionQueryBuilder queryKlasserollerConnectionQueryBuilder, QueryBuilderParameter<QueryKlasserollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klasseroller", alias, queryKlasserollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlasseroller() => ExceptField("klasseroller");

        public QueryQueryBuilder WithStudieprogramhendelser(QueryStudieprogramhendelserConnectionQueryBuilder queryStudieprogramhendelserConnectionQueryBuilder, QueryBuilderParameter<StudieprogramhendelseFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieprogramhendelser", alias, queryStudieprogramhendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramhendelser() => ExceptField("studieprogramhendelser");

        public QueryQueryBuilder WithEmnehendelser(QueryEmnehendelserConnectionQueryBuilder queryEmnehendelserConnectionQueryBuilder, QueryBuilderParameter<EmnehendelseFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emnehendelser", alias, queryEmnehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmnehendelser() => ExceptField("emnehendelser");

        public QueryQueryBuilder WithEvukurshendelser(QueryEvukurshendelserConnectionQueryBuilder queryEvukurshendelserConnectionQueryBuilder, QueryBuilderParameter<EvukurshendelseFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evukurshendelser", alias, queryEvukurshendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvukurshendelser() => ExceptField("evukurshendelser");

        public QueryQueryBuilder WithEmneroller(QueryEmnerollerConnectionQueryBuilder queryEmnerollerConnectionQueryBuilder, QueryBuilderParameter<QueryEmnerollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emneroller", alias, queryEmnerollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneroller() => ExceptField("emneroller");

        public QueryQueryBuilder WithEmneSoknader(QueryEmneSoknaderConnectionQueryBuilder queryEmneSoknaderConnectionQueryBuilder, QueryBuilderParameter<QueryEmneSoknaderFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emneSoknader", alias, queryEmneSoknaderConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneSoknader() => ExceptField("emneSoknader");

        public QueryQueryBuilder WithUndervisningsenhetsroller(QueryUndervisningsenhetsrollerConnectionQueryBuilder queryUndervisningsenhetsrollerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsenhetsrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsenhetsroller", alias, queryUndervisningsenhetsrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsenhetsroller() => ExceptField("undervisningsenhetsroller");

        public QueryQueryBuilder WithUndervisningsaktivitetsroller(QueryUndervisningsaktivitetsrollerConnectionQueryBuilder queryUndervisningsaktivitetsrollerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsaktivitetsrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsaktivitetsroller", alias, queryUndervisningsaktivitetsrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktivitetsroller() => ExceptField("undervisningsaktivitetsroller");

        public QueryQueryBuilder WithBrukere(QueryBrukereConnectionQueryBuilder queryBrukereConnectionQueryBuilder, QueryBuilderParameter<QueryBrukereFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("brukere", alias, queryBrukereConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptBrukere() => ExceptField("brukere");

        public QueryQueryBuilder WithTimeplanroller(QueryTimeplanrollerConnectionQueryBuilder queryTimeplanrollerConnectionQueryBuilder, QueryBuilderParameter<QueryTimeplanrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("timeplanroller", alias, queryTimeplanrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTimeplanroller() => ExceptField("timeplanroller");

        public QueryQueryBuilder WithTimeplanrollehendelser(QueryTimeplanrollehendelserConnectionQueryBuilder queryTimeplanrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryTimeplanrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("timeplanrollehendelser", alias, queryTimeplanrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTimeplanrollehendelser() => ExceptField("timeplanrollehendelser");

        public QueryQueryBuilder WithVektingsredukjonsregler(QueryVektingsredukjonsreglerConnectionQueryBuilder queryVektingsredukjonsreglerConnectionQueryBuilder, QueryBuilderParameter<QueryVektingsreduksjonsreglerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vektingsredukjonsregler", alias, queryVektingsredukjonsreglerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVektingsredukjonsregler() => ExceptField("vektingsredukjonsregler");

        public QueryQueryBuilder WithEsiKandidater(QueryEsiKandidaterConnectionQueryBuilder queryEsiKandidaterConnectionQueryBuilder, QueryBuilderParameter<EsiKandidaterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("esiKandidater", alias, queryEsiKandidaterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEsiKandidater() => ExceptField("esiKandidater");

        public QueryQueryBuilder WithPersonProfilerGittFodselsnumre(PersonProfilQueryBuilder personProfilQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> fodselsnumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "fodselsnumre", ArgumentValue = fodselsnumre} );
            return WithObjectField("personProfilerGittFodselsnumre", alias, personProfilQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfilerGittFodselsnumre() => ExceptField("personProfilerGittFodselsnumre");

        public QueryQueryBuilder WithPersonProfilerGittPersonlopenumre(PersonProfilQueryBuilder personProfilQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> personlopenumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "personlopenumre", ArgumentValue = personlopenumre} );
            return WithObjectField("personProfilerGittPersonlopenumre", alias, personProfilQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfilerGittPersonlopenumre() => ExceptField("personProfilerGittPersonlopenumre");

        public QueryQueryBuilder WithStudenterGittFodselsnumre(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> fodselsnumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "fodselsnumre", ArgumentValue = fodselsnumre} );
            return WithObjectField("studenterGittFodselsnumre", alias, studentVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenterGittFodselsnumre() => ExceptField("studenterGittFodselsnumre");

        public QueryQueryBuilder WithStudenterGittLanetakerIder(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> lanetakerIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "lanetakerIder", ArgumentValue = lanetakerIder} );
            return WithObjectField("studenterGittLanetakerIder", alias, studentVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudenterGittLanetakerIder() => ExceptField("studenterGittLanetakerIder");

        public QueryQueryBuilder WithOrganisasjoner(QueryOrganisasjonerConnectionQueryBuilder queryOrganisasjonerConnectionQueryBuilder, QueryBuilderParameter<bool?> kanMottaSemesteravgift = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (kanMottaSemesteravgift != null)
                args.Add(new() { ArgumentName = "kanMottaSemesteravgift", ArgumentValue = kanMottaSemesteravgift} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("organisasjoner", alias, queryOrganisasjonerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOrganisasjoner() => ExceptField("organisasjoner");

        public QueryQueryBuilder WithNodes(NodeQueryBuilder nodeQueryBuilder, QueryBuilderParameter<IEnumerable<Guid>> ids = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (ids != null)
                args.Add(new() { ArgumentName = "ids", ArgumentValue = ids} );

            return WithObjectField("nodes", alias, nodeQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptNodes() => ExceptField("nodes");

        public QueryQueryBuilder WithStudietilpasningstyper(QueryStudietilpasningstyperConnectionQueryBuilder queryStudietilpasningstyperConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<bool>> aktiv = null, QueryBuilderParameter<bool?> gjelderUndervisning = null, QueryBuilderParameter<bool?> gjelderPraksis = null, QueryBuilderParameter<bool?> gjelderEksamen = null, QueryBuilderParameter<bool?> ekstraEksamenstid = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (aktiv != null)
                args.Add(new() { ArgumentName = "aktiv", ArgumentValue = aktiv} );

            if (gjelderUndervisning != null)
                args.Add(new() { ArgumentName = "gjelderUndervisning", ArgumentValue = gjelderUndervisning} );

            if (gjelderPraksis != null)
                args.Add(new() { ArgumentName = "gjelderPraksis", ArgumentValue = gjelderPraksis} );

            if (gjelderEksamen != null)
                args.Add(new() { ArgumentName = "gjelderEksamen", ArgumentValue = gjelderEksamen} );

            if (ekstraEksamenstid != null)
                args.Add(new() { ArgumentName = "ekstraEksamenstid", ArgumentValue = ekstraEksamenstid} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studietilpasningstyper", alias, queryStudietilpasningstyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudietilpasningstyper() => ExceptField("studietilpasningstyper");

        public QueryQueryBuilder WithRomutstyrtyper(QueryRomutstyrtyperConnectionQueryBuilder queryRomutstyrtyperConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("romutstyrtyper", alias, queryRomutstyrtyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptRomutstyrtyper() => ExceptField("romutstyrtyper");

        public QueryQueryBuilder WithRom(QueryRomConnectionQueryBuilder queryRomConnectionQueryBuilder, QueryBuilderParameter<QueryRomFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("rom", alias, queryRomConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptRom() => ExceptField("rom");

        public QueryQueryBuilder WithSamtykkekrav(QuerySamtykkekravConnectionQueryBuilder querySamtykkekravConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<bool>> aktiv = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (aktiv != null)
                args.Add(new() { ArgumentName = "aktiv", ArgumentValue = aktiv} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("samtykkekrav", alias, querySamtykkekravConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSamtykkekrav() => ExceptField("samtykkekrav");

        public QueryQueryBuilder WithUtvekslingsavtaler(QueryUtvekslingsavtalerConnectionQueryBuilder queryUtvekslingsavtalerConnectionQueryBuilder, QueryBuilderParameter<UtvekslingsavtalerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("utvekslingsavtaler", alias, queryUtvekslingsavtalerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUtvekslingsavtaler() => ExceptField("utvekslingsavtaler");

        public QueryQueryBuilder WithTekstkategorier(QueryTekstkategorierConnectionQueryBuilder queryTekstkategorierConnectionQueryBuilder, QueryBuilderParameter<QueryTekstkategorierFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("tekstkategorier", alias, queryTekstkategorierConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTekstkategorier() => ExceptField("tekstkategorier");

        public QueryQueryBuilder WithStudentkortstatuser(QueryStudentkortstatuserConnectionQueryBuilder queryStudentkortstatuserConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studentkortstatuser", alias, queryStudentkortstatuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudentkortstatuser() => ExceptField("studentkortstatuser");

        public QueryQueryBuilder WithMeldingerOmDodsfall(QueryMeldingerOmDodsfallConnectionQueryBuilder queryMeldingerOmDodsfallConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("meldingerOmDodsfall", alias, queryMeldingerOmDodsfallConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptMeldingerOmDodsfall() => ExceptField("meldingerOmDodsfall");

        public QueryQueryBuilder WithFravarsarsaker(QueryFravarsarsakerConnectionQueryBuilder queryFravarsarsakerConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fravarsarsaker", alias, queryFravarsarsakerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFravarsarsaker() => ExceptField("fravarsarsaker");

        public QueryQueryBuilder WithMeldingerOmFodselsnummerendring(QueryMeldingerOmFodselsnummerendringConnectionQueryBuilder queryMeldingerOmFodselsnummerendringConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("meldingerOmFodselsnummerendring", alias, queryMeldingerOmFodselsnummerendringConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptMeldingerOmFodselsnummerendring() => ExceptField("meldingerOmFodselsnummerendring");

        public QueryQueryBuilder WithKlasser(QueryKlasserConnectionQueryBuilder queryKlasserConnectionQueryBuilder, QueryBuilderParameter<QueryKlasserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klasser", alias, queryKlasserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlasser() => ExceptField("klasser");

        public QueryQueryBuilder WithKlasserGittKlassekoder(KlasseQueryBuilder klasseQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<KlassekodeInput>> klassekoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (klassekoder != null)
                args.Add(new() { ArgumentName = "klassekoder", ArgumentValue = klassekoder} );

            return WithObjectField("klasserGittKlassekoder", alias, klasseQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlasserGittKlassekoder() => ExceptField("klasserGittKlassekoder");

        public QueryQueryBuilder WithKullcampuser(QueryKullcampuserConnectionQueryBuilder queryKullcampuserConnectionQueryBuilder, QueryBuilderParameter<QueryKullcampusFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kullcampuser", alias, queryKullcampuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKullcampuser() => ExceptField("kullcampuser");

        public QueryQueryBuilder WithFagpersoner(QueryFagpersonerConnectionQueryBuilder queryFagpersonerConnectionQueryBuilder, QueryBuilderParameter<FagpersonerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fagpersoner", alias, queryFagpersonerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFagpersoner() => ExceptField("fagpersoner");

        public QueryQueryBuilder WithFagpersonerGittFodselsnumre(FagpersonVedLarestedQueryBuilder fagpersonVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> fodselsnumre = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (fodselsnumre != null)
                args.Add(new() { ArgumentName = "fodselsnumre", ArgumentValue = fodselsnumre} );

            return WithObjectField("fagpersonerGittFodselsnumre", alias, fagpersonVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFagpersonerGittFodselsnumre() => ExceptField("fagpersonerGittFodselsnumre");

        public QueryQueryBuilder WithFagpersonerGittPersonlopenumre(FagpersonVedLarestedQueryBuilder fagpersonVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> personlopenumre = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (personlopenumre != null)
                args.Add(new() { ArgumentName = "personlopenumre", ArgumentValue = personlopenumre} );

            return WithObjectField("fagpersonerGittPersonlopenumre", alias, fagpersonVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFagpersonerGittPersonlopenumre() => ExceptField("fagpersonerGittPersonlopenumre");

        public QueryQueryBuilder WithUndervisingstilpasningskategorier(QueryUndervisingstilpasningskategorierConnectionQueryBuilder queryUndervisingstilpasningskategorierConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisingstilpasningskategorier", alias, queryUndervisingstilpasningskategorierConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisingstilpasningskategorier() => ExceptField("undervisingstilpasningskategorier");

        public QueryQueryBuilder WithVurderingsenheter(QueryVurderingsenheterConnectionQueryBuilder queryVurderingsenheterConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsenheterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsenheter", alias, queryVurderingsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsenheter() => ExceptField("vurderingsenheter");

        public QueryQueryBuilder WithEvukursGittKurskoder(EvuKursQueryBuilder evuKursQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<QueryEvukursGittKurskoderInput>> koder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "koder", ArgumentValue = koder} );
            return WithObjectField("evukursGittKurskoder", alias, evuKursQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvukursGittKurskoder() => ExceptField("evukursGittKurskoder");

        public QueryQueryBuilder WithSemesterInformasjon(QuerySemesterInformasjonConnectionQueryBuilder querySemesterInformasjonConnectionQueryBuilder, QueryBuilderParameter<SemesterInformasjonFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("semesterInformasjon", alias, querySemesterInformasjonConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSemesterInformasjon() => ExceptField("semesterInformasjon");

        public QueryQueryBuilder WithPolitiattesttyper(QueryPolitiattesttyperConnectionQueryBuilder queryPolitiattesttyperConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("politiattesttyper", alias, queryPolitiattesttyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPolitiattesttyper() => ExceptField("politiattesttyper");

        public QueryQueryBuilder WithVektingstyper(QueryVektingstyperConnectionQueryBuilder queryVektingstyperConnectionQueryBuilder, QueryBuilderParameter<VektingstyperFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vektingstyper", alias, queryVektingstyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVektingstyper() => ExceptField("vektingstyper");

        public QueryQueryBuilder WithSemesterregistreringer(QuerySemesterregistreringerConnectionQueryBuilder querySemesterregistreringerConnectionQueryBuilder, QueryBuilderParameter<QuerySemesterregistreringerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("semesterregistreringer", alias, querySemesterregistreringerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSemesterregistreringer() => ExceptField("semesterregistreringer");

        public QueryQueryBuilder WithLandGittLandkodeAlfa3(LandQueryBuilder landQueryBuilder, QueryBuilderParameter<IEnumerable<string>> landkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "landkoder", ArgumentValue = landkoder} );
            return WithObjectField("landGittLandkodeAlfa3", alias, landQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptLandGittLandkodeAlfa3() => ExceptField("landGittLandkodeAlfa3");

        public QueryQueryBuilder WithStudentgrunnlag(QueryStudentgrunnlagConnectionQueryBuilder queryStudentgrunnlagConnectionQueryBuilder, QueryBuilderParameter<StudentgrunnlagFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studentgrunnlag", alias, queryStudentgrunnlagConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudentgrunnlag() => ExceptField("studentgrunnlag");

        public QueryQueryBuilder WithKvalifikasjonsgrunnlag(QueryKvalifikasjonsgrunnlagConnectionQueryBuilder queryKvalifikasjonsgrunnlagConnectionQueryBuilder, QueryBuilderParameter<KvalifikasjonsgrunnlagFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kvalifikasjonsgrunnlag", alias, queryKvalifikasjonsgrunnlagConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKvalifikasjonsgrunnlag() => ExceptField("kvalifikasjonsgrunnlag");

        public QueryQueryBuilder WithStudierettstatuser(QueryStudierettstatuserConnectionQueryBuilder queryStudierettstatuserConnectionQueryBuilder, QueryBuilderParameter<StudierettstatusFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studierettstatuser", alias, queryStudierettstatuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudierettstatuser() => ExceptField("studierettstatuser");

        public QueryQueryBuilder WithStudieretninger(QueryStudieretningerConnectionQueryBuilder queryStudieretningerConnectionQueryBuilder, QueryBuilderParameter<StudieretningerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieretninger", alias, queryStudieretningerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieretninger() => ExceptField("studieretninger");

        public QueryQueryBuilder WithStudieretningerGittStudieretningskoder(StudieretningQueryBuilder studieretningQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> studieretningskoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "studieretningskoder", ArgumentValue = studieretningskoder} );
            return WithObjectField("studieretningerGittStudieretningskoder", alias, studieretningQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieretningerGittStudieretningskoder() => ExceptField("studieretningerGittStudieretningskoder");

        public QueryQueryBuilder WithResultater(QueryResultaterConnectionQueryBuilder queryResultaterConnectionQueryBuilder, QueryBuilderParameter<QueryResultaterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("resultater", alias, queryResultaterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptResultater() => ExceptField("resultater");

        public QueryQueryBuilder WithCampuserGittCampuskoder(CampusQueryBuilder campusQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> campuskoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (campuskoder != null)
                args.Add(new() { ArgumentName = "campuskoder", ArgumentValue = campuskoder} );

            return WithObjectField("campuserGittCampuskoder", alias, campusQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptCampuserGittCampuskoder() => ExceptField("campuserGittCampuskoder");

        public QueryQueryBuilder WithEmneStudieretter(QueryEmneStudieretterConnectionQueryBuilder queryEmneStudieretterConnectionQueryBuilder, QueryBuilderParameter<QueryEmneStudieretterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emneStudieretter", alias, queryEmneStudieretterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneStudieretter() => ExceptField("emneStudieretter");

        public QueryQueryBuilder WithUndervisningspartiplasseringer(QueryUndervisningspartiplasseringerConnectionQueryBuilder queryUndervisningspartiplasseringerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningspartiplasseringerfilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningspartiplasseringer", alias, queryUndervisningspartiplasseringerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningspartiplasseringer() => ExceptField("undervisningspartiplasseringer");

        public QueryQueryBuilder WithFsRoller(QueryFsRollerConnectionQueryBuilder queryFsRollerConnectionQueryBuilder, QueryBuilderParameter<QueryFsRollerFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fsRoller", alias, queryFsRollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFsRoller() => ExceptField("fsRoller");

        public QueryQueryBuilder WithFsRollerGittRollekoder(FsRolleQueryBuilder fsRolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> rollekoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (rollekoder != null)
                args.Add(new() { ArgumentName = "rollekoder", ArgumentValue = rollekoder} );

            return WithObjectField("fsRollerGittRollekoder", alias, fsRolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFsRollerGittRollekoder() => ExceptField("fsRollerGittRollekoder");

        public QueryQueryBuilder WithVurderingsenheterGittLegacyIder(VurderingsenhetQueryBuilder vurderingsenhetQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<VurderingsenhetLegacyId>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("vurderingsenheterGittLegacyIder", alias, vurderingsenhetQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsenheterGittLegacyIder() => ExceptField("vurderingsenheterGittLegacyIder");

        public QueryQueryBuilder WithStudieoppbygningsdeler(QueryStudieoppbygningsdelerConnectionQueryBuilder queryStudieoppbygningsdelerConnectionQueryBuilder, QueryBuilderParameter<QueryStudieoppbygningsdelerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieoppbygningsdeler", alias, queryStudieoppbygningsdelerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieoppbygningsdeler() => ExceptField("studieoppbygningsdeler");

        public QueryQueryBuilder WithStudieoppbygningsdelerGittStudieoppbygningsdelkoder(StudieoppbygningsdelQueryBuilder studieoppbygningsdelQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> studieoppbygningsdelkoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (studieoppbygningsdelkoder != null)
                args.Add(new() { ArgumentName = "studieoppbygningsdelkoder", ArgumentValue = studieoppbygningsdelkoder} );

            return WithObjectField("studieoppbygningsdelerGittStudieoppbygningsdelkoder", alias, studieoppbygningsdelQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieoppbygningsdelerGittStudieoppbygningsdelkoder() => ExceptField("studieoppbygningsdelerGittStudieoppbygningsdelkoder");

        public QueryQueryBuilder WithUtdanningsplanelementer(QueryUtdanningsplanelementerConnectionQueryBuilder queryUtdanningsplanelementerConnectionQueryBuilder, QueryBuilderParameter<QueryUtdanningsplanelementerFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("utdanningsplanelementer", alias, queryUtdanningsplanelementerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUtdanningsplanelementer() => ExceptField("utdanningsplanelementer");

        public QueryQueryBuilder WithVurderingsresultatstatuser(QueryVurderingsresultatstatuserConnectionQueryBuilder queryVurderingsresultatstatuserConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsresultatstatusFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsresultatstatuser", alias, queryVurderingsresultatstatuserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsresultatstatuser() => ExceptField("vurderingsresultatstatuser");

        public QueryQueryBuilder WithTidsenheter(QueryTidsenheterConnectionQueryBuilder queryTidsenheterConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("tidsenheter", alias, queryTidsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTidsenheter() => ExceptField("tidsenheter");

        public QueryQueryBuilder WithUtdanningsplanelementtyper(QueryUtdanningsplanelementtyperConnectionQueryBuilder queryUtdanningsplanelementtyperConnectionQueryBuilder, QueryBuilderParameter<QueryUtdanningsplanelementtyperFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("utdanningsplanelementtyper", alias, queryUtdanningsplanelementtyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUtdanningsplanelementtyper() => ExceptField("utdanningsplanelementtyper");

        public QueryQueryBuilder WithKlassebetegnelser(QueryKlassebetegnelserConnectionQueryBuilder queryKlassebetegnelserConnectionQueryBuilder, QueryBuilderParameter<QueryKlassebetegnelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klassebetegnelser", alias, queryKlassebetegnelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlassebetegnelser() => ExceptField("klassebetegnelser");

        public QueryQueryBuilder WithKlassemedlemskap(QueryKlassemedlemskapConnectionQueryBuilder queryKlassemedlemskapConnectionQueryBuilder, QueryBuilderParameter<QueryKlassemedlemskapFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klassemedlemskap", alias, queryKlassemedlemskapConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlassemedlemskap() => ExceptField("klassemedlemskap");

        public QueryQueryBuilder WithKarakterreglerGittKarakterregelkoder(KarakterregelQueryBuilder karakterregelQueryBuilder, QueryBuilderParameter<IEnumerable<string>> karakterregelkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "karakterregelkoder", ArgumentValue = karakterregelkoder} );
            return WithObjectField("karakterreglerGittKarakterregelkoder", alias, karakterregelQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKarakterreglerGittKarakterregelkoder() => ExceptField("karakterreglerGittKarakterregelkoder");

        public QueryQueryBuilder WithBygninger(QueryBygningerConnectionQueryBuilder queryBygningerConnectionQueryBuilder, QueryBuilderParameter<QueryBygningerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("bygninger", alias, queryBygningerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptBygninger() => ExceptField("bygninger");

        public QueryQueryBuilder WithRomtyper(QueryRomtyperConnectionQueryBuilder queryRomtyperConnectionQueryBuilder, QueryBuilderParameter<QueryRomtyperFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("romtyper", alias, queryRomtyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptRomtyper() => ExceptField("romtyper");

        public QueryQueryBuilder WithBygningerGittBygningskoder(BygningQueryBuilder bygningQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> bygningskoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (bygningskoder != null)
                args.Add(new() { ArgumentName = "bygningskoder", ArgumentValue = bygningskoder} );

            return WithObjectField("bygningerGittBygningskoder", alias, bygningQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptBygningerGittBygningskoder() => ExceptField("bygningerGittBygningskoder");

        public QueryQueryBuilder WithRomGittRomkoder(RomQueryBuilder romQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<RomkodeInput>> romkoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (romkoder != null)
                args.Add(new() { ArgumentName = "romkoder", ArgumentValue = romkoder} );

            return WithObjectField("romGittRomkoder", alias, romQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptRomGittRomkoder() => ExceptField("romGittRomkoder");

        public QueryQueryBuilder WithSprak(QuerySprakConnectionQueryBuilder querySprakConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("sprak", alias, querySprakConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSprak() => ExceptField("sprak");

        public QueryQueryBuilder WithSprakGittSprakkoder(SprakQueryBuilder sprakQueryBuilder, QueryBuilderParameter<IEnumerable<string>> sprakkoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (sprakkoder != null)
                args.Add(new() { ArgumentName = "sprakkoder", ArgumentValue = sprakkoder} );

            return WithObjectField("sprakGittSprakkoder", alias, sprakQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSprakGittSprakkoder() => ExceptField("sprakGittSprakkoder");

        public QueryQueryBuilder WithSprakGitt6391Sprakkoder(SprakQueryBuilder sprakQueryBuilder, QueryBuilderParameter<IEnumerable<string>> sprakkoder6391 = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (sprakkoder6391 != null)
                args.Add(new() { ArgumentName = "sprakkoder6391", ArgumentValue = sprakkoder6391} );

            return WithObjectField("sprakGitt6391Sprakkoder", alias, sprakQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSprakGitt6391Sprakkoder() => ExceptField("sprakGitt6391Sprakkoder");

        public QueryQueryBuilder WithSprakGitt6392Sprakkoder(SprakQueryBuilder sprakQueryBuilder, QueryBuilderParameter<IEnumerable<string>> sprakkoder6392 = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (sprakkoder6392 != null)
                args.Add(new() { ArgumentName = "sprakkoder6392", ArgumentValue = sprakkoder6392} );

            return WithObjectField("sprakGitt6392Sprakkoder", alias, sprakQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSprakGitt6392Sprakkoder() => ExceptField("sprakGitt6392Sprakkoder");

        public QueryQueryBuilder WithEmnerollehendelser(QueryEmnerollehendelserConnectionQueryBuilder queryEmnerollehendelserConnectionQueryBuilder, QueryBuilderParameter<EmnerollehendelseFilter> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emnerollehendelser", alias, queryEmnerollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmnerollehendelser() => ExceptField("emnerollehendelser");

        public QueryQueryBuilder WithProgramStudieretthendelser(QueryProgramStudieretthendelserConnectionQueryBuilder queryProgramStudieretthendelserConnectionQueryBuilder, QueryBuilderParameter<QueryProgramstudieretthendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("programStudieretthendelser", alias, queryProgramStudieretthendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptProgramStudieretthendelser() => ExceptField("programStudieretthendelser");

        public QueryQueryBuilder WithVurderingsresultatstatuserGittVurderingsresultatstatuskoder(VurderingsresultatstatusQueryBuilder vurderingsresultatstatusQueryBuilder, QueryBuilderParameter<IEnumerable<string>> vurderingsresultatstatuskoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (vurderingsresultatstatuskoder != null)
                args.Add(new() { ArgumentName = "vurderingsresultatstatuskoder", ArgumentValue = vurderingsresultatstatuskoder} );

            return WithObjectField("vurderingsresultatstatuserGittVurderingsresultatstatuskoder", alias, vurderingsresultatstatusQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsresultatstatuserGittVurderingsresultatstatuskoder() => ExceptField("vurderingsresultatstatuserGittVurderingsresultatstatuskoder");

        public QueryQueryBuilder WithStudieprogramrollehendelser(QueryStudieprogramrollehendelserConnectionQueryBuilder queryStudieprogramrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryStudieprogramrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieprogramrollehendelser", alias, queryStudieprogramrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramrollehendelser() => ExceptField("studieprogramrollehendelser");

        public QueryQueryBuilder WithKlassemedlemskapshendelser(QueryKlassemedlemskapshendelserConnectionQueryBuilder queryKlassemedlemskapshendelserConnectionQueryBuilder, QueryBuilderParameter<QueryKlassemedlemskapshendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klassemedlemskapshendelser", alias, queryKlassemedlemskapshendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlassemedlemskapshendelser() => ExceptField("klassemedlemskapshendelser");

        public QueryQueryBuilder WithUndervisningspartiplasseringshendelser(QueryUndervisningspartiplasseringshendelserConnectionQueryBuilder queryUndervisningspartiplasseringshendelserConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningspartiplasseringshendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningspartiplasseringshendelser", alias, queryUndervisningspartiplasseringshendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningspartiplasseringshendelser() => ExceptField("undervisningspartiplasseringshendelser");

        public QueryQueryBuilder WithKullrollehendelser(QueryKullrollehendelserConnectionQueryBuilder queryKullrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryKullrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kullrollehendelser", alias, queryKullrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKullrollehendelser() => ExceptField("kullrollehendelser");

        public QueryQueryBuilder WithKlasserollehendelser(QueryKlasserollehendelserConnectionQueryBuilder queryKlasserollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryKlasserollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klasserollehendelser", alias, queryKlasserollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlasserollehendelser() => ExceptField("klasserollehendelser");

        public QueryQueryBuilder WithEvuKursrollehendelser(QueryEvuKursrollehendelserConnectionQueryBuilder queryEvuKursrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryEvuKursrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKursrollehendelser", alias, queryEvuKursrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursrollehendelser() => ExceptField("evuKursrollehendelser");

        public QueryQueryBuilder WithUndervisningsenhetsrollehendelser(QueryUndervisningsenhetsrollehendelserConnectionQueryBuilder queryUndervisningsenhetsrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsenhetsrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsenhetsrollehendelser", alias, queryUndervisningsenhetsrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsenhetsrollehendelser() => ExceptField("undervisningsenhetsrollehendelser");

        public QueryQueryBuilder WithUndervisningsaktivitetsrollehendelser(QueryUndervisningsaktivitetsrollehendelserConnectionQueryBuilder queryUndervisningsaktivitetsrollehendelserConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsaktivitetsrollehendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsaktivitetsrollehendelser", alias, queryUndervisningsaktivitetsrollehendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktivitetsrollehendelser() => ExceptField("undervisningsaktivitetsrollehendelser");

        public QueryQueryBuilder WithStudienivaintervaller(QueryStudienivaintervallerConnectionQueryBuilder queryStudienivaintervallerConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studienivaintervaller", alias, queryStudienivaintervallerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudienivaintervaller() => ExceptField("studienivaintervaller");

        public QueryQueryBuilder WithFodselsnummerendringer(QueryFodselsnummerendringerConnectionQueryBuilder queryFodselsnummerendringerConnectionQueryBuilder, QueryBuilderParameter<QueryFodselsnummerendringerFilterInput> filter, QueryBuilderParameter<QueryFodselsnummerendringerOrderByInput> orderBy = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (orderBy != null)
                args.Add(new() { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fodselsnummerendringer", alias, queryFodselsnummerendringerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFodselsnummerendringer() => ExceptField("fodselsnummerendringer");

        public QueryQueryBuilder WithStudienivaer(QueryStudienivaerConnectionQueryBuilder queryStudienivaerConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studienivaer", alias, queryStudienivaerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudienivaer() => ExceptField("studienivaer");

        public QueryQueryBuilder WithEvuKursGittEvuKurskoder(EvuKursQueryBuilder evuKursQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<EvuKurskodeInput>> evuKurskoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "evuKurskoder", ArgumentValue = evuKurskoder} );
            return WithObjectField("evuKursGittEvuKurskoder", alias, evuKursQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursGittEvuKurskoder() => ExceptField("evuKursGittEvuKurskoder");

        public QueryQueryBuilder WithStudienivaerGittStudienivakoder(StudienivaQueryBuilder studienivaQueryBuilder, QueryBuilderParameter<IEnumerable<string>> studienivakoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "studienivakoder", ArgumentValue = studienivakoder} );
            return WithObjectField("studienivaerGittStudienivakoder", alias, studienivaQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudienivaerGittStudienivakoder() => ExceptField("studienivaerGittStudienivakoder");

        public QueryQueryBuilder WithKlassemedlemskapGittLegacyIder(KlassemedlemskapQueryBuilder klassemedlemskapQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<KlassemedlemskapLegacyId>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("klassemedlemskapGittLegacyIder", alias, klassemedlemskapQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlassemedlemskapGittLegacyIder() => ExceptField("klassemedlemskapGittLegacyIder");

        public QueryQueryBuilder WithVurderingsordninger(QueryVurderingsordningerConnectionQueryBuilder queryVurderingsordningerConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsordningerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsordninger", alias, queryVurderingsordningerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsordninger() => ExceptField("vurderingsordninger");

        public QueryQueryBuilder WithVurderingsordningerGittVurderingsordningskoder(VurderingsordningQueryBuilder vurderingsordningQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> vurderingsordningskoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (vurderingsordningskoder != null)
                args.Add(new() { ArgumentName = "vurderingsordningskoder", ArgumentValue = vurderingsordningskoder} );

            return WithObjectField("vurderingsordningerGittVurderingsordningskoder", alias, vurderingsordningQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsordningerGittVurderingsordningskoder() => ExceptField("vurderingsordningerGittVurderingsordningskoder");

        public QueryQueryBuilder WithVurderingsoppbygningsdeler(QueryVurderingsoppbygningsdelerConnectionQueryBuilder queryVurderingsoppbygningsdelerConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsoppbygningsdelerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsoppbygningsdeler", alias, queryVurderingsoppbygningsdelerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsoppbygningsdeler() => ExceptField("vurderingsoppbygningsdeler");

        public QueryQueryBuilder WithVurderingsoppbygningsdelerGittVurderingsoppbygningsdelkoder(VurderingsoppbygningsdelQueryBuilder vurderingsoppbygningsdelQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<VurderingsoppgningsdelLegacyIdInput>> vurderingsoppbygningsdelkoder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (vurderingsoppbygningsdelkoder != null)
                args.Add(new() { ArgumentName = "vurderingsoppbygningsdelkoder", ArgumentValue = vurderingsoppbygningsdelkoder} );

            return WithObjectField("vurderingsoppbygningsdelerGittVurderingsoppbygningsdelkoder", alias, vurderingsoppbygningsdelQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsoppbygningsdelerGittVurderingsoppbygningsdelkoder() => ExceptField("vurderingsoppbygningsdelerGittVurderingsoppbygningsdelkoder");

        public QueryQueryBuilder WithUndervisningsorganiseringer(QueryUndervisningsorganiseringerConnectionQueryBuilder queryUndervisningsorganiseringerConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsorganiseringer", alias, queryUndervisningsorganiseringerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsorganiseringer() => ExceptField("undervisningsorganiseringer");

        public QueryQueryBuilder WithGodkjenningsinstanser(QueryGodkjenningsinstanserConnectionQueryBuilder queryGodkjenningsinstanserConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("godkjenningsinstanser", alias, queryGodkjenningsinstanserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptGodkjenningsinstanser() => ExceptField("godkjenningsinstanser");

        public QueryQueryBuilder WithDeltakere(QueryDeltakereConnectionQueryBuilder queryDeltakereConnectionQueryBuilder, QueryBuilderParameter<QueryDeltakereFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("deltakere", alias, queryDeltakereConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptDeltakere() => ExceptField("deltakere");

        public QueryQueryBuilder WithDeltakereGittDeltakernumre(DeltakerVedLarestedQueryBuilder deltakerVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> deltakernumre = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (deltakernumre != null)
                args.Add(new() { ArgumentName = "deltakernumre", ArgumentValue = deltakernumre} );

            return WithObjectField("deltakereGittDeltakernumre", alias, deltakerVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptDeltakereGittDeltakernumre() => ExceptField("deltakereGittDeltakernumre");

        public QueryQueryBuilder WithDeltakereGittPersonlopenumre(DeltakerVedLarestedQueryBuilder deltakerVedLarestedQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> personlopenumre = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (personlopenumre != null)
                args.Add(new() { ArgumentName = "personlopenumre", ArgumentValue = personlopenumre} );

            return WithObjectField("deltakereGittPersonlopenumre", alias, deltakerVedLarestedQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptDeltakereGittPersonlopenumre() => ExceptField("deltakereGittPersonlopenumre");

        public QueryQueryBuilder WithTerminerGittTerminkoder(TerminQueryBuilder terminQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<TerminkodeInput>> terminkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "terminkoder", ArgumentValue = terminkoder} );
            return WithObjectField("terminerGittTerminkoder", alias, terminQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTerminerGittTerminkoder() => ExceptField("terminerGittTerminkoder");

        public QueryQueryBuilder WithKullGittLegacyIder(KullQueryBuilder kullQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<KullLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("kullGittLegacyIder", alias, kullQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKullGittLegacyIder() => ExceptField("kullGittLegacyIder");

        public QueryQueryBuilder WithEvuKursSoknadHendelser(QueryEvuKursSoknadHendelserConnectionQueryBuilder queryEvuKursSoknadHendelserConnectionQueryBuilder, QueryBuilderParameter<QueryEvuKursSoknadshendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKursSoknadHendelser", alias, queryEvuKursSoknadHendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursSoknadHendelser() => ExceptField("evuKursSoknadHendelser");

        public QueryQueryBuilder WithEmneSoknadHendelser(QueryEmneSoknadHendelserConnectionQueryBuilder queryEmneSoknadHendelserConnectionQueryBuilder, QueryBuilderParameter<QueryEmneSoknadshendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("emneSoknadHendelser", alias, queryEmneSoknadHendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneSoknadHendelser() => ExceptField("emneSoknadHendelser");

        public QueryQueryBuilder WithFakulteter(QueryFakulteterConnectionQueryBuilder queryFakulteterConnectionQueryBuilder, QueryBuilderParameter<QueryFakulteterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fakulteter", alias, queryFakulteterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFakulteter() => ExceptField("fakulteter");

        public QueryQueryBuilder WithEmneSoknaderGittLegacyIder(EmneSoknadQueryBuilder emneSoknadQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningsmeldingLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("emneSoknaderGittLegacyIder", alias, emneSoknadQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneSoknaderGittLegacyIder() => ExceptField("emneSoknaderGittLegacyIder");

        public QueryQueryBuilder WithEmneStudieretterGittLegacyIder(EmneStudierettQueryBuilder emneStudierettQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningsmeldingLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("emneStudieretterGittLegacyIder", alias, emneStudierettQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmneStudieretterGittLegacyIder() => ExceptField("emneStudieretterGittLegacyIder");

        public QueryQueryBuilder WithOrganisasjonsenheterGittOrganisasjonsenhetskoder(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<OrganisasjonsenhetskodeInput>> organisasjonsenhetskoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "organisasjonsenhetskoder", ArgumentValue = organisasjonsenhetskoder} );
            return WithObjectField("organisasjonsenheterGittOrganisasjonsenhetskoder", alias, organisasjonsenhetQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOrganisasjonsenheterGittOrganisasjonsenhetskoder() => ExceptField("organisasjonsenheterGittOrganisasjonsenhetskoder");

        public QueryQueryBuilder WithSemesterregistreringerGittLegacyIder(SemesterregistreringQueryBuilder semesterregistreringQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<SemesterregistreringLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("semesterregistreringerGittLegacyIder", alias, semesterregistreringQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSemesterregistreringerGittLegacyIder() => ExceptField("semesterregistreringerGittLegacyIder");

        public QueryQueryBuilder WithUndervisningsaktiviteter(QueryUndervisningsaktiviteterConnectionQueryBuilder queryUndervisningsaktiviteterConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsaktiviteterFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsaktiviteter", alias, queryUndervisningsaktiviteterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktiviteter() => ExceptField("undervisningsaktiviteter");

        public QueryQueryBuilder WithUndervisningsaktiviteterGittLegacyIder(UndervisningsaktivitetQueryBuilder undervisningsaktivitetQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningsaktivitetLegacyId>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("undervisningsaktiviteterGittLegacyIder", alias, undervisningsaktivitetQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktiviteterGittLegacyIder() => ExceptField("undervisningsaktiviteterGittLegacyIder");

        public QueryQueryBuilder WithVurderingsmeldinger(QueryVurderingsmeldingerConnectionQueryBuilder queryVurderingsmeldingerConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsmeldingerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsmeldinger", alias, queryVurderingsmeldingerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsmeldinger() => ExceptField("vurderingsmeldinger");

        public QueryQueryBuilder WithEvuKursdeltakelser(QueryEvuKursdeltakelserConnectionQueryBuilder queryEvuKursdeltakelserConnectionQueryBuilder, QueryBuilderParameter<QueryEvuKursdeltakelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("evuKursdeltakelser", alias, queryEvuKursdeltakelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursdeltakelser() => ExceptField("evuKursdeltakelser");

        public QueryQueryBuilder WithEvuKursdeltakelserGittLegacyIder(EvuKursdeltakelseQueryBuilder evuKursdeltakelseQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<EvuKursdeltakelseLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("evuKursdeltakelserGittLegacyIder", alias, evuKursdeltakelseQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursdeltakelserGittLegacyIder() => ExceptField("evuKursdeltakelserGittLegacyIder");

        public QueryQueryBuilder WithSemesterregistreringshendelser(QuerySemesterregistreringshendelserConnectionQueryBuilder querySemesterregistreringshendelserConnectionQueryBuilder, QueryBuilderParameter<QuerySemesterregistreringshendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("semesterregistreringshendelser", alias, querySemesterregistreringshendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSemesterregistreringshendelser() => ExceptField("semesterregistreringshendelser");

        public QueryQueryBuilder WithEvuKursSoknaderGittLegacyIder(EvuKursSoknadQueryBuilder evuKursSoknadQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<EvuKursSoknadLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("evuKursSoknaderGittLegacyIder", alias, evuKursSoknadQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEvuKursSoknaderGittLegacyIder() => ExceptField("evuKursSoknaderGittLegacyIder");

        public QueryQueryBuilder WithPersonProfilhendelser(QueryPersonProfilhendelserConnectionQueryBuilder queryPersonProfilhendelserConnectionQueryBuilder, QueryBuilderParameter<QueryPersonProfilhendelserFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("personProfilhendelser", alias, queryPersonProfilhendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfilhendelser() => ExceptField("personProfilhendelser");

        public QueryQueryBuilder WithPersonProfilerGittFeideBrukere(PersonProfilQueryBuilder personProfilQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> feideBrukere, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "feideBrukere", ArgumentValue = feideBrukere} );
            return WithObjectField("personProfilerGittFeideBrukere", alias, personProfilQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfilerGittFeideBrukere() => ExceptField("personProfilerGittFeideBrukere");

        public QueryQueryBuilder WithPersonProfilerGittAnsattnumre(PersonProfilQueryBuilder personProfilQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> ansattnumre = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (ansattnumre != null)
                args.Add(new() { ArgumentName = "ansattnumre", ArgumentValue = ansattnumre} );

            return WithObjectField("personProfilerGittAnsattnumre", alias, personProfilQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonProfilerGittAnsattnumre() => ExceptField("personProfilerGittAnsattnumre");

        public QueryQueryBuilder WithVurderingsperioder(QueryVurderingsperioderConnectionQueryBuilder queryVurderingsperioderConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsperioderFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsperioder", alias, queryVurderingsperioderConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsperioder() => ExceptField("vurderingsperioder");

        public QueryQueryBuilder WithVurderingsavviklingstyper(QueryVurderingsavviklingstyperConnectionQueryBuilder queryVurderingsavviklingstyperConnectionQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsavviklingstyper", alias, queryVurderingsavviklingstyperConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsavviklingstyper() => ExceptField("vurderingsavviklingstyper");

        public QueryQueryBuilder WithOrganisasjonerGittOrganisasjonskoder(OrganisasjonQueryBuilder organisasjonQueryBuilder, QueryBuilderParameter<IEnumerable<string>> organisasjonskoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "organisasjonskoder", ArgumentValue = organisasjonskoder} );
            return WithObjectField("organisasjonerGittOrganisasjonskoder", alias, organisasjonQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOrganisasjonerGittOrganisasjonskoder() => ExceptField("organisasjonerGittOrganisasjonskoder");

        public QueryQueryBuilder WithKvalifikasjonsgrunnlagGittKvalifikasjonsgrunnlagkoder(KvalifikasjonsgrunnlagQueryBuilder kvalifikasjonsgrunnlagQueryBuilder, QueryBuilderParameter<IEnumerable<string>> kvalifikasjonsgrunnlagkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "kvalifikasjonsgrunnlagkoder", ArgumentValue = kvalifikasjonsgrunnlagkoder} );
            return WithObjectField("kvalifikasjonsgrunnlagGittKvalifikasjonsgrunnlagkoder", alias, kvalifikasjonsgrunnlagQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKvalifikasjonsgrunnlagGittKvalifikasjonsgrunnlagkoder() => ExceptField("kvalifikasjonsgrunnlagGittKvalifikasjonsgrunnlagkoder");

        public QueryQueryBuilder WithStudentgrunnlagGittStudentgrunnlagkoder(StudentgrunnlagQueryBuilder studentgrunnlagQueryBuilder, QueryBuilderParameter<IEnumerable<string>> studentgrunnlagkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "studentgrunnlagkoder", ArgumentValue = studentgrunnlagkoder} );
            return WithObjectField("studentgrunnlagGittStudentgrunnlagkoder", alias, studentgrunnlagQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudentgrunnlagGittStudentgrunnlagkoder() => ExceptField("studentgrunnlagGittStudentgrunnlagkoder");

        public QueryQueryBuilder WithPersonroller(QueryPersonrollerConnectionQueryBuilder queryPersonrollerConnectionQueryBuilder, QueryBuilderParameter<QueryPersonrollerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("personroller", alias, queryPersonrollerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonroller() => ExceptField("personroller");

        public QueryQueryBuilder WithProgramStudieretterGittLegacyIder(ProgramStudierettQueryBuilder programStudierettQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<ProgramStudierettLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("programStudieretterGittLegacyIder", alias, programStudierettQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptProgramStudieretterGittLegacyIder() => ExceptField("programStudieretterGittLegacyIder");

        public QueryQueryBuilder WithPersonrollerGittLegacyIder(OrganisasjonsenhetsrolleQueryBuilder organisasjonsenhetsrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("personrollerGittLegacyIder", alias, organisasjonsenhetsrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptPersonrollerGittLegacyIder() => ExceptField("personrollerGittLegacyIder");

        public QueryQueryBuilder WithStudieprogramrollerGittLegacyIder(StudieprogramrolleQueryBuilder studieprogramrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("studieprogramrollerGittLegacyIder", alias, studieprogramrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudieprogramrollerGittLegacyIder() => ExceptField("studieprogramrollerGittLegacyIder");

        public QueryQueryBuilder WithKullrollerGittLegacyIder(KullrolleQueryBuilder kullrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("kullrollerGittLegacyIder", alias, kullrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKullrollerGittLegacyIder() => ExceptField("kullrollerGittLegacyIder");

        public QueryQueryBuilder WithKlasserollerGittLegacyIder(KlasserolleQueryBuilder klasserolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("klasserollerGittLegacyIder", alias, klasserolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptKlasserollerGittLegacyIder() => ExceptField("klasserollerGittLegacyIder");

        public QueryQueryBuilder WithEmnerollerGittLegacyIder(EmnerolleQueryBuilder emnerolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("emnerollerGittLegacyIder", alias, emnerolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptEmnerollerGittLegacyIder() => ExceptField("emnerollerGittLegacyIder");

        public QueryQueryBuilder WithUndervisningsenhetsrollerGittLegacyIder(UndervisningsenhetsrolleQueryBuilder undervisningsenhetsrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("undervisningsenhetsrollerGittLegacyIder", alias, undervisningsenhetsrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsenhetsrollerGittLegacyIder() => ExceptField("undervisningsenhetsrollerGittLegacyIder");

        public QueryQueryBuilder WithUndervisningsaktivitetsrollerGittLegacyIder(UndervisningsaktivitetsrolleQueryBuilder undervisningsaktivitetsrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("undervisningsaktivitetsrollerGittLegacyIder", alias, undervisningsaktivitetsrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktivitetsrollerGittLegacyIder() => ExceptField("undervisningsaktivitetsrollerGittLegacyIder");

        public QueryQueryBuilder WithTimeplanrollerGittLegacyIder(TimeplanrolleQueryBuilder timeplanrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("timeplanrollerGittLegacyIder", alias, timeplanrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptTimeplanrollerGittLegacyIder() => ExceptField("timeplanrollerGittLegacyIder");

        public QueryQueryBuilder WithOrganisasjonsenhetsrollerGittLegacyIder(OrganisasjonsenhetsrolleQueryBuilder organisasjonsenhetsrolleQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<PersonrolleLegacyIdInput>> legacyIder = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            if (legacyIder != null)
                args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );

            return WithObjectField("organisasjonsenhetsrollerGittLegacyIder", alias, organisasjonsenhetsrolleQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOrganisasjonsenhetsrollerGittLegacyIder() => ExceptField("organisasjonsenhetsrollerGittLegacyIder");

        public QueryQueryBuilder WithVurderingsperiodeinformasjon(QueryVurderingsperiodeinformasjonConnectionQueryBuilder queryVurderingsperiodeinformasjonConnectionQueryBuilder, QueryBuilderParameter<QueryVurderingsperiodeinformasjonFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("vurderingsperiodeinformasjon", alias, queryVurderingsperiodeinformasjonConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsperiodeinformasjon() => ExceptField("vurderingsperiodeinformasjon");

        public QueryQueryBuilder WithUndervisningsterminerForEmner(QueryUndervisningsterminerForEmnerConnectionQueryBuilder queryUndervisningsterminerForEmnerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsterminerForEmnerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsterminerForEmner", alias, queryUndervisningsterminerForEmnerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsterminerForEmner() => ExceptField("undervisningsterminerForEmner");

        public QueryQueryBuilder WithUndervisningsdisipliner(QueryUndervisningsdisiplinerConnectionQueryBuilder queryUndervisningsdisiplinerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsdisiplinerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsdisipliner", alias, queryUndervisningsdisiplinerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsdisipliner() => ExceptField("undervisningsdisipliner");

        public QueryQueryBuilder WithUndervisningsformer(QueryUndervisningsformerConnectionQueryBuilder queryUndervisningsformerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsformerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsformer", alias, queryUndervisningsformerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsformer() => ExceptField("undervisningsformer");

        public QueryQueryBuilder WithLmsRomMaler(QueryLmsRomMalerConnectionQueryBuilder queryLmsRomMalerConnectionQueryBuilder, QueryBuilderParameter<QueryLmsRomMalerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("lmsRomMaler", alias, queryLmsRomMalerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptLmsRomMaler() => ExceptField("lmsRomMaler");

        public QueryQueryBuilder WithLmsRomMalerGittLmsRomMalkoder(LmsRomMalQueryBuilder lmsRomMalQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<string>> lmsRomMalkoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "lmsRomMalkoder", ArgumentValue = lmsRomMalkoder} );
            return WithObjectField("lmsRomMalerGittLmsRomMalkoder", alias, lmsRomMalQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptLmsRomMalerGittLmsRomMalkoder() => ExceptField("lmsRomMalerGittLmsRomMalkoder");

        public QueryQueryBuilder WithUndervisningsenheterGittLegacyIder(UndervisningsenhetQueryBuilder undervisningsenhetQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningsenhetLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("undervisningsenheterGittLegacyIder", alias, undervisningsenhetQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsenheterGittLegacyIder() => ExceptField("undervisningsenheterGittLegacyIder");

        public QueryQueryBuilder WithVurderingsperioderGittVurderingsperiodekoder(VurderingsperiodeQueryBuilder vurderingsperiodeQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<VurderingsperiodekodeInput>> vurderingsperiodekoder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "vurderingsperiodekoder", ArgumentValue = vurderingsperiodekoder} );
            return WithObjectField("vurderingsperioderGittVurderingsperiodekoder", alias, vurderingsperiodeQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsperioderGittVurderingsperiodekoder() => ExceptField("vurderingsperioderGittVurderingsperiodekoder");

        public QueryQueryBuilder WithFodselsnummerendringshendelser(QueryFodselsnummerendringshendelserConnectionQueryBuilder queryFodselsnummerendringshendelserConnectionQueryBuilder, QueryBuilderParameter<QueryFodselsnummerendringshendelseFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fodselsnummerendringshendelser", alias, queryFodselsnummerendringshendelserConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFodselsnummerendringshendelser() => ExceptField("fodselsnummerendringshendelser");

        public QueryQueryBuilder WithUndervisningspartiplasseringerGittLegacyIder(UndervisningspartiplasseringQueryBuilder undervisningspartiplasseringQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningspartiplasseringLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("undervisningspartiplasseringerGittLegacyIder", alias, undervisningspartiplasseringQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningspartiplasseringerGittLegacyIder() => ExceptField("undervisningspartiplasseringerGittLegacyIder");

        public QueryQueryBuilder WithUndervisningsaktivitetsonsker(QueryUndervisningsaktivitetsonskerConnectionQueryBuilder queryUndervisningsaktivitetsonskerConnectionQueryBuilder, QueryBuilderParameter<QueryUndervisningsaktivitetsonskerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("undervisningsaktivitetsonsker", alias, queryUndervisningsaktivitetsonskerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktivitetsonsker() => ExceptField("undervisningsaktivitetsonsker");

        public QueryQueryBuilder WithStudentvurderinger(StudentvurderingQueryBuilder studentvurderingQueryBuilder, QueryBuilderParameter<QueryStudentvurderingerFilterInput> filter, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            return WithObjectField("studentvurderinger", alias, studentvurderingQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptStudentvurderinger() => ExceptField("studentvurderinger");

        public QueryQueryBuilder WithResultaterGittLegacyIder(ResultatQueryBuilder resultatQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<ResultatLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("resultaterGittLegacyIder", alias, resultatQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptResultaterGittLegacyIder() => ExceptField("resultaterGittLegacyIder");

        public QueryQueryBuilder WithVurderingsmeldingerGittLegacyIder(VurderingsmeldingQueryBuilder vurderingsmeldingQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<VurderingsmeldingLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("vurderingsmeldingerGittLegacyIder", alias, vurderingsmeldingQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptVurderingsmeldingerGittLegacyIder() => ExceptField("vurderingsmeldingerGittLegacyIder");

        public QueryQueryBuilder WithUndervisningsaktivitetsonskerGittLegacyIder(UndervisningsaktivitetsonskeQueryBuilder undervisningsaktivitetsonskeQueryBuilder, QueryBuilderParameter<string> eierOrganisasjonskode, QueryBuilderParameter<IEnumerable<UndervisningsaktivitetsonskeLegacyIdInput>> legacyIder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "eierOrganisasjonskode", ArgumentValue = eierOrganisasjonskode} );
            args.Add(new() { ArgumentName = "legacyIder", ArgumentValue = legacyIder} );
            return WithObjectField("undervisningsaktivitetsonskerGittLegacyIder", alias, undervisningsaktivitetsonskeQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptUndervisningsaktivitetsonskerGittLegacyIder() => ExceptField("undervisningsaktivitetsonskerGittLegacyIder");

        public QueryQueryBuilder WithLandGittLandnumre(LandQueryBuilder landQueryBuilder, QueryBuilderParameter<IEnumerable<string>> landnumre, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "landnumre", ArgumentValue = landnumre} );
            return WithObjectField("landGittLandnumre", alias, landQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptLandGittLandnumre() => ExceptField("landGittLandnumre");

        public QueryQueryBuilder WithFagpersonkategorier(QueryFagpersonkategorierConnectionQueryBuilder queryFagpersonkategorierConnectionQueryBuilder, QueryBuilderParameter<QueryFagpersonkategorierFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fagpersonkategorier", alias, queryFagpersonkategorierConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFagpersonkategorier() => ExceptField("fagpersonkategorier");

        public QueryQueryBuilder WithSisOpptak(QuerySisOpptakConnectionQueryBuilder querySisOpptakConnectionQueryBuilder, QueryBuilderParameter<QuerySisOpptakFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("sisOpptak", alias, querySisOpptakConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSisOpptak() => ExceptField("sisOpptak");

        public QueryQueryBuilder WithSisOpptaksterminer(QuerySisOpptaksterminerConnectionQueryBuilder querySisOpptaksterminerConnectionQueryBuilder, QueryBuilderParameter<QuerySisOpptaksterminerFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("sisOpptaksterminer", alias, querySisOpptaksterminerConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptSisOpptaksterminer() => ExceptField("sisOpptaksterminer");

        public QueryQueryBuilder WithOppmoterTilUndervisning(QueryOppmoterTilUndervisningConnectionQueryBuilder queryOppmoterTilUndervisningConnectionQueryBuilder, QueryBuilderParameter<QueryOppmoterTilUndervisningFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("oppmoterTilUndervisning", alias, queryOppmoterTilUndervisningConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptOppmoterTilUndervisning() => ExceptField("oppmoterTilUndervisning");

        public QueryQueryBuilder WithFag(QueryFagConnectionQueryBuilder queryFagConnectionQueryBuilder, QueryBuilderParameter<QueryFagFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fag", alias, queryFagConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptFag() => ExceptField("fag");

        public QueryQueryBuilder WithCampusUndervisningsenheter(QueryCampusUndervisningsenheterConnectionQueryBuilder queryCampusUndervisningsenheterConnectionQueryBuilder, QueryBuilderParameter<QueryCampusUndervisningsenhetFilterInput> filter, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("campusUndervisningsenheter", alias, queryCampusUndervisningsenheterConnectionQueryBuilder, [include, skip], args);
        }

        public QueryQueryBuilder ExceptCampusUndervisningsenheter() => ExceptField("campusUndervisningsenheter");
    }
}
