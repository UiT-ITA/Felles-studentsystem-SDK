// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class PlaninformasjontypeQueryBuilder : GraphQlQueryBuilder<PlaninformasjontypeQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "aktiv" },
            new() { Name = "kode" },
            new() { Name = "navn", IsComplex = true, QueryBuilderType = typeof(PlaninformasjonnavnQueryBuilder) },
            new() { Name = "tekst", IsComplex = true, QueryBuilderType = typeof(PlaninformasjonTekstQueryBuilder) },
            new() { Name = "url", IsComplex = true, QueryBuilderType = typeof(PlaninformasjontypeUrlQueryBuilder) }
        };

        protected override string TypeName => "Planinformasjontype";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public PlaninformasjontypeQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptId() => ExceptField("id");

        public PlaninformasjontypeQueryBuilder WithAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktiv", alias, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptAktiv() => ExceptField("aktiv");

        public PlaninformasjontypeQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptKode() => ExceptField("kode");

        public PlaninformasjontypeQueryBuilder WithNavn(PlaninformasjonnavnQueryBuilder planinformasjonnavnQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navn", alias, planinformasjonnavnQueryBuilder, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptNavn() => ExceptField("navn");

        public PlaninformasjontypeQueryBuilder WithTekst(PlaninformasjonTekstQueryBuilder planinformasjonTekstQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tekst", alias, planinformasjonTekstQueryBuilder, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptTekst() => ExceptField("tekst");

        public PlaninformasjontypeQueryBuilder WithUrl(PlaninformasjontypeUrlQueryBuilder planinformasjontypeUrlQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("url", alias, planinformasjontypeUrlQueryBuilder, [include, skip]);

        public PlaninformasjontypeQueryBuilder ExceptUrl() => ExceptField("url");
    }
}
