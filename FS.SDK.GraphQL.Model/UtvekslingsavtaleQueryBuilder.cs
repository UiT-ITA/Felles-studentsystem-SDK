// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class UtvekslingsavtaleQueryBuilder : GraphQlQueryBuilder<UtvekslingsavtaleQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "avtaleId" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(UtvekslingsavtalenavnAlleSprakQueryBuilder) },
            new() { Name = "utvekslingsprogram", IsComplex = true, QueryBuilderType = typeof(UtvekslingsprogramQueryBuilder) },
            new() { Name = "gyldighetsperiode", IsComplex = true, QueryBuilderType = typeof(UtvekslingsavtaleGyldighetsperiodeQueryBuilder) },
            new() { Name = "parter", IsComplex = true, QueryBuilderType = typeof(UtvekslingsavtalepartQueryBuilder) },
            new() { Name = "publiser" },
            new() { Name = "beskrivelser", IsComplex = true, QueryBuilderType = typeof(UtvekslingsavtalebeskrivelsesavsnittQueryBuilder) }
        };

        protected override string TypeName => "Utvekslingsavtale";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public UtvekslingsavtaleQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptId() => ExceptField("id");

        public UtvekslingsavtaleQueryBuilder WithAvtaleId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("avtaleId", alias, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptAvtaleId() => ExceptField("avtaleId");

        public UtvekslingsavtaleQueryBuilder WithNavnAlleSprak(UtvekslingsavtalenavnAlleSprakQueryBuilder utvekslingsavtalenavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, utvekslingsavtalenavnAlleSprakQueryBuilder, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public UtvekslingsavtaleQueryBuilder WithUtvekslingsprogram(UtvekslingsprogramQueryBuilder utvekslingsprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utvekslingsprogram", alias, utvekslingsprogramQueryBuilder, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptUtvekslingsprogram() => ExceptField("utvekslingsprogram");

        public UtvekslingsavtaleQueryBuilder WithGyldighetsperiode(UtvekslingsavtaleGyldighetsperiodeQueryBuilder utvekslingsavtaleGyldighetsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gyldighetsperiode", alias, utvekslingsavtaleGyldighetsperiodeQueryBuilder, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptGyldighetsperiode() => ExceptField("gyldighetsperiode");

        public UtvekslingsavtaleQueryBuilder WithParter(UtvekslingsavtalepartQueryBuilder utvekslingsavtalepartQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("parter", alias, utvekslingsavtalepartQueryBuilder, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptParter() => ExceptField("parter");

        public UtvekslingsavtaleQueryBuilder WithPubliser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("publiser", alias, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptPubliser() => ExceptField("publiser");

        public UtvekslingsavtaleQueryBuilder WithBeskrivelser(UtvekslingsavtalebeskrivelsesavsnittQueryBuilder utvekslingsavtalebeskrivelsesavsnittQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("beskrivelser", alias, utvekslingsavtalebeskrivelsesavsnittQueryBuilder, [include, skip]);

        public UtvekslingsavtaleQueryBuilder ExceptBeskrivelser() => ExceptField("beskrivelser");
    }
}
