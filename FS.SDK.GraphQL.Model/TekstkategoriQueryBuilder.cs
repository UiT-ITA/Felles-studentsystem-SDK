// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class TekstkategoriQueryBuilder : GraphQlQueryBuilder<TekstkategoriQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "kode" },
            new() { Name = "rekkefolgenummer" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(TekstkategorinavnQueryBuilder) },
            new() { Name = "bruksomrader", IsComplex = true, QueryBuilderType = typeof(TekstkategoriBruksomraderConnectionQueryBuilder) },
            new() { Name = "kanBrukesTilStudieprogrambeskrivelser" },
            new() { Name = "kanBrukesTilEmnebeskrivelser" },
            new() { Name = "kanBrukesTilKursbeskrivelser" },
            new() { Name = "kanBrukesTilUtvekslingbeskrivelser" },
            new() { Name = "kanBrukesTilStedbeskrivelser" },
            new() { Name = "erEnDefaultTekstkategori" },
            new() { Name = "kanPubliseresTilWeb" },
            new() { Name = "kanPubliseresTilWebapplikasjoner" },
            new() { Name = "cdmTag" },
            new() { Name = "publiseringstag" }
        };

        protected override string TypeName => "Tekstkategori";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public TekstkategoriQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptId() => ExceptField("id");

        public TekstkategoriQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKode() => ExceptField("kode");

        public TekstkategoriQueryBuilder WithRekkefolgenummer(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("rekkefolgenummer", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptRekkefolgenummer() => ExceptField("rekkefolgenummer");

        public TekstkategoriQueryBuilder WithNavnAlleSprak(TekstkategorinavnQueryBuilder tekstkategorinavnQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, tekstkategorinavnQueryBuilder, [include, skip]);

        public TekstkategoriQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public TekstkategoriQueryBuilder WithBruksomrader(TekstkategoriBruksomraderConnectionQueryBuilder tekstkategoriBruksomraderConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("bruksomrader", alias, tekstkategoriBruksomraderConnectionQueryBuilder, [include, skip], args);
        }

        public TekstkategoriQueryBuilder ExceptBruksomrader() => ExceptField("bruksomrader");

        public TekstkategoriQueryBuilder WithKanBrukesTilStudieprogrambeskrivelser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanBrukesTilStudieprogrambeskrivelser", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanBrukesTilStudieprogrambeskrivelser() => ExceptField("kanBrukesTilStudieprogrambeskrivelser");

        public TekstkategoriQueryBuilder WithKanBrukesTilEmnebeskrivelser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanBrukesTilEmnebeskrivelser", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanBrukesTilEmnebeskrivelser() => ExceptField("kanBrukesTilEmnebeskrivelser");

        public TekstkategoriQueryBuilder WithKanBrukesTilKursbeskrivelser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanBrukesTilKursbeskrivelser", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanBrukesTilKursbeskrivelser() => ExceptField("kanBrukesTilKursbeskrivelser");

        public TekstkategoriQueryBuilder WithKanBrukesTilUtvekslingbeskrivelser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanBrukesTilUtvekslingbeskrivelser", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanBrukesTilUtvekslingbeskrivelser() => ExceptField("kanBrukesTilUtvekslingbeskrivelser");

        public TekstkategoriQueryBuilder WithKanBrukesTilStedbeskrivelser(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanBrukesTilStedbeskrivelser", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanBrukesTilStedbeskrivelser() => ExceptField("kanBrukesTilStedbeskrivelser");

        public TekstkategoriQueryBuilder WithErEnDefaultTekstkategori(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erEnDefaultTekstkategori", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptErEnDefaultTekstkategori() => ExceptField("erEnDefaultTekstkategori");

        public TekstkategoriQueryBuilder WithKanPubliseresTilWeb(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseresTilWeb", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanPubliseresTilWeb() => ExceptField("kanPubliseresTilWeb");

        public TekstkategoriQueryBuilder WithKanPubliseresTilWebapplikasjoner(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseresTilWebapplikasjoner", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptKanPubliseresTilWebapplikasjoner() => ExceptField("kanPubliseresTilWebapplikasjoner");

        public TekstkategoriQueryBuilder WithCdmTag(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("cdmTag", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptCdmTag() => ExceptField("cdmTag");

        public TekstkategoriQueryBuilder WithPubliseringstag(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("publiseringstag", alias, [include, skip]);

        public TekstkategoriQueryBuilder ExceptPubliseringstag() => ExceptField("publiseringstag");
    }
}
