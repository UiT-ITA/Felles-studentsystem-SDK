// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmnekategoriQueryBuilder : GraphQlQueryBuilder<EmnekategoriQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnekategorinavnAlleSprakQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "kode" },
            new() { Name = "prioritetsnummer" }
        };

        protected override string TypeName => "Emnekategori";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmnekategoriQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EmnekategoriQueryBuilder ExceptId() => ExceptField("id");

        public EmnekategoriQueryBuilder WithNavnAlleSprak(EmnekategorinavnAlleSprakQueryBuilder emnekategorinavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, emnekategorinavnAlleSprakQueryBuilder, [include, skip]);

        public EmnekategoriQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public EmnekategoriQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public EmnekategoriQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public EmnekategoriQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public EmnekategoriQueryBuilder ExceptKode() => ExceptField("kode");

        public EmnekategoriQueryBuilder WithPrioritetsnummer(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("prioritetsnummer", alias, [include, skip]);

        public EmnekategoriQueryBuilder ExceptPrioritetsnummer() => ExceptField("prioritetsnummer");
    }
}
