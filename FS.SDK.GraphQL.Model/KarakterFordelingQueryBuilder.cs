// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class KarakterFordelingQueryBuilder : GraphQlQueryBuilder<KarakterFordelingQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "antallA" },
            new() { Name = "antallB" },
            new() { Name = "antallC" },
            new() { Name = "antallD" },
            new() { Name = "antallE" }
        };

        protected override string TypeName => "KarakterFordeling";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public KarakterFordelingQueryBuilder WithAntallA(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallA", alias, [include, skip]);

        public KarakterFordelingQueryBuilder ExceptAntallA() => ExceptField("antallA");

        public KarakterFordelingQueryBuilder WithAntallB(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallB", alias, [include, skip]);

        public KarakterFordelingQueryBuilder ExceptAntallB() => ExceptField("antallB");

        public KarakterFordelingQueryBuilder WithAntallC(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallC", alias, [include, skip]);

        public KarakterFordelingQueryBuilder ExceptAntallC() => ExceptField("antallC");

        public KarakterFordelingQueryBuilder WithAntallD(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallD", alias, [include, skip]);

        public KarakterFordelingQueryBuilder ExceptAntallD() => ExceptField("antallD");

        public KarakterFordelingQueryBuilder WithAntallE(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("antallE", alias, [include, skip]);

        public KarakterFordelingQueryBuilder ExceptAntallE() => ExceptField("antallE");
    }
}
