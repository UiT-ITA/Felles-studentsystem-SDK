// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmneNavnehistorikkQueryBuilder : GraphQlQueryBuilder<EmneNavnehistorikkQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "fraTermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "tilTermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnenavnAlleSprakQueryBuilder) },
            new() { Name = "navnForkortetAlleSprak", IsComplex = true, QueryBuilderType = typeof(EmnenavnForkortetAlleSprakQueryBuilder) }
        };

        protected override string TypeName => "EmneNavnehistorikk";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmneNavnehistorikkQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EmneNavnehistorikkQueryBuilder ExceptId() => ExceptField("id");

        public EmneNavnehistorikkQueryBuilder WithFraTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fraTermin", alias, terminQueryBuilder, [include, skip]);

        public EmneNavnehistorikkQueryBuilder ExceptFraTermin() => ExceptField("fraTermin");

        public EmneNavnehistorikkQueryBuilder WithTilTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tilTermin", alias, terminQueryBuilder, [include, skip]);

        public EmneNavnehistorikkQueryBuilder ExceptTilTermin() => ExceptField("tilTermin");

        public EmneNavnehistorikkQueryBuilder WithNavnAlleSprak(EmnenavnAlleSprakQueryBuilder emnenavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, emnenavnAlleSprakQueryBuilder, [include, skip]);

        public EmneNavnehistorikkQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public EmneNavnehistorikkQueryBuilder WithNavnForkortetAlleSprak(EmnenavnForkortetAlleSprakQueryBuilder emnenavnForkortetAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnForkortetAlleSprak", alias, emnenavnForkortetAlleSprakQueryBuilder, [include, skip]);

        public EmneNavnehistorikkQueryBuilder ExceptNavnForkortetAlleSprak() => ExceptField("navnForkortetAlleSprak");
    }
}
