// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class KlasserolleQueryBuilder : GraphQlQueryBuilder<KlasserolleQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "fsRolle", IsComplex = true, QueryBuilderType = typeof(FsRolleQueryBuilder) },
            new() { Name = "klasse", IsComplex = true, QueryBuilderType = typeof(KlasseQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "gyldighetsperiode", IsComplex = true, QueryBuilderType = typeof(KlasserolleGyldighetsperiodeQueryBuilder) },
            new() { Name = "personProfil", IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) },
            new() { Name = "fagperson", IsComplex = true, QueryBuilderType = typeof(FagpersonVedLarestedQueryBuilder) },
            new() { Name = "aktivStatus" }
        };

        protected override string TypeName => "Klasserolle";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public KlasserolleQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public KlasserolleQueryBuilder ExceptId() => ExceptField("id");

        public KlasserolleQueryBuilder WithFsRolle(FsRolleQueryBuilder fsRolleQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fsRolle", alias, fsRolleQueryBuilder, [include, skip]);

        public KlasserolleQueryBuilder ExceptFsRolle() => ExceptField("fsRolle");

        public KlasserolleQueryBuilder WithKlasse(KlasseQueryBuilder klasseQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("klasse", alias, klasseQueryBuilder, [include, skip]);

        public KlasserolleQueryBuilder ExceptKlasse() => ExceptField("klasse");

        public KlasserolleQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public KlasserolleQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public KlasserolleQueryBuilder WithGyldighetsperiode(KlasserolleGyldighetsperiodeQueryBuilder klasserolleGyldighetsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gyldighetsperiode", alias, klasserolleGyldighetsperiodeQueryBuilder, [include, skip]);

        public KlasserolleQueryBuilder ExceptGyldighetsperiode() => ExceptField("gyldighetsperiode");

        public KlasserolleQueryBuilder WithPersonProfil(PersonProfilQueryBuilder personProfilQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("personProfil", alias, personProfilQueryBuilder, [include, skip]);

        public KlasserolleQueryBuilder ExceptPersonProfil() => ExceptField("personProfil");

        public KlasserolleQueryBuilder WithFagperson(FagpersonVedLarestedQueryBuilder fagpersonVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fagperson", alias, fagpersonVedLarestedQueryBuilder, [include, skip]);

        public KlasserolleQueryBuilder ExceptFagperson() => ExceptField("fagperson");

        public KlasserolleQueryBuilder WithAktivStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktivStatus", alias, [include, skip]);

        public KlasserolleQueryBuilder ExceptAktivStatus() => ExceptField("aktivStatus");
    }
}
