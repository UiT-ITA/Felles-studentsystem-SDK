// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class KullQueryBuilder : GraphQlQueryBuilder<KullQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(KullNavnAlleSprakQueryBuilder) },
            new() { Name = "terminV2", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "studieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "bibliotek", IsComplex = true, QueryBuilderType = typeof(BibliotekQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "klasser", IsComplex = true, QueryBuilderType = typeof(KullKlasserConnectionQueryBuilder) },
            new() { Name = "skalEksporteresTilLms" },
            new() { Name = "lmsRomkode" },
            new() { Name = "tjenestenummerForLms" },
            new() { Name = "studieoppbygning", IsComplex = true, QueryBuilderType = typeof(StudieoppbygningForKullQueryBuilder) },
            new() { Name = "personroller", IsComplex = true, QueryBuilderType = typeof(KullrolleQueryBuilder) },
            new() { Name = "avgifter", IsComplex = true, QueryBuilderType = typeof(KullAvgifterConnectionQueryBuilder) },
            new() { Name = "fsOpptaksterminer", IsComplex = true, QueryBuilderType = typeof(KullFsOpptaksterminerConnectionQueryBuilder) },
            new() { Name = "campuser", IsComplex = true, QueryBuilderType = typeof(KullcampusQueryBuilder) }
        };

        protected override string TypeName => "Kull";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public KullQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public KullQueryBuilder ExceptId() => ExceptField("id");

        public KullQueryBuilder WithNavnAlleSprak(KullNavnAlleSprakQueryBuilder kullNavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, kullNavnAlleSprakQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public KullQueryBuilder WithTerminV2(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("terminV2", alias, terminQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptTerminV2() => ExceptField("terminV2");

        public KullQueryBuilder WithStudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptStudieprogram() => ExceptField("studieprogram");

        public KullQueryBuilder WithBibliotek(BibliotekQueryBuilder bibliotekQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("bibliotek", alias, bibliotekQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptBibliotek() => ExceptField("bibliotek");

        public KullQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public KullQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public KullQueryBuilder WithKlasser(KullKlasserConnectionQueryBuilder kullKlasserConnectionQueryBuilder, QueryBuilderParameter<KullKlasserFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("klasser", alias, kullKlasserConnectionQueryBuilder, [include, skip], args);
        }

        public KullQueryBuilder ExceptKlasser() => ExceptField("klasser");

        public KullQueryBuilder WithSkalEksporteresTilLms(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skalEksporteresTilLms", alias, [include, skip]);

        public KullQueryBuilder ExceptSkalEksporteresTilLms() => ExceptField("skalEksporteresTilLms");

        public KullQueryBuilder WithLmsRomkode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("lmsRomkode", alias, [include, skip]);

        public KullQueryBuilder ExceptLmsRomkode() => ExceptField("lmsRomkode");

        public KullQueryBuilder WithTjenestenummerForLms(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("tjenestenummerForLms", alias, [include, skip]);

        public KullQueryBuilder ExceptTjenestenummerForLms() => ExceptField("tjenestenummerForLms");

        public KullQueryBuilder WithStudieoppbygning(StudieoppbygningForKullQueryBuilder studieoppbygningForKullQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieoppbygning", alias, studieoppbygningForKullQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptStudieoppbygning() => ExceptField("studieoppbygning");

        public KullQueryBuilder WithPersonroller(KullrolleQueryBuilder kullrolleQueryBuilder, QueryBuilderParameter<KullpersonrollerFilter> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("personroller", alias, kullrolleQueryBuilder, [include, skip], args);
        }

        public KullQueryBuilder ExceptPersonroller() => ExceptField("personroller");

        public KullQueryBuilder WithAvgifter(KullAvgifterConnectionQueryBuilder kullAvgifterConnectionQueryBuilder, QueryBuilderParameter<KullKullOgKlasseSpesifikkeAvgifterFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("avgifter", alias, kullAvgifterConnectionQueryBuilder, [include, skip], args);
        }

        public KullQueryBuilder ExceptAvgifter() => ExceptField("avgifter");

        public KullQueryBuilder WithFsOpptaksterminer(KullFsOpptaksterminerConnectionQueryBuilder kullFsOpptaksterminerConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fsOpptaksterminer", alias, kullFsOpptaksterminerConnectionQueryBuilder, [include, skip], args);
        }

        public KullQueryBuilder ExceptFsOpptaksterminer() => ExceptField("fsOpptaksterminer");

        public KullQueryBuilder WithCampuser(KullcampusQueryBuilder kullcampusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("campuser", alias, kullcampusQueryBuilder, [include, skip]);

        public KullQueryBuilder ExceptCampuser() => ExceptField("campuser");
    }
}
