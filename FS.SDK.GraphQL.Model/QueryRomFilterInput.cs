// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class QueryRomFilterInput : IGraphQlInputObject
    {
        private InputPropertyInfo _eierOrganisasjonskode;
        private InputPropertyInfo _bygninger;
        private InputPropertyInfo _romtyper;
        private InputPropertyInfo _romkoder;
        private InputPropertyInfo _erAktiv;
        private InputPropertyInfo _freeText;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("eierOrganisasjonskode")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("eierOrganisasjonskode")]
        public QueryBuilderParameter<string> EierOrganisasjonskode
        {
            get => (QueryBuilderParameter<string>)_eierOrganisasjonskode.Value;
            set => _eierOrganisasjonskode = new() { Name = "eierOrganisasjonskode", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("bygninger")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("bygninger")]
        public QueryBuilderParameter<ICollection<string>> Bygninger
        {
            get => (QueryBuilderParameter<ICollection<string>>)_bygninger.Value;
            set => _bygninger = new() { Name = "bygninger", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("romtyper")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("romtyper")]
        public QueryBuilderParameter<ICollection<string>> Romtyper
        {
            get => (QueryBuilderParameter<ICollection<string>>)_romtyper.Value;
            set => _romtyper = new() { Name = "romtyper", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("romkoder")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("romkoder")]
        public QueryBuilderParameter<ICollection<string>> Romkoder
        {
            get => (QueryBuilderParameter<ICollection<string>>)_romkoder.Value;
            set => _romkoder = new() { Name = "romkoder", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("erAktiv")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("erAktiv")]
        public QueryBuilderParameter<ICollection<bool>> ErAktiv
        {
            get => (QueryBuilderParameter<ICollection<bool>>)_erAktiv.Value;
            set => _erAktiv = new() { Name = "erAktiv", Value = value };
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("freeText")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        [System.Text.Json.Serialization.JsonPropertyName("freeText")]
        public QueryBuilderParameter<string> FreeText
        {
            get => (QueryBuilderParameter<string>)_freeText.Value;
            set => _freeText = new() { Name = "freeText", Value = value };
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_eierOrganisasjonskode.Name != null) yield return _eierOrganisasjonskode;
            if (_bygninger.Name != null) yield return _bygninger;
            if (_romtyper.Name != null) yield return _romtyper;
            if (_romkoder.Name != null) yield return _romkoder;
            if (_erAktiv.Name != null) yield return _erAktiv;
            if (_freeText.Name != null) yield return _freeText;
        }
    }
}
