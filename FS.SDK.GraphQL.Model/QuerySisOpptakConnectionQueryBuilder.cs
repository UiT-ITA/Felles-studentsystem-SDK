// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class QuerySisOpptakConnectionQueryBuilder : GraphQlQueryBuilder<QuerySisOpptakConnectionQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "edges", IsComplex = true, QueryBuilderType = typeof(QuerySisOpptakConnectionEdgeQueryBuilder) },
            new() { Name = "pageInfo", IsComplex = true, QueryBuilderType = typeof(PageInfoQueryBuilder) },
            new() { Name = "nodes", IsComplex = true, QueryBuilderType = typeof(FsOpptakQueryBuilder) },
            new() { Name = "totalCount" }
        };

        protected override string TypeName => "QuerySisOpptakConnection";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public QuerySisOpptakConnectionQueryBuilder WithEdges(QuerySisOpptakConnectionEdgeQueryBuilder querySisOpptakConnectionEdgeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("edges", alias, querySisOpptakConnectionEdgeQueryBuilder, [include, skip]);

        public QuerySisOpptakConnectionQueryBuilder ExceptEdges() => ExceptField("edges");

        public QuerySisOpptakConnectionQueryBuilder WithPageInfo(PageInfoQueryBuilder pageInfoQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("pageInfo", alias, pageInfoQueryBuilder, [include, skip]);

        public QuerySisOpptakConnectionQueryBuilder ExceptPageInfo() => ExceptField("pageInfo");

        public QuerySisOpptakConnectionQueryBuilder WithNodes(FsOpptakQueryBuilder fsOpptakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("nodes", alias, fsOpptakQueryBuilder, [include, skip]);

        public QuerySisOpptakConnectionQueryBuilder ExceptNodes() => ExceptField("nodes");

        public QuerySisOpptakConnectionQueryBuilder WithTotalCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("totalCount", alias, [include, skip]);

        public QuerySisOpptakConnectionQueryBuilder ExceptTotalCount() => ExceptField("totalCount");
    }
}
