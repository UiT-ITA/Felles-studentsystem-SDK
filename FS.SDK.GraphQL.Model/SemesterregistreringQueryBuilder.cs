// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class SemesterregistreringQueryBuilder : GraphQlQueryBuilder<SemesterregistreringQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "harBetaltSemesteravgiftV2" },
            new() { Name = "erSemesterregistrert" },
            new() { Name = "registreringsform", IsComplex = true, QueryBuilderType = typeof(RegistreringsformQueryBuilder) },
            new() { Name = "betalingsform", IsComplex = true, QueryBuilderType = typeof(BetalingsformQueryBuilder) },
            new() { Name = "student", IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "campus", IsComplex = true, QueryBuilderType = typeof(CampusQueryBuilder) },
            new() { Name = "betaltSemesteravgiftDato" },
            new() { Name = "betaltSemesteravgiftVedOrganisasjon", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "erUgyldiggjort" }
        };

        protected override string TypeName => "Semesterregistrering";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public SemesterregistreringQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptId() => ExceptField("id");

        public SemesterregistreringQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptTermin() => ExceptField("termin");

        public SemesterregistreringQueryBuilder WithHarBetaltSemesteravgiftV2(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("harBetaltSemesteravgiftV2", alias, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptHarBetaltSemesteravgiftV2() => ExceptField("harBetaltSemesteravgiftV2");

        public SemesterregistreringQueryBuilder WithErSemesterregistrert(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erSemesterregistrert", alias, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptErSemesterregistrert() => ExceptField("erSemesterregistrert");

        public SemesterregistreringQueryBuilder WithRegistreringsform(RegistreringsformQueryBuilder registreringsformQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("registreringsform", alias, registreringsformQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptRegistreringsform() => ExceptField("registreringsform");

        public SemesterregistreringQueryBuilder WithBetalingsform(BetalingsformQueryBuilder betalingsformQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("betalingsform", alias, betalingsformQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptBetalingsform() => ExceptField("betalingsform");

        public SemesterregistreringQueryBuilder WithStudent(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("student", alias, studentVedLarestedQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptStudent() => ExceptField("student");

        public SemesterregistreringQueryBuilder WithCampus(CampusQueryBuilder campusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("campus", alias, campusQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptCampus() => ExceptField("campus");

        public SemesterregistreringQueryBuilder WithBetaltSemesteravgiftDato(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("betaltSemesteravgiftDato", alias, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptBetaltSemesteravgiftDato() => ExceptField("betaltSemesteravgiftDato");

        public SemesterregistreringQueryBuilder WithBetaltSemesteravgiftVedOrganisasjon(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("betaltSemesteravgiftVedOrganisasjon", alias, organisasjonQueryBuilder, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptBetaltSemesteravgiftVedOrganisasjon() => ExceptField("betaltSemesteravgiftVedOrganisasjon");

        public SemesterregistreringQueryBuilder WithErUgyldiggjort(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erUgyldiggjort", alias, [include, skip]);

        public SemesterregistreringQueryBuilder ExceptErUgyldiggjort() => ExceptField("erUgyldiggjort");
    }
}
