// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class PubliseringsklartStudieprogramForTerminQueryBuilder : GraphQlQueryBuilder<PubliseringsklartStudieprogramForTerminQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "termin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "studieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "beskrivelsesavsnitt", IsComplex = true, QueryBuilderType = typeof(StudieprogrambeskrivelsesavsnittQueryBuilder) },
            new() { Name = "kanPubliseres" },
            new() { Name = "kanPubliseresTilEksterneRegistre" },
            new() { Name = "kanPubliseresTilRegistreForEngelsksprakligeStudier" },
            new() { Name = "url" }
        };

        protected override string TypeName => "PubliseringsklartStudieprogramForTermin";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptId() => ExceptField("id");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithTermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("termin", alias, terminQueryBuilder, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptTermin() => ExceptField("termin");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithStudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptStudieprogram() => ExceptField("studieprogram");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithBeskrivelsesavsnitt(StudieprogrambeskrivelsesavsnittQueryBuilder studieprogrambeskrivelsesavsnittQueryBuilder, QueryBuilderParameter<PubliseringsklartStudieprogramForTerminBeskrivelserFilterInput> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("beskrivelsesavsnitt", alias, studieprogrambeskrivelsesavsnittQueryBuilder, [include, skip], args);
        }

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptBeskrivelsesavsnitt() => ExceptField("beskrivelsesavsnitt");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithKanPubliseres(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseres", alias, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptKanPubliseres() => ExceptField("kanPubliseres");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithKanPubliseresTilEksterneRegistre(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseresTilEksterneRegistre", alias, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptKanPubliseresTilEksterneRegistre() => ExceptField("kanPubliseresTilEksterneRegistre");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithKanPubliseresTilRegistreForEngelsksprakligeStudier(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kanPubliseresTilRegistreForEngelsksprakligeStudier", alias, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptKanPubliseresTilRegistreForEngelsksprakligeStudier() => ExceptField("kanPubliseresTilRegistreForEngelsksprakligeStudier");

        public PubliseringsklartStudieprogramForTerminQueryBuilder WithUrl(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("url", alias, [include, skip]);

        public PubliseringsklartStudieprogramForTerminQueryBuilder ExceptUrl() => ExceptField("url");
    }
}
