// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class ResultatQueryBuilder : GraphQlQueryBuilder<ResultatQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "karakter", IsComplex = true, QueryBuilderType = typeof(KarakterResultatQueryBuilder) },
            new() { Name = "vurderingsresultatstatus", IsComplex = true, QueryBuilderType = typeof(VurderingsresultatstatusQueryBuilder) },
            new() { Name = "erGyldig" },
            new() { Name = "erKunngjort" },
            new() { Name = "tidspunktOpprettet" },
            new() { Name = "emne", IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "spesialpensumTittel", IsComplex = true, QueryBuilderType = typeof(SpesialpensumTittelQueryBuilder) },
            new() { Name = "vurderingsenhet", IsComplex = true, QueryBuilderType = typeof(VurderingsenhetQueryBuilder) },
            new() { Name = "opprinneligLarested", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "gjeldendeVekting", IsComplex = true, QueryBuilderType = typeof(VurderingsprotokollGjeldendeVektingQueryBuilder) },
            new() { Name = "erOppnadd" },
            new() { Name = "vurderingsoppbygningsdelskode" },
            new() { Name = "oversattOppgavetittel", IsComplex = true, QueryBuilderType = typeof(ResultatOversattOppgavetittelQueryBuilder) },
            new() { Name = "originalOppgavetittel", IsComplex = true, QueryBuilderType = typeof(ResultatOriginalOppgavetittelQueryBuilder) },
            new() { Name = "larested", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "studieprogram", IsComplex = true, QueryBuilderType = typeof(StudieprogramQueryBuilder) },
            new() { Name = "kandidatinformasjon", IsComplex = true, QueryBuilderType = typeof(ResultatKandidatinformasjonQueryBuilder) },
            new() { Name = "student", IsComplex = true, QueryBuilderType = typeof(StudentVedLarestedQueryBuilder) },
            new() { Name = "protokollFoerteEmnesamlinger", IsComplex = true, QueryBuilderType = typeof(ProtokollfoertEmnesamlingQueryBuilder) },
            new() { Name = "oppnaddeKvalifikasjoner", IsComplex = true, QueryBuilderType = typeof(OppnaddKvalifikasjonQueryBuilder) },
            new() { Name = "children", IsComplex = true, QueryBuilderType = typeof(ResultatQueryBuilder) },
            new() { Name = "parents", IsComplex = true, QueryBuilderType = typeof(ResultatQueryBuilder) }
        };

        protected override string TypeName => "Resultat";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public ResultatQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public ResultatQueryBuilder ExceptId() => ExceptField("id");

        public ResultatQueryBuilder WithKarakter(KarakterResultatQueryBuilder karakterResultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("karakter", alias, karakterResultatQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptKarakter() => ExceptField("karakter");

        public ResultatQueryBuilder WithVurderingsresultatstatus(VurderingsresultatstatusQueryBuilder vurderingsresultatstatusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsresultatstatus", alias, vurderingsresultatstatusQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptVurderingsresultatstatus() => ExceptField("vurderingsresultatstatus");

        public ResultatQueryBuilder WithErGyldig(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erGyldig", alias, [include, skip]);

        public ResultatQueryBuilder ExceptErGyldig() => ExceptField("erGyldig");

        public ResultatQueryBuilder WithErKunngjort(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erKunngjort", alias, [include, skip]);

        public ResultatQueryBuilder ExceptErKunngjort() => ExceptField("erKunngjort");

        public ResultatQueryBuilder WithTidspunktOpprettet(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("tidspunktOpprettet", alias, [include, skip]);

        public ResultatQueryBuilder ExceptTidspunktOpprettet() => ExceptField("tidspunktOpprettet");

        public ResultatQueryBuilder WithEmne(EmneQueryBuilder emneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emne", alias, emneQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptEmne() => ExceptField("emne");

        public ResultatQueryBuilder WithSpesialpensumTittel(SpesialpensumTittelQueryBuilder spesialpensumTittelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("spesialpensumTittel", alias, spesialpensumTittelQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptSpesialpensumTittel() => ExceptField("spesialpensumTittel");

        public ResultatQueryBuilder WithVurderingsenhet(VurderingsenhetQueryBuilder vurderingsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsenhet", alias, vurderingsenhetQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptVurderingsenhet() => ExceptField("vurderingsenhet");

        public ResultatQueryBuilder WithOpprinneligLarested(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("opprinneligLarested", alias, organisasjonQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptOpprinneligLarested() => ExceptField("opprinneligLarested");

        public ResultatQueryBuilder WithGjeldendeVekting(VurderingsprotokollGjeldendeVektingQueryBuilder vurderingsprotokollGjeldendeVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gjeldendeVekting", alias, vurderingsprotokollGjeldendeVektingQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptGjeldendeVekting() => ExceptField("gjeldendeVekting");

        public ResultatQueryBuilder WithErOppnadd(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erOppnadd", alias, [include, skip]);

        public ResultatQueryBuilder ExceptErOppnadd() => ExceptField("erOppnadd");

        public ResultatQueryBuilder WithVurderingsoppbygningsdelskode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("vurderingsoppbygningsdelskode", alias, [include, skip]);

        public ResultatQueryBuilder ExceptVurderingsoppbygningsdelskode() => ExceptField("vurderingsoppbygningsdelskode");

        public ResultatQueryBuilder WithOversattOppgavetittel(ResultatOversattOppgavetittelQueryBuilder resultatOversattOppgavetittelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oversattOppgavetittel", alias, resultatOversattOppgavetittelQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptOversattOppgavetittel() => ExceptField("oversattOppgavetittel");

        public ResultatQueryBuilder WithOriginalOppgavetittel(ResultatOriginalOppgavetittelQueryBuilder resultatOriginalOppgavetittelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("originalOppgavetittel", alias, resultatOriginalOppgavetittelQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptOriginalOppgavetittel() => ExceptField("originalOppgavetittel");

        public ResultatQueryBuilder WithLarested(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("larested", alias, organisasjonQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptLarested() => ExceptField("larested");

        public ResultatQueryBuilder WithStudieprogram(StudieprogramQueryBuilder studieprogramQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogram", alias, studieprogramQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptStudieprogram() => ExceptField("studieprogram");

        public ResultatQueryBuilder WithKandidatinformasjon(ResultatKandidatinformasjonQueryBuilder resultatKandidatinformasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("kandidatinformasjon", alias, resultatKandidatinformasjonQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptKandidatinformasjon() => ExceptField("kandidatinformasjon");

        public ResultatQueryBuilder WithStudent(StudentVedLarestedQueryBuilder studentVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("student", alias, studentVedLarestedQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptStudent() => ExceptField("student");

        public ResultatQueryBuilder WithProtokollFoerteEmnesamlinger(ProtokollfoertEmnesamlingQueryBuilder protokollfoertEmnesamlingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("protokollFoerteEmnesamlinger", alias, protokollfoertEmnesamlingQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptProtokollFoerteEmnesamlinger() => ExceptField("protokollFoerteEmnesamlinger");

        public ResultatQueryBuilder WithOppnaddeKvalifikasjoner(OppnaddKvalifikasjonQueryBuilder oppnaddKvalifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppnaddeKvalifikasjoner", alias, oppnaddKvalifikasjonQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptOppnaddeKvalifikasjoner() => ExceptField("oppnaddeKvalifikasjoner");

        public ResultatQueryBuilder WithChildren(ResultatQueryBuilder resultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("children", alias, resultatQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptChildren() => ExceptField("children");

        public ResultatQueryBuilder WithParents(ResultatQueryBuilder resultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("parents", alias, resultatQueryBuilder, [include, skip]);

        public ResultatQueryBuilder ExceptParents() => ExceptField("parents");
    }
}
