// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class OrganisasjonsenhetsrolleQueryBuilder : GraphQlQueryBuilder<OrganisasjonsenhetsrolleQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "fsRolle", IsComplex = true, QueryBuilderType = typeof(FsRolleQueryBuilder) },
            new() { Name = "organisasjon", IsComplex = true, QueryBuilderType = typeof(OrganisasjonQueryBuilder) },
            new() { Name = "organisasjonsenhet", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "aktiv" },
            new() { Name = "gyldighetsperiode", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetsrolleGyldighetsperiodeQueryBuilder) },
            new() { Name = "fagperson", IsComplex = true, QueryBuilderType = typeof(FagpersonVedLarestedQueryBuilder) },
            new() { Name = "aktivStatus" },
            new() { Name = "personProfil", IsComplex = true, QueryBuilderType = typeof(PersonProfilQueryBuilder) }
        };

        protected override string TypeName => "Organisasjonsenhetsrolle";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public OrganisasjonsenhetsrolleQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptId() => ExceptField("id");

        public OrganisasjonsenhetsrolleQueryBuilder WithFsRolle(FsRolleQueryBuilder fsRolleQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fsRolle", alias, fsRolleQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptFsRolle() => ExceptField("fsRolle");

        public OrganisasjonsenhetsrolleQueryBuilder WithOrganisasjon(OrganisasjonQueryBuilder organisasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("organisasjon", alias, organisasjonQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptOrganisasjon() => ExceptField("organisasjon");

        public OrganisasjonsenhetsrolleQueryBuilder WithOrganisasjonsenhet(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("organisasjonsenhet", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptOrganisasjonsenhet() => ExceptField("organisasjonsenhet");

        public OrganisasjonsenhetsrolleQueryBuilder WithAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktiv", alias, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptAktiv() => ExceptField("aktiv");

        public OrganisasjonsenhetsrolleQueryBuilder WithGyldighetsperiode(OrganisasjonsenhetsrolleGyldighetsperiodeQueryBuilder organisasjonsenhetsrolleGyldighetsperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("gyldighetsperiode", alias, organisasjonsenhetsrolleGyldighetsperiodeQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptGyldighetsperiode() => ExceptField("gyldighetsperiode");

        public OrganisasjonsenhetsrolleQueryBuilder WithFagperson(FagpersonVedLarestedQueryBuilder fagpersonVedLarestedQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fagperson", alias, fagpersonVedLarestedQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptFagperson() => ExceptField("fagperson");

        public OrganisasjonsenhetsrolleQueryBuilder WithAktivStatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("aktivStatus", alias, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptAktivStatus() => ExceptField("aktivStatus");

        public OrganisasjonsenhetsrolleQueryBuilder WithPersonProfil(PersonProfilQueryBuilder personProfilQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("personProfil", alias, personProfilQueryBuilder, [include, skip]);

        public OrganisasjonsenhetsrolleQueryBuilder ExceptPersonProfil() => ExceptField("personProfil");
    }
}
