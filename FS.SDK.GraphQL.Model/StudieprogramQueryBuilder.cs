// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class StudieprogramQueryBuilder : GraphQlQueryBuilder<StudieprogramQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "kode" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(StudieprogramnavnAlleSprakQueryBuilder) },
            new() { Name = "erAktiv" },
            new() { Name = "beskrivelsesavsnitt", IsComplex = true, QueryBuilderType = typeof(StudieprogramBeskrivelsesavsnittConnectionQueryBuilder) },
            new() { Name = "undervisningsorganisering", IsComplex = true, QueryBuilderType = typeof(UndervisningsorganiseringQueryBuilder) },
            new() { Name = "godkjenning", IsComplex = true, QueryBuilderType = typeof(StudieprogramGodkjenningQueryBuilder) },
            new() { Name = "vekting", IsComplex = true, QueryBuilderType = typeof(StudieprogramVektingQueryBuilder) },
            new() { Name = "prosentHeltid" },
            new() { Name = "varighet", IsComplex = true, QueryBuilderType = typeof(StudieprogramvarighetQueryBuilder) },
            new() { Name = "studieoppbygninger", IsComplex = true, QueryBuilderType = typeof(StudieoppbygningForKullQueryBuilder) },
            new() { Name = "nusKode" },
            new() { Name = "studieniva", IsComplex = true, QueryBuilderType = typeof(StudienivaQueryBuilder) },
            new() { Name = "personroller", IsComplex = true, QueryBuilderType = typeof(StudieprogramrolleQueryBuilder) },
            new() { Name = "studieretninger", IsComplex = true, QueryBuilderType = typeof(StudieprogramStudieretningerConnectionQueryBuilder) },
            new() { Name = "campuser", IsComplex = true, QueryBuilderType = typeof(StudieprogramCampuserConnectionQueryBuilder) },
            new() { Name = "studieansvarligOrganisasjonsenhet", IsComplex = true, QueryBuilderType = typeof(OrganisasjonsenhetQueryBuilder) },
            new() { Name = "kull", IsComplex = true, QueryBuilderType = typeof(StudieprogramKullConnectionQueryBuilder) },
            new() { Name = "skalEksporteresTilLms" },
            new() { Name = "lmsRomkode" },
            new() { Name = "skalPubliseres" },
            new() { Name = "urlAlleSprak", IsComplex = true, QueryBuilderType = typeof(StudieprogramUrlAlleSprakQueryBuilder) },
            new() { Name = "utdanningsomrade", IsComplex = true, QueryBuilderType = typeof(UtdanningsomradeQueryBuilder) },
            new() { Name = "sprak", IsComplex = true, QueryBuilderType = typeof(StudieprogramSprakQueryBuilder) },
            new() { Name = "forerTilKvalifikasjon", IsComplex = true, QueryBuilderType = typeof(KvalifikasjonQueryBuilder) },
            new() { Name = "fsOpptaksterminer", IsComplex = true, QueryBuilderType = typeof(StudieprogramFsOpptaksterminerConnectionQueryBuilder) },
            new() { Name = "navnAlleSprakHistorikk", IsComplex = true, QueryBuilderType = typeof(StudieprogramNavnehistorikkQueryBuilder) },
            new() { Name = "prosentEgenfinansiering" },
            new() { Name = "prosentPraksis" },
            new() { Name = "studenterSkalHaUtdanningsplan" },
            new() { Name = "studieprogramkategori", IsComplex = true, QueryBuilderType = typeof(StudieprogramkategoriQueryBuilder) },
            new() { Name = "sisteOpptakstermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "finansieringstype", IsComplex = true, QueryBuilderType = typeof(FinansieringstypeQueryBuilder) },
            new() { Name = "subjectareaForErasmus", IsComplex = true, QueryBuilderType = typeof(SubjectAreaQueryBuilder) },
            new() { Name = "videreutdanningsstatus", IsComplex = true, QueryBuilderType = typeof(VidereutdanningsstatusQueryBuilder) },
            new() { Name = "sistEndretDato" },
            new() { Name = "emneKoblinger", IsComplex = true, QueryBuilderType = typeof(StudieprogramEmnekoblingQueryBuilder) },
            new() { Name = "rapporteringTilLanekassen", IsComplex = true, QueryBuilderType = typeof(RapporteringTilLanekassenQueryBuilder) },
            new() { Name = "publiseringsklartITerminer", IsComplex = true, QueryBuilderType = typeof(PubliseringsklartStudieprogramForTerminQueryBuilder) },
            new() { Name = "nusklassifikasjon", IsComplex = true, QueryBuilderType = typeof(NusklassifikasjonQueryBuilder) },
            new() { Name = "programStudieretter", IsComplex = true, QueryBuilderType = typeof(ProgramStudierettQueryBuilder) },
            new() { Name = "utvekslingsavtalekoblinger", IsComplex = true, QueryBuilderType = typeof(StudieprogramUtvekslingsavtaleKoblingQueryBuilder) },
            new() { Name = "studienivaintervallkode" },
            new() { Name = "vitnemalsnavnAlleSprak", IsComplex = true, QueryBuilderType = typeof(StudieprogramVitnemalsnavnAlleSprakQueryBuilder) },
            new() { Name = "fagkoblinger", IsComplex = true, QueryBuilderType = typeof(StudieprogramFagkoblingerQueryBuilder) },
            new() { Name = "datoOpprettet" },
            new() { Name = "utdanningsregisterSpesifikasjonsId" },
            new() { Name = "utdanningsregisterMulighetsId" },
            new() { Name = "erGrunnstudium" },
            new() { Name = "tilbysIPeriode", IsComplex = true, QueryBuilderType = typeof(StudieprogramTilbudsPeriodeQueryBuilder) },
            new() { Name = "skalEksporteresTilUtdanningsregisteret" },
            new() { Name = "samarbeidsinstitusjoner", IsComplex = true, QueryBuilderType = typeof(StudieprogramSamarbeidQueryBuilder) }
        };

        protected override string TypeName => "Studieprogram";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public StudieprogramQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptId() => ExceptField("id");

        public StudieprogramQueryBuilder WithKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("kode", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptKode() => ExceptField("kode");

        public StudieprogramQueryBuilder WithNavnAlleSprak(StudieprogramnavnAlleSprakQueryBuilder studieprogramnavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, studieprogramnavnAlleSprakQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public StudieprogramQueryBuilder WithErAktiv(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erAktiv", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptErAktiv() => ExceptField("erAktiv");

        public StudieprogramQueryBuilder WithBeskrivelsesavsnitt(StudieprogramBeskrivelsesavsnittConnectionQueryBuilder studieprogramBeskrivelsesavsnittConnectionQueryBuilder, QueryBuilderParameter<StudieprogramBeskrivelsesavsnittFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("beskrivelsesavsnitt", alias, studieprogramBeskrivelsesavsnittConnectionQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptBeskrivelsesavsnitt() => ExceptField("beskrivelsesavsnitt");

        public StudieprogramQueryBuilder WithUndervisningsorganisering(UndervisningsorganiseringQueryBuilder undervisningsorganiseringQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("undervisningsorganisering", alias, undervisningsorganiseringQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptUndervisningsorganisering() => ExceptField("undervisningsorganisering");

        public StudieprogramQueryBuilder WithGodkjenning(StudieprogramGodkjenningQueryBuilder studieprogramGodkjenningQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("godkjenning", alias, studieprogramGodkjenningQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptGodkjenning() => ExceptField("godkjenning");

        public StudieprogramQueryBuilder WithVekting(StudieprogramVektingQueryBuilder studieprogramVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vekting", alias, studieprogramVektingQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptVekting() => ExceptField("vekting");

        public StudieprogramQueryBuilder WithProsentHeltid(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("prosentHeltid", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptProsentHeltid() => ExceptField("prosentHeltid");

        public StudieprogramQueryBuilder WithVarighet(StudieprogramvarighetQueryBuilder studieprogramvarighetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("varighet", alias, studieprogramvarighetQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptVarighet() => ExceptField("varighet");

        public StudieprogramQueryBuilder WithStudieoppbygninger(StudieoppbygningForKullQueryBuilder studieoppbygningForKullQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieoppbygninger", alias, studieoppbygningForKullQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudieoppbygninger() => ExceptField("studieoppbygninger");

        public StudieprogramQueryBuilder WithNusKode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("nusKode", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptNusKode() => ExceptField("nusKode");

        public StudieprogramQueryBuilder WithStudieniva(StudienivaQueryBuilder studienivaQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieniva", alias, studienivaQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudieniva() => ExceptField("studieniva");

        public StudieprogramQueryBuilder WithPersonroller(StudieprogramrolleQueryBuilder studieprogramrolleQueryBuilder, QueryBuilderParameter<StudieprogramPersonrollerFilter> filter = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            return WithObjectField("personroller", alias, studieprogramrolleQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptPersonroller() => ExceptField("personroller");

        public StudieprogramQueryBuilder WithStudieretninger(StudieprogramStudieretningerConnectionQueryBuilder studieprogramStudieretningerConnectionQueryBuilder, QueryBuilderParameter<StudieprogramStudieretningerFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("studieretninger", alias, studieprogramStudieretningerConnectionQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptStudieretninger() => ExceptField("studieretninger");

        public StudieprogramQueryBuilder WithCampuser(StudieprogramCampuserConnectionQueryBuilder studieprogramCampuserConnectionQueryBuilder, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("campuser", alias, studieprogramCampuserConnectionQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptCampuser() => ExceptField("campuser");

        public StudieprogramQueryBuilder WithStudieansvarligOrganisasjonsenhet(OrganisasjonsenhetQueryBuilder organisasjonsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieansvarligOrganisasjonsenhet", alias, organisasjonsenhetQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudieansvarligOrganisasjonsenhet() => ExceptField("studieansvarligOrganisasjonsenhet");

        public StudieprogramQueryBuilder WithKull(StudieprogramKullConnectionQueryBuilder studieprogramKullConnectionQueryBuilder, QueryBuilderParameter<StudieprogramKullFilterInput> filter = null, QueryBuilderParameter<StudieprogramKullOrderByInput> orderBy = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (orderBy != null)
                args.Add(new() { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("kull", alias, studieprogramKullConnectionQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptKull() => ExceptField("kull");

        public StudieprogramQueryBuilder WithSkalEksporteresTilLms(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skalEksporteresTilLms", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptSkalEksporteresTilLms() => ExceptField("skalEksporteresTilLms");

        public StudieprogramQueryBuilder WithLmsRomkode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("lmsRomkode", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptLmsRomkode() => ExceptField("lmsRomkode");

        public StudieprogramQueryBuilder WithSkalPubliseres(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skalPubliseres", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptSkalPubliseres() => ExceptField("skalPubliseres");

        public StudieprogramQueryBuilder WithUrlAlleSprak(StudieprogramUrlAlleSprakQueryBuilder studieprogramUrlAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("urlAlleSprak", alias, studieprogramUrlAlleSprakQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptUrlAlleSprak() => ExceptField("urlAlleSprak");

        public StudieprogramQueryBuilder WithUtdanningsomrade(UtdanningsomradeQueryBuilder utdanningsomradeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utdanningsomrade", alias, utdanningsomradeQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptUtdanningsomrade() => ExceptField("utdanningsomrade");

        public StudieprogramQueryBuilder WithSprak(StudieprogramSprakQueryBuilder studieprogramSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("sprak", alias, studieprogramSprakQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptSprak() => ExceptField("sprak");

        public StudieprogramQueryBuilder WithForerTilKvalifikasjon(KvalifikasjonQueryBuilder kvalifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("forerTilKvalifikasjon", alias, kvalifikasjonQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptForerTilKvalifikasjon() => ExceptField("forerTilKvalifikasjon");

        public StudieprogramQueryBuilder WithFsOpptaksterminer(StudieprogramFsOpptaksterminerConnectionQueryBuilder studieprogramFsOpptaksterminerConnectionQueryBuilder, QueryBuilderParameter<IEnumerable<string>> terminer = null, QueryBuilderParameter<IEnumerable<string>> campuser = null, QueryBuilderParameter<bool?> gjelderUhgOpptak = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (terminer != null)
                args.Add(new() { ArgumentName = "terminer", ArgumentValue = terminer} );

            if (campuser != null)
                args.Add(new() { ArgumentName = "campuser", ArgumentValue = campuser} );

            if (gjelderUhgOpptak != null)
                args.Add(new() { ArgumentName = "gjelderUhgOpptak", ArgumentValue = gjelderUhgOpptak} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("fsOpptaksterminer", alias, studieprogramFsOpptaksterminerConnectionQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptFsOpptaksterminer() => ExceptField("fsOpptaksterminer");

        public StudieprogramQueryBuilder WithNavnAlleSprakHistorikk(StudieprogramNavnehistorikkQueryBuilder studieprogramNavnehistorikkQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprakHistorikk", alias, studieprogramNavnehistorikkQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptNavnAlleSprakHistorikk() => ExceptField("navnAlleSprakHistorikk");

        public StudieprogramQueryBuilder WithProsentEgenfinansiering(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("prosentEgenfinansiering", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptProsentEgenfinansiering() => ExceptField("prosentEgenfinansiering");

        public StudieprogramQueryBuilder WithProsentPraksis(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("prosentPraksis", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptProsentPraksis() => ExceptField("prosentPraksis");

        public StudieprogramQueryBuilder WithStudenterSkalHaUtdanningsplan(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("studenterSkalHaUtdanningsplan", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudenterSkalHaUtdanningsplan() => ExceptField("studenterSkalHaUtdanningsplan");

        public StudieprogramQueryBuilder WithStudieprogramkategori(StudieprogramkategoriQueryBuilder studieprogramkategoriQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieprogramkategori", alias, studieprogramkategoriQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudieprogramkategori() => ExceptField("studieprogramkategori");

        public StudieprogramQueryBuilder WithSisteOpptakstermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("sisteOpptakstermin", alias, terminQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptSisteOpptakstermin() => ExceptField("sisteOpptakstermin");

        public StudieprogramQueryBuilder WithFinansieringstype(FinansieringstypeQueryBuilder finansieringstypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("finansieringstype", alias, finansieringstypeQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptFinansieringstype() => ExceptField("finansieringstype");

        public StudieprogramQueryBuilder WithSubjectareaForErasmus(SubjectAreaQueryBuilder subjectAreaQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("subjectareaForErasmus", alias, subjectAreaQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptSubjectareaForErasmus() => ExceptField("subjectareaForErasmus");

        public StudieprogramQueryBuilder WithVidereutdanningsstatus(VidereutdanningsstatusQueryBuilder videreutdanningsstatusQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("videreutdanningsstatus", alias, videreutdanningsstatusQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptVidereutdanningsstatus() => ExceptField("videreutdanningsstatus");

        public StudieprogramQueryBuilder WithSistEndretDato(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("sistEndretDato", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptSistEndretDato() => ExceptField("sistEndretDato");

        public StudieprogramQueryBuilder WithEmneKoblinger(StudieprogramEmnekoblingQueryBuilder studieprogramEmnekoblingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emneKoblinger", alias, studieprogramEmnekoblingQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptEmneKoblinger() => ExceptField("emneKoblinger");

        public StudieprogramQueryBuilder WithRapporteringTilLanekassen(RapporteringTilLanekassenQueryBuilder rapporteringTilLanekassenQueryBuilder, QueryBuilderParameter<IEnumerable<RapporteringTilLanekassenTerminInput>> terminer = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (terminer != null)
                args.Add(new() { ArgumentName = "terminer", ArgumentValue = terminer} );

            return WithObjectField("rapporteringTilLanekassen", alias, rapporteringTilLanekassenQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptRapporteringTilLanekassen() => ExceptField("rapporteringTilLanekassen");

        public StudieprogramQueryBuilder WithPubliseringsklartITerminer(PubliseringsklartStudieprogramForTerminQueryBuilder publiseringsklartStudieprogramForTerminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("publiseringsklartITerminer", alias, publiseringsklartStudieprogramForTerminQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptPubliseringsklartITerminer() => ExceptField("publiseringsklartITerminer");

        public StudieprogramQueryBuilder WithNusklassifikasjon(NusklassifikasjonQueryBuilder nusklassifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("nusklassifikasjon", alias, nusklassifikasjonQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptNusklassifikasjon() => ExceptField("nusklassifikasjon");

        public StudieprogramQueryBuilder WithProgramStudieretter(ProgramStudierettQueryBuilder programStudierettQueryBuilder, QueryBuilderParameter<StudieProgramProgramstudieretterFilterInput> filter = null, QueryBuilderParameter<StudieprogramProgramStudieretterOrderByInput> orderBy = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (orderBy != null)
                args.Add(new() { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            return WithObjectField("programStudieretter", alias, programStudierettQueryBuilder, [include, skip], args);
        }

        public StudieprogramQueryBuilder ExceptProgramStudieretter() => ExceptField("programStudieretter");

        public StudieprogramQueryBuilder WithUtvekslingsavtalekoblinger(StudieprogramUtvekslingsavtaleKoblingQueryBuilder studieprogramUtvekslingsavtaleKoblingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("utvekslingsavtalekoblinger", alias, studieprogramUtvekslingsavtaleKoblingQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptUtvekslingsavtalekoblinger() => ExceptField("utvekslingsavtalekoblinger");

        public StudieprogramQueryBuilder WithStudienivaintervallkode(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("studienivaintervallkode", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptStudienivaintervallkode() => ExceptField("studienivaintervallkode");

        public StudieprogramQueryBuilder WithVitnemalsnavnAlleSprak(StudieprogramVitnemalsnavnAlleSprakQueryBuilder studieprogramVitnemalsnavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vitnemalsnavnAlleSprak", alias, studieprogramVitnemalsnavnAlleSprakQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptVitnemalsnavnAlleSprak() => ExceptField("vitnemalsnavnAlleSprak");

        public StudieprogramQueryBuilder WithFagkoblinger(StudieprogramFagkoblingerQueryBuilder studieprogramFagkoblingerQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("fagkoblinger", alias, studieprogramFagkoblingerQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptFagkoblinger() => ExceptField("fagkoblinger");

        public StudieprogramQueryBuilder WithDatoOpprettet(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("datoOpprettet", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptDatoOpprettet() => ExceptField("datoOpprettet");

        public StudieprogramQueryBuilder WithUtdanningsregisterSpesifikasjonsId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("utdanningsregisterSpesifikasjonsId", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptUtdanningsregisterSpesifikasjonsId() => ExceptField("utdanningsregisterSpesifikasjonsId");

        public StudieprogramQueryBuilder WithUtdanningsregisterMulighetsId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("utdanningsregisterMulighetsId", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptUtdanningsregisterMulighetsId() => ExceptField("utdanningsregisterMulighetsId");

        public StudieprogramQueryBuilder WithErGrunnstudium(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erGrunnstudium", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptErGrunnstudium() => ExceptField("erGrunnstudium");

        public StudieprogramQueryBuilder WithTilbysIPeriode(StudieprogramTilbudsPeriodeQueryBuilder studieprogramTilbudsPeriodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("tilbysIPeriode", alias, studieprogramTilbudsPeriodeQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptTilbysIPeriode() => ExceptField("tilbysIPeriode");

        public StudieprogramQueryBuilder WithSkalEksporteresTilUtdanningsregisteret(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("skalEksporteresTilUtdanningsregisteret", alias, [include, skip]);

        public StudieprogramQueryBuilder ExceptSkalEksporteresTilUtdanningsregisteret() => ExceptField("skalEksporteresTilUtdanningsregisteret");

        public StudieprogramQueryBuilder WithSamarbeidsinstitusjoner(StudieprogramSamarbeidQueryBuilder studieprogramSamarbeidQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("samarbeidsinstitusjoner", alias, studieprogramSamarbeidQueryBuilder, [include, skip]);

        public StudieprogramQueryBuilder ExceptSamarbeidsinstitusjoner() => ExceptField("samarbeidsinstitusjoner");
    }
}
