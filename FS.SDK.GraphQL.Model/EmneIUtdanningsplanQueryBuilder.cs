// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class EmneIUtdanningsplanQueryBuilder : GraphQlQueryBuilder<EmneIUtdanningsplanQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "planlagtVekting", IsComplex = true, QueryBuilderType = typeof(EmneIUtdanningsplanPlanlagtVektingQueryBuilder) },
            new() { Name = "resultater", IsComplex = true, QueryBuilderType = typeof(EmneIUtdanningsplanResultaterConnectionQueryBuilder) },
            new() { Name = "erUndervisningsmeldtIInnevarendeSemester" },
            new() { Name = "erVurderingsmeldt" },
            new() { Name = "vurderingsforsok", IsComplex = true, QueryBuilderType = typeof(VurderingsforsokForEmneQueryBuilder) },
            new() { Name = "emne", IsComplex = true, QueryBuilderType = typeof(EmneQueryBuilder) },
            new() { Name = "samletResultatForEmne", IsComplex = true, QueryBuilderType = typeof(ResultatQueryBuilder) },
            new() { Name = "plassertPaUndervisningspartier", IsComplex = true, QueryBuilderType = typeof(UndervisningspartiplasseringQueryBuilder) },
            new() { Name = "undervisningstermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "vurderingstermin", IsComplex = true, QueryBuilderType = typeof(TerminQueryBuilder) },
            new() { Name = "studieoppbygningsdel", IsComplex = true, QueryBuilderType = typeof(StudieoppbygningsdelQueryBuilder) },
            new() { Name = "emnekategori", IsComplex = true, QueryBuilderType = typeof(EmnekategoriQueryBuilder) },
            new() { Name = "valgregel", IsComplex = true, QueryBuilderType = typeof(EmnevalgregelQueryBuilder) },
            new() { Name = "erErstattet" },
            new() { Name = "opptatt" },
            new() { Name = "sperrEndring" },
            new() { Name = "sperrSletting" },
            new() { Name = "individuellEmnevekting", IsComplex = true, QueryBuilderType = typeof(IndividuellEmnevektingQueryBuilder) },
            new() { Name = "redusertVekting", IsComplex = true, QueryBuilderType = typeof(RedusertEmnevektingQueryBuilder) },
            new() { Name = "vektingIKvalifikasjon", IsComplex = true, QueryBuilderType = typeof(VektingIKvalifikasjonQueryBuilder) },
            new() { Name = "oppgaveTittel", IsComplex = true, QueryBuilderType = typeof(OppgaveTittelQueryBuilder) },
            new() { Name = "spesialpensumTittel", IsComplex = true, QueryBuilderType = typeof(SpesialpensumTittelQueryBuilder) },
            new() { Name = "merknad", IsComplex = true, QueryBuilderType = typeof(EmneIUtdanningsplanMerknadQueryBuilder) },
            new() { Name = "oppnaddVekting", IsComplex = true, QueryBuilderType = typeof(EmneIUtdanningsplanOppnaddVektingQueryBuilder) },
            new() { Name = "emneSoknad", IsComplex = true, QueryBuilderType = typeof(EmneSoknadQueryBuilder) },
            new() { Name = "emneStudierett", IsComplex = true, QueryBuilderType = typeof(EmneStudierettQueryBuilder) },
            new() { Name = "statusBestatt" },
            new() { Name = "vurderingsmeldingerToppNivaa", IsComplex = true, QueryBuilderType = typeof(VurderingsmeldingQueryBuilder) },
            new() { Name = "vurderingsenheterPaToppniva", IsComplex = true, QueryBuilderType = typeof(VurderingsenhetQueryBuilder) }
        };

        protected override string TypeName => "EmneIUtdanningsplan";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public EmneIUtdanningsplanQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptId() => ExceptField("id");

        public EmneIUtdanningsplanQueryBuilder WithPlanlagtVekting(EmneIUtdanningsplanPlanlagtVektingQueryBuilder emneIUtdanningsplanPlanlagtVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("planlagtVekting", alias, emneIUtdanningsplanPlanlagtVektingQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptPlanlagtVekting() => ExceptField("planlagtVekting");

        public EmneIUtdanningsplanQueryBuilder WithResultater(EmneIUtdanningsplanResultaterConnectionQueryBuilder emneIUtdanningsplanResultaterConnectionQueryBuilder, QueryBuilderParameter<EmneIUtdanningsplanResultaterFilterInput> filter = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<string> after = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (filter != null)
                args.Add(new() { ArgumentName = "filter", ArgumentValue = filter} );

            if (first != null)
                args.Add(new() { ArgumentName = "first", ArgumentValue = first} );

            if (after != null)
                args.Add(new() { ArgumentName = "after", ArgumentValue = after} );

            return WithObjectField("resultater", alias, emneIUtdanningsplanResultaterConnectionQueryBuilder, [include, skip], args);
        }

        public EmneIUtdanningsplanQueryBuilder ExceptResultater() => ExceptField("resultater");

        public EmneIUtdanningsplanQueryBuilder WithErUndervisningsmeldtIInnevarendeSemester(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erUndervisningsmeldtIInnevarendeSemester", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptErUndervisningsmeldtIInnevarendeSemester() => ExceptField("erUndervisningsmeldtIInnevarendeSemester");

        public EmneIUtdanningsplanQueryBuilder WithErVurderingsmeldt(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erVurderingsmeldt", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptErVurderingsmeldt() => ExceptField("erVurderingsmeldt");

        public EmneIUtdanningsplanQueryBuilder WithVurderingsforsok(VurderingsforsokForEmneQueryBuilder vurderingsforsokForEmneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsforsok", alias, vurderingsforsokForEmneQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptVurderingsforsok() => ExceptField("vurderingsforsok");

        public EmneIUtdanningsplanQueryBuilder WithEmne(EmneQueryBuilder emneQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emne", alias, emneQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptEmne() => ExceptField("emne");

        public EmneIUtdanningsplanQueryBuilder WithSamletResultatForEmne(ResultatQueryBuilder resultatQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("samletResultatForEmne", alias, resultatQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptSamletResultatForEmne() => ExceptField("samletResultatForEmne");

        public EmneIUtdanningsplanQueryBuilder WithPlassertPaUndervisningspartier(UndervisningspartiplasseringQueryBuilder undervisningspartiplasseringQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("plassertPaUndervisningspartier", alias, undervisningspartiplasseringQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptPlassertPaUndervisningspartier() => ExceptField("plassertPaUndervisningspartier");

        public EmneIUtdanningsplanQueryBuilder WithUndervisningstermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("undervisningstermin", alias, terminQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptUndervisningstermin() => ExceptField("undervisningstermin");

        public EmneIUtdanningsplanQueryBuilder WithVurderingstermin(TerminQueryBuilder terminQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingstermin", alias, terminQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptVurderingstermin() => ExceptField("vurderingstermin");

        public EmneIUtdanningsplanQueryBuilder WithStudieoppbygningsdel(StudieoppbygningsdelQueryBuilder studieoppbygningsdelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieoppbygningsdel", alias, studieoppbygningsdelQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptStudieoppbygningsdel() => ExceptField("studieoppbygningsdel");

        public EmneIUtdanningsplanQueryBuilder WithEmnekategori(EmnekategoriQueryBuilder emnekategoriQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emnekategori", alias, emnekategoriQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptEmnekategori() => ExceptField("emnekategori");

        public EmneIUtdanningsplanQueryBuilder WithValgregel(EmnevalgregelQueryBuilder emnevalgregelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("valgregel", alias, emnevalgregelQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptValgregel() => ExceptField("valgregel");

        public EmneIUtdanningsplanQueryBuilder WithErErstattet(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("erErstattet", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptErErstattet() => ExceptField("erErstattet");

        public EmneIUtdanningsplanQueryBuilder WithOpptatt(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("opptatt", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptOpptatt() => ExceptField("opptatt");

        public EmneIUtdanningsplanQueryBuilder WithSperrEndring(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("sperrEndring", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptSperrEndring() => ExceptField("sperrEndring");

        public EmneIUtdanningsplanQueryBuilder WithSperrSletting(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("sperrSletting", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptSperrSletting() => ExceptField("sperrSletting");

        public EmneIUtdanningsplanQueryBuilder WithIndividuellEmnevekting(IndividuellEmnevektingQueryBuilder individuellEmnevektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("individuellEmnevekting", alias, individuellEmnevektingQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptIndividuellEmnevekting() => ExceptField("individuellEmnevekting");

        public EmneIUtdanningsplanQueryBuilder WithRedusertVekting(RedusertEmnevektingQueryBuilder redusertEmnevektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("redusertVekting", alias, redusertEmnevektingQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptRedusertVekting() => ExceptField("redusertVekting");

        public EmneIUtdanningsplanQueryBuilder WithVektingIKvalifikasjon(VektingIKvalifikasjonQueryBuilder vektingIKvalifikasjonQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vektingIKvalifikasjon", alias, vektingIKvalifikasjonQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptVektingIKvalifikasjon() => ExceptField("vektingIKvalifikasjon");

        public EmneIUtdanningsplanQueryBuilder WithOppgaveTittel(OppgaveTittelQueryBuilder oppgaveTittelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppgaveTittel", alias, oppgaveTittelQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptOppgaveTittel() => ExceptField("oppgaveTittel");

        public EmneIUtdanningsplanQueryBuilder WithSpesialpensumTittel(SpesialpensumTittelQueryBuilder spesialpensumTittelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("spesialpensumTittel", alias, spesialpensumTittelQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptSpesialpensumTittel() => ExceptField("spesialpensumTittel");

        public EmneIUtdanningsplanQueryBuilder WithMerknad(EmneIUtdanningsplanMerknadQueryBuilder emneIUtdanningsplanMerknadQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("merknad", alias, emneIUtdanningsplanMerknadQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptMerknad() => ExceptField("merknad");

        public EmneIUtdanningsplanQueryBuilder WithOppnaddVekting(EmneIUtdanningsplanOppnaddVektingQueryBuilder emneIUtdanningsplanOppnaddVektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("oppnaddVekting", alias, emneIUtdanningsplanOppnaddVektingQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptOppnaddVekting() => ExceptField("oppnaddVekting");

        public EmneIUtdanningsplanQueryBuilder WithEmneSoknad(EmneSoknadQueryBuilder emneSoknadQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emneSoknad", alias, emneSoknadQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptEmneSoknad() => ExceptField("emneSoknad");

        public EmneIUtdanningsplanQueryBuilder WithEmneStudierett(EmneStudierettQueryBuilder emneStudierettQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emneStudierett", alias, emneStudierettQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptEmneStudierett() => ExceptField("emneStudierett");

        public EmneIUtdanningsplanQueryBuilder WithStatusBestatt(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("statusBestatt", alias, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptStatusBestatt() => ExceptField("statusBestatt");

        public EmneIUtdanningsplanQueryBuilder WithVurderingsmeldingerToppNivaa(VurderingsmeldingQueryBuilder vurderingsmeldingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsmeldingerToppNivaa", alias, vurderingsmeldingQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptVurderingsmeldingerToppNivaa() => ExceptField("vurderingsmeldingerToppNivaa");

        public EmneIUtdanningsplanQueryBuilder WithVurderingsenheterPaToppniva(VurderingsenhetQueryBuilder vurderingsenhetQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("vurderingsenheterPaToppniva", alias, vurderingsenhetQueryBuilder, [include, skip]);

        public EmneIUtdanningsplanQueryBuilder ExceptVurderingsenheterPaToppniva() => ExceptField("vurderingsenheterPaToppniva");
    }
}
