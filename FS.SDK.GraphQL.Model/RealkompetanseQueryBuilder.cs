// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace FS.SDK.GraphQL.Model
{
    public partial class RealkompetanseQueryBuilder : GraphQlQueryBuilder<RealkompetanseQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
        {
            new() { Name = "id" },
            new() { Name = "navnAlleSprak", IsComplex = true, QueryBuilderType = typeof(RealkompetansenavnAlleSprakQueryBuilder) },
            new() { Name = "navnOversattAlleSprak", IsComplex = true, QueryBuilderType = typeof(RealkompetansenavnOversattAlleSprakQueryBuilder) },
            new() { Name = "beskrivelse", IsComplex = true, QueryBuilderType = typeof(RealkompetansebeskrivelseQueryBuilder) },
            new() { Name = "realkompetansevekting", IsComplex = true, QueryBuilderType = typeof(RealkompetansevektingQueryBuilder) },
            new() { Name = "studieoppbygningsdel", IsComplex = true, QueryBuilderType = typeof(StudieoppbygningsdelQueryBuilder) },
            new() { Name = "emnekategori", IsComplex = true, QueryBuilderType = typeof(EmnekategoriQueryBuilder) },
            new() { Name = "periode", IsComplex = true, QueryBuilderType = typeof(RealkompetanseperiodeQueryBuilder) }
        };

        protected override string TypeName => "Realkompetanse";

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields => AllFieldMetadata;

        public RealkompetanseQueryBuilder WithId(string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithScalarField("id", alias, [include, skip]);

        public RealkompetanseQueryBuilder ExceptId() => ExceptField("id");

        public RealkompetanseQueryBuilder WithNavnAlleSprak(RealkompetansenavnAlleSprakQueryBuilder realkompetansenavnAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnAlleSprak", alias, realkompetansenavnAlleSprakQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptNavnAlleSprak() => ExceptField("navnAlleSprak");

        public RealkompetanseQueryBuilder WithNavnOversattAlleSprak(RealkompetansenavnOversattAlleSprakQueryBuilder realkompetansenavnOversattAlleSprakQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("navnOversattAlleSprak", alias, realkompetansenavnOversattAlleSprakQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptNavnOversattAlleSprak() => ExceptField("navnOversattAlleSprak");

        public RealkompetanseQueryBuilder WithBeskrivelse(RealkompetansebeskrivelseQueryBuilder realkompetansebeskrivelseQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("beskrivelse", alias, realkompetansebeskrivelseQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptBeskrivelse() => ExceptField("beskrivelse");

        public RealkompetanseQueryBuilder WithRealkompetansevekting(RealkompetansevektingQueryBuilder realkompetansevektingQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("realkompetansevekting", alias, realkompetansevektingQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptRealkompetansevekting() => ExceptField("realkompetansevekting");

        public RealkompetanseQueryBuilder WithStudieoppbygningsdel(StudieoppbygningsdelQueryBuilder studieoppbygningsdelQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("studieoppbygningsdel", alias, studieoppbygningsdelQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptStudieoppbygningsdel() => ExceptField("studieoppbygningsdel");

        public RealkompetanseQueryBuilder WithEmnekategori(EmnekategoriQueryBuilder emnekategoriQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("emnekategori", alias, emnekategoriQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptEmnekategori() => ExceptField("emnekategori");

        public RealkompetanseQueryBuilder WithPeriode(RealkompetanseperiodeQueryBuilder realkompetanseperiodeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null) => WithObjectField("periode", alias, realkompetanseperiodeQueryBuilder, [include, skip]);

        public RealkompetanseQueryBuilder ExceptPeriode() => ExceptField("periode");
    }
}
